#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Begins process loop checking BCAG acromag communication and fault status
# 
# Here at the beginning of the loop the up pulse of a heartbeat signal is
# sent to PLC confirming proper operation and communication between the
# BCAG Acromag I/O, the IOC, and the PLC
# 
# At the end of the loop the down pulse heartbeat signal will be sent to
# PLC
record(bo, "$(SubSys):HBUP") {
  field(SCAN, "1 second")
  field(FLNK, "$(SubSys):ModuleStatus")
  field(VAL, "1")
  field(OUT, "$(SubSys):Heartbeat.VAL PP")
}

# Send Heartbeat down pulse to PLC after checking BCAG Current against Limits
record(bo, "$(SubSys):Heartbeat") {
  field(OUT, "$(SubSys):Heartbeat:Write PP")
}

# .5 sec delay to give reasonble shape to Heartbeat pulse train.
# To particle beam interock.
record(seq, "$(SubSys):HBDelay") {
  field(SELM, "All")
  field(DLY1, ".5")
  field(LNK1, "$(SubSys):ParticleBeam:Interlock:Status.PROC")
  field(DOL1, "1")
}

# Processes record that Sends Heartbeat down pulse to PLC after checking
# BCAG Current against Limits.
# 
# This record is FLINKed to by "BCAG:ParticleBeam:Interlock:Status" in
# BCAGCondition.vdb, which is called by BCAG:PREADPSET:PDIFF:Calc2 in
# BCAGAnalog.vdb at the end of the process chain.
# 
# This record outputs a 0 value to the record that writes the heartbeat
# bit in the modicon plc.
record(bo, "$(SubSys):HBDOWN") {
  field(VAL, "0")
  field(OUT, "$(SubSys):Heartbeat.VAL PP")
}

# Read BCAG Current from BCAG acromag via asyn
# Asyn polls device and this reads
# the PV in.
record(ai, "$(SubSys):Target:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(BCAGRead, 9, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):Target:ConvRead")
  field(SCAN, "I/O Intr")
}

# Convert Raw data to reading in Amps. This record is setup such that it cannot go below 0. It is done so to prevent
# erratic voltage flucatations around 0 amps that occur, most likely b/c of the acromag (needs to be investigated).
record(calcout, "$(SubSys):Target:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*$(TargetReadMult)")
  field(INPA, "$(SubSys):Target:GetRead.VAL")
  field(OUT, "$(SubSys):Target:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "uA")
  field(PREC, "2")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0.01")
  field(LOLO, "0")
  field(LLSV, "INVALID")
}

# BCAG Current PREAD
# Should trip at 80
record(ai, "$(SubSys):Target:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "uA")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(HIHI, "500")
  field(LOLO, "0")
  field(HIGH, "72")
  field(LOW, "0")
}

# Read BCAG Current from BCAG acromag via asyn
# Asyn polls device and this reads
# the PV in.
record(ai, "$(SubSys):QuadUp:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(BCAGRead, 10, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):QuadUp:ConvRead")
  field(SCAN, "I/O Intr")
}

# Convert Raw data to reading in Amps. This record is setup such that it cannot go below 0. It is done so to prevent
# erratic voltage flucatations around 0 amps that occur, most likely b/c of the acromag (needs to be investigated).
record(calcout, "$(SubSys):QuadUp:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*$(QuadUpReadMult)")
  field(INPA, "$(SubSys):QuadUp:GetRead.VAL")
  field(OUT, "$(SubSys):QuadUp:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "uA")
  field(PREC, "2")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0.01")
  field(LOLO, "0")
  field(LLSV, "INVALID")
}

# BCAG Current PREAD
# Should trip at 1.7
record(ai, "$(SubSys):QuadUp:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "uA")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(HIHI, "100")
  field(LOLO, "0")
  field(HIGH, "1.53")
  field(LOW, "0")
}

# Convert Raw data to reading in Amps. This record is setup such that it cannot go below 0. It is done so to prevent
# erratic voltage flucatations around 0 amps that occur, most likely b/c of the acromag (needs to be investigated).
record(calcout, "$(SubSys):QuadDown:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*$(QuadDownReadMult)")
  field(INPA, "$(SubSys):QuadDown:GetRead.VAL")
  field(OUT, "$(SubSys):QuadDown:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "uA")
  field(PREC, "2")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0.01")
  field(LOLO, "0")
  field(LLSV, "INVALID")
}

# BCAG Current PREAD
# Should trip at 1.7
record(ai, "$(SubSys):QuadDown:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "uA")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(HIHI, "100")
  field(LOLO, "0")
  field(HIGH, "1.53")
  field(LOW, "0")
}

# Read BCAG Current from BCAG acromag via asyn
# Asyn polls device and this reads
# the PV in.
record(ai, "$(SubSys):QuadDown:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(BCAGRead, 11, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):QuadDown:ConvRead")
  field(SCAN, "I/O Intr")
}

# BCAG Current PREAD
# Should trip at 1.7
record(ai, "$(SubSys):QuadLeft:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "uA")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(HIHI, "100")
  field(LOLO, "0")
  field(HIGH, "1.53")
  field(LOW, "0")
}

# Read BCAG Current from BCAG acromag via asyn
# Asyn polls device and this reads
# the PV in.
record(ai, "$(SubSys):QuadLeft:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(BCAGRead, 12, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):QuadLeft:ConvRead")
  field(SCAN, "I/O Intr")
}

# Convert Raw data to reading in Amps. This record is setup such that it cannot go below 0. It is done so to prevent
# erratic voltage flucatations around 0 amps that occur, most likely b/c of the acromag (needs to be investigated).
record(calcout, "$(SubSys):QuadLeft:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*$(QuadLeftReadMult)")
  field(INPA, "$(SubSys):QuadLeft:GetRead.VAL")
  field(OUT, "$(SubSys):QuadLeft:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "uA")
  field(PREC, "2")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0.01")
  field(LOLO, "0")
  field(LLSV, "INVALID")
}

# BCAG Current PREAD
# Should trip at 1.7
record(ai, "$(SubSys):QuadRight:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "uA")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(HIHI, "100")
  field(LOLO, "0")
  field(HIGH, "1.53")
  field(LOW, "0")
}

# Read BCAG Current from BCAG acromag via asyn
# Asyn polls device and this reads
# the PV in.
record(ai, "$(SubSys):QuadRight:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(BCAGRead, 13, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):QuadRight:ConvRead")
  field(SCAN, "I/O Intr")
}

# Convert Raw data to reading in Amps. This record is setup such that it cannot go below 0. It is done so to prevent
# erratic voltage flucatations around 0 amps that occur, most likely b/c of the acromag (needs to be investigated).
record(calcout, "$(SubSys):QuadRight:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*$(QuadRightReadMult)")
  field(INPA, "$(SubSys):QuadRight:GetRead.VAL")
  field(OUT, "$(SubSys):QuadRight:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "uA")
  field(PREC, "2")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0.01")
  field(LOLO, "0")
  field(LLSV, "INVALID")
}

# The PV that it FLINKs to is
# "BCAG:ParticleBeam:Interlock:Status" and is a record in BCAGCondition.vdb
# that sums up all the interlock conditions, then passes this value to
# a bit in the modicon PLC, BCAG:NoFault:Write. "BCAG:ParticleBeam:Interlock:Status"
# also FLINKs back to BCAG:HBDown, in BCAGAnalog.vdb.
# Should trip at 0.7
record(ai, "$(SubSys):SBDG:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "uA")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(HIHI, "100")
  field(LOLO, "0")
  field(HIGH, ".63")
  field(LOW, "0")
}

# Read BCAG Current from BCAG acromag via asyn
# Asyn polls device and this reads
# the PV in.
record(ai, "$(SubSys):SBDG:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(BCAGRead, 14, -16, 1000)MODBUS_DATA")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(SubSys):SBDG:ConvRead")
}

# Convert Raw data to reading in Amps. This record is setup such that it cannot go below 0. It is done so to prevent
# erratic voltage flucatations around 0 amps that occur, most likely b/c of the acromag (needs to be investigated).
record(calcout, "$(SubSys):SBDG:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*$(SBDGReadMult)")
  field(INPA, "$(SubSys):SBDG:GetRead.VAL")
  field(OUT, "$(SubSys):SBDG:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "uA")
  field(PREC, "2")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0.01")
  field(LOLO, "0")
  field(LLSV, "INVALID")
}

record(calcout, "$(SubSys):ReadAcromagAIError:Check") {
  field(CALC, "!(A=0)")
  field(INPA, "$(SubSys):ModuleStatus.STAT")
  field(OUT, "$(SubSys):CommError:Status PP")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
  field(FLNK, "$(SubSys):ReadAcromagStatus:Check")
}

record(calcout, "$(SubSys):ReadAcromagStatus:Check") {
  field(FLNK, "$(SubSys):HBDelay")
  field(CALC, "!(A=0)")
  field(INPA, "$(SubSys):ModuleStatus.VAL")
  field(OUT, "$(SubSys):HardwareError:Status PP")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
}

record(ai, "$(SubSys):ModuleStatus") {
  field(SCAN, "Passive")
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(BCAGRead, 0, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):ReadAcromagAIError:Check")
}

#! Further lines contain data used by VisualDCT
#! View(1782,2917,1.0)
#! Record("$(SubSys):HBUP",160,1528,0,1,"$(SubSys):HBUP")
#! Field("$(SubSys):HBUP.FLNK",16777215,1,"$(SubSys):HBUP.FLNK")
#! Link("$(SubSys):HBUP.FLNK","$(SubSys):ModuleStatus")
#! Field("$(SubSys):HBUP.OUT",16777215,1,"$(SubSys):HBUP.OUT")
#! Link("$(SubSys):HBUP.OUT","$(SubSys):Heartbeat.VAL")
#! Record("$(SubSys):Heartbeat",280,2170,0,1,"$(SubSys):Heartbeat")
#! Field("$(SubSys):Heartbeat.VAL",16777215,1,"$(SubSys):Heartbeat.VAL")
#! Field("$(SubSys):Heartbeat.OUT",16777215,1,"$(SubSys):Heartbeat.OUT")
#! Record("$(SubSys):HBDelay",1740,1528,0,0,"$(SubSys):HBDelay")
#! Field("$(SubSys):HBDelay.LNK1",16777215,1,"$(SubSys):HBDelay.LNK1")
#! Record("$(SubSys):HBDOWN",660,2496,0,1,"$(SubSys):HBDOWN")
#! Field("$(SubSys):HBDOWN.OUT",16777215,0,"$(SubSys):HBDOWN.OUT")
#! Link("$(SubSys):HBDOWN.OUT","$(SubSys):Heartbeat.VAL")
#! Record("$(SubSys):Target:GetRead",2140,1088,0,1,"$(SubSys):Target:GetRead")
#! Field("$(SubSys):Target:GetRead.FLNK",16777215,1,"$(SubSys):Target:GetRead.FLNK")
#! Link("$(SubSys):Target:GetRead.FLNK","$(SubSys):Target:ConvRead")
#! Field("$(SubSys):Target:GetRead.VAL",16777215,1,"$(SubSys):Target:GetRead.VAL")
#! Record("$(SubSys):Target:ConvRead",2480,1057,0,0,"$(SubSys):Target:ConvRead")
#! Field("$(SubSys):Target:ConvRead.INPA",16777215,0,"$(SubSys):Target:ConvRead.INPA")
#! Link("$(SubSys):Target:ConvRead.INPA","$(SubSys):Target:GetRead.VAL")
#! Field("$(SubSys):Target:ConvRead.OUT",16777215,1,"$(SubSys):Target:ConvRead.OUT")
#! Link("$(SubSys):Target:ConvRead.OUT","$(SubSys):Target:Read.VAL")
#! Record("$(SubSys):Target:Read",2780,1057,0,1,"$(SubSys):Target:Read")
#! Field("$(SubSys):Target:Read.VAL",16777215,0,"$(SubSys):Target:Read.VAL")
#! Record("$(SubSys):QuadUp:GetRead",2120,1388,0,0,"$(SubSys):QuadUp:GetRead")
#! Field("$(SubSys):QuadUp:GetRead.FLNK",16777215,1,"$(SubSys):QuadUp:GetRead.FLNK")
#! Link("$(SubSys):QuadUp:GetRead.FLNK","$(SubSys):QuadUp:ConvRead")
#! Field("$(SubSys):QuadUp:GetRead.VAL",16777215,1,"$(SubSys):QuadUp:GetRead.VAL")
#! Record("$(SubSys):QuadUp:ConvRead",2460,1397,0,0,"$(SubSys):QuadUp:ConvRead")
#! Field("$(SubSys):QuadUp:ConvRead.INPA",16777215,0,"$(SubSys):QuadUp:ConvRead.INPA")
#! Link("$(SubSys):QuadUp:ConvRead.INPA","$(SubSys):QuadUp:GetRead.VAL")
#! Field("$(SubSys):QuadUp:ConvRead.OUT",16777215,1,"$(SubSys):QuadUp:ConvRead.OUT")
#! Link("$(SubSys):QuadUp:ConvRead.OUT","$(SubSys):QuadUp:Read.VAL")
#! Record("$(SubSys):QuadUp:Read",2800,1417,0,1,"$(SubSys):QuadUp:Read")
#! Field("$(SubSys):QuadUp:Read.VAL",16777215,0,"$(SubSys):QuadUp:Read.VAL")
#! Record("$(SubSys):QuadDown:ConvRead",2440,1877,0,0,"$(SubSys):QuadDown:ConvRead")
#! Field("$(SubSys):QuadDown:ConvRead.INPA",16777215,0,"$(SubSys):QuadDown:ConvRead.INPA")
#! Link("$(SubSys):QuadDown:ConvRead.INPA","$(SubSys):QuadDown:GetRead.VAL")
#! Field("$(SubSys):QuadDown:ConvRead.OUT",16777215,1,"$(SubSys):QuadDown:ConvRead.OUT")
#! Link("$(SubSys):QuadDown:ConvRead.OUT","$(SubSys):QuadDown:Read.VAL")
#! Record("$(SubSys):QuadDown:Read",2800,1897,0,1,"$(SubSys):QuadDown:Read")
#! Field("$(SubSys):QuadDown:Read.VAL",16777215,0,"$(SubSys):QuadDown:Read.VAL")
#! Record("$(SubSys):QuadDown:GetRead",2100,1908,0,1,"$(SubSys):QuadDown:GetRead")
#! Field("$(SubSys):QuadDown:GetRead.FLNK",16777215,1,"$(SubSys):QuadDown:GetRead.FLNK")
#! Link("$(SubSys):QuadDown:GetRead.FLNK","$(SubSys):QuadDown:ConvRead")
#! Field("$(SubSys):QuadDown:GetRead.VAL",16777215,1,"$(SubSys):QuadDown:GetRead.VAL")
#! Record("$(SubSys):QuadLeft:Read",2800,2377,0,1,"$(SubSys):QuadLeft:Read")
#! Field("$(SubSys):QuadLeft:Read.VAL",16777215,0,"$(SubSys):QuadLeft:Read.VAL")
#! Record("$(SubSys):QuadLeft:GetRead",2100,2428,0,1,"$(SubSys):QuadLeft:GetRead")
#! Field("$(SubSys):QuadLeft:GetRead.FLNK",16777215,1,"$(SubSys):QuadLeft:GetRead.FLNK")
#! Link("$(SubSys):QuadLeft:GetRead.FLNK","$(SubSys):QuadLeft:ConvRead")
#! Field("$(SubSys):QuadLeft:GetRead.VAL",16777215,1,"$(SubSys):QuadLeft:GetRead.VAL")
#! Record("$(SubSys):QuadLeft:ConvRead",2440,2377,0,0,"$(SubSys):QuadLeft:ConvRead")
#! Field("$(SubSys):QuadLeft:ConvRead.INPA",16777215,0,"$(SubSys):QuadLeft:ConvRead.INPA")
#! Link("$(SubSys):QuadLeft:ConvRead.INPA","$(SubSys):QuadLeft:GetRead.VAL")
#! Field("$(SubSys):QuadLeft:ConvRead.OUT",16777215,1,"$(SubSys):QuadLeft:ConvRead.OUT")
#! Link("$(SubSys):QuadLeft:ConvRead.OUT","$(SubSys):QuadLeft:Read.VAL")
#! Record("$(SubSys):QuadRight:Read",2800,2897,0,1,"$(SubSys):QuadRight:Read")
#! Field("$(SubSys):QuadRight:Read.VAL",16777215,0,"$(SubSys):QuadRight:Read.VAL")
#! Record("$(SubSys):QuadRight:GetRead",2080,2928,0,1,"$(SubSys):QuadRight:GetRead")
#! Field("$(SubSys):QuadRight:GetRead.FLNK",16777215,1,"$(SubSys):QuadRight:GetRead.FLNK")
#! Link("$(SubSys):QuadRight:GetRead.FLNK","$(SubSys):QuadRight:ConvRead")
#! Field("$(SubSys):QuadRight:GetRead.VAL",16777215,1,"$(SubSys):QuadRight:GetRead.VAL")
#! Record("$(SubSys):QuadRight:ConvRead",2440,2877,0,0,"$(SubSys):QuadRight:ConvRead")
#! Field("$(SubSys):QuadRight:ConvRead.INPA",16777215,0,"$(SubSys):QuadRight:ConvRead.INPA")
#! Link("$(SubSys):QuadRight:ConvRead.INPA","$(SubSys):QuadRight:GetRead.VAL")
#! Field("$(SubSys):QuadRight:ConvRead.OUT",16777215,1,"$(SubSys):QuadRight:ConvRead.OUT")
#! Link("$(SubSys):QuadRight:ConvRead.OUT","$(SubSys):QuadRight:Read.VAL")
#! Record("$(SubSys):SBDG:Read",2800,3317,0,1,"$(SubSys):SBDG:Read")
#! Field("$(SubSys):SBDG:Read.VAL",16777215,0,"$(SubSys):SBDG:Read.VAL")
#! Record("$(SubSys):SBDG:GetRead",2080,3328,0,1,"$(SubSys):SBDG:GetRead")
#! Field("$(SubSys):SBDG:GetRead.FLNK",16777215,1,"$(SubSys):SBDG:GetRead.FLNK")
#! Link("$(SubSys):SBDG:GetRead.FLNK","$(SubSys):SBDG:ConvRead")
#! Field("$(SubSys):SBDG:GetRead.VAL",16777215,1,"$(SubSys):SBDG:GetRead.VAL")
#! Record("$(SubSys):SBDG:ConvRead",2420,3297,0,0,"$(SubSys):SBDG:ConvRead")
#! Field("$(SubSys):SBDG:ConvRead.INPA",16777215,0,"$(SubSys):SBDG:ConvRead.INPA")
#! Link("$(SubSys):SBDG:ConvRead.INPA","$(SubSys):SBDG:GetRead.VAL")
#! Field("$(SubSys):SBDG:ConvRead.OUT",16777215,1,"$(SubSys):SBDG:ConvRead.OUT")
#! Link("$(SubSys):SBDG:ConvRead.OUT","$(SubSys):SBDG:Read.VAL")
#! Record("$(SubSys):ReadAcromagAIError:Check",860,1406,0,0,"$(SubSys):ReadAcromagAIError:Check")
#! Field("$(SubSys):ReadAcromagAIError:Check.INPA",16777215,0,"$(SubSys):ReadAcromagAIError:Check.INPA")
#! Link("$(SubSys):ReadAcromagAIError:Check.INPA","$(SubSys):ModuleStatus.STAT")
#! Field("$(SubSys):ReadAcromagAIError:Check.OUT",16777215,1,"$(SubSys):ReadAcromagAIError:Check.OUT")
#! Field("$(SubSys):ReadAcromagAIError:Check.FLNK",16777215,1,"$(SubSys):ReadAcromagAIError:Check.FLNK")
#! Link("$(SubSys):ReadAcromagAIError:Check.FLNK","$(SubSys):ReadAcromagStatus:Check")
#! Record("$(SubSys):ReadAcromagStatus:Check",1160,1466,0,0,"$(SubSys):ReadAcromagStatus:Check")
#! Field("$(SubSys):ReadAcromagStatus:Check.FLNK",16777215,1,"$(SubSys):ReadAcromagStatus:Check.FLNK")
#! Link("$(SubSys):ReadAcromagStatus:Check.FLNK","$(SubSys):HBDelay")
#! Field("$(SubSys):ReadAcromagStatus:Check.INPA",16777215,0,"$(SubSys):ReadAcromagStatus:Check.INPA")
#! Link("$(SubSys):ReadAcromagStatus:Check.INPA","$(SubSys):ModuleStatus.VAL")
#! Field("$(SubSys):ReadAcromagStatus:Check.OUT",16777215,1,"$(SubSys):ReadAcromagStatus:Check.OUT")
#! Record("$(SubSys):ModuleStatus",540,1428,0,0,"$(SubSys):ModuleStatus")
#! Field("$(SubSys):ModuleStatus.FLNK",16777215,1,"$(SubSys):ModuleStatus.FLNK")
#! Link("$(SubSys):ModuleStatus.FLNK","$(SubSys):ReadAcromagAIError:Check")
#! Field("$(SubSys):ModuleStatus.STAT",16777215,1,"$(SubSys):ModuleStatus.STAT")
#! Field("$(SubSys):ModuleStatus.VAL",16777215,1,"$(SubSys):ModuleStatus.VAL")
#! TextBox(TB2,60,1380,320,1300,0,"Dialog",14,1,13369344,"Loop that Reads BCAG Current, checks for acromag faults and comm errors, and generates heartbeat to send to modicon",null)
#! TextBox(TB1,1500,280,1760,200,0,"Dialog",28,1,13369344,"Read BCAG Voltage",null)
