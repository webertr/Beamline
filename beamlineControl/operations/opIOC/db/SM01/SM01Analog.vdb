#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBD("/usrs/local/cnts/epics/operations/opIOC/dbd/beamline.dbd")
#! DBDEND


# Set magnitude for device coming from
# paramset.vdb
record(ai, "$(Group):$(Device):$(Param):SetDevice") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(Group):$(Device):$(Param):ParseSet")
  field(PREC, "$(Prec)")
}

# Put Current Value into GPIB String
record(scalcout, "$(Group):$(Device):$(Param):ParseSet") {
  field(CALC, "PRINTF('ISET %1.4f',A)")
  field(INPA, "$(Group):$(Device):$(Param):SetDevice.VAL")
  field(OUT, "$(Group):$(Device):$(Param):SendSet.AOUT PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(SCAN, "Passive")
  field(PREC, "1")
}

# Send Out Current Value GPIB
# Message to Supply
record(asyn, "$(Group):$(Device):$(Param):SendSet") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(ADDR, "$(R)")
  field(OMAX, "4096")
  field(IMAX, "4096")
  field(OEOS, "10")
  field(IEOS, "10")
  field(TMOD, "Write")
  field(SCAN, "Passive")
  field(TMOT, "1")
}

# Send gpib request to supply for voltage
# value. Disable record processing when
# device is off
record(asyn, "$(Group):$(Device):Volt:GetRead") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(ADDR, "$(R)")
  field(OMAX, "4096")
  field(IMAX, "4096")
  field(SCAN, "Passive")
  field(AOUT, "VOUT?")
  field(OEOS, "10")
  field(IEOS, "10")
  field(FLNK, "$(Group):$(Device):Volt:ParseRead")
  field(TMOD, "Write/Read")
  field(TMOT, "1")
  field(DISV, "0")
  field(SDIS, "$(Group):On:Status")
}

# Parse string from power supply
# containing voltage value
record(scalcout, "$(Group):$(Device):Volt:ParseRead") {
  field(CALC, "SSCANF(AA, '%*5c%lf')")
  field(INAA, "$(Group):$(Device):Volt:GetRead.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):Volt:Read")
}

# Voltage is product of voltage value
# and On status.  Thus if supply is off,
# the voltage value will be zero
record(calc, "$(Group):$(Device):Volt:Read") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):$(Param):SetToChk2")
  field(CALC, "A*B")
  field(INPA, "$(Group):$(Device):Volt:ParseRead.VAL")
  field(INPB, "$(Group):On:Status.VAL")
  field(EGU, "V")
  field(PREC, "2")
}

# Value of PSET in the Previous scan.
# If the pset is changing from scan to scan, the PSET-Pread<PDiff will not be used.
# Checking this condition is difficult while PSET is changing
# because it changes so much faster than PREAD does.
record(calcout, "$(Group):$(Device):$(Param):SetToChk2") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):$(Param):SetToChk")
  field(CALC, "A")
  field(INPA, "$(Group):$(Device):$(Param):SetToChk.VAL")
  field(PREC, "4")
}

# Current Value of PSET to be compared with the value of
# PSET during the previous scan.  If they are different,
# this indicates that PSET is changing and the PDIFF
# check will not be made
record(calcout, "$(Group):$(Device):$(Param):SetToChk") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):$(Param):GetRead")
  field(CALC, "A")
  field(INPA, "$(Group):$(Device):$(Param):Set")
  field(PREC, "4")
}

# acquiring the current value from the powersupply.
# Disable record when device is off
record(asyn, "$(Group):$(Device):$(Param):GetRead") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(ADDR, "$(R)")
  field(OMAX, "4096")
  field(IMAX, "4096")
  field(SCAN, "Passive")
  field(AOUT, "IOUT?")
  field(OEOS, "10")
  field(IEOS, "10")
  field(FLNK, "$(Group):$(Device):$(Param):CommCheck")
  field(TMOD, "Write/Read")
  field(TMOT, "1")
  field(DISV, "0")
  field(SDIS, "$(Group):On:Status")
}

# Parses the current string from the asyn record
record(scalcout, "$(Group):$(Device):$(Param):ParseRead") {
  field(CALC, "SSCANF(AA, '%*5c%lf')")
  field(INAA, "$(Group):$(Device):$(Param):GetRead.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):$(Param):Read")
}

# Check the error status of the asyn record acquiring the
# current value.  Anything other than zero indicates a
# problem with the asyn communication
record(scalcout, "$(Group):$(Device):$(Param):CommCheck") {
  field(FLNK, "$(Group):$(Device):$(Param):ReadCommError:Calc")
  field(CALC, "(AA!=0)")
  field(INAA, "$(Group):$(Device):$(Param):GetRead.ERRS")
}

# Check the error status of the asyn record acquiring the
# current value.  Anything other than zero indicates a
# problem with the asyn communication
record(calcout, "$(Group):$(Device):$(Param):ReadCommError:Calc") {
  field(CALC, "A")
  field(INPA, "$(Group):$(Device):$(Param):CommCheck.VAL")
  field(OUT, "$(Group):$(Device):$(Param):ReadCommError:True.PROC PP")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(Group):$(Device):$(Param):ParseRead")
}

# Sets the COMM Error flag to true
# Disabled if device is off
record(bo, "$(Group):$(Device):$(Param):ReadCommError:True") {
  field(FLNK, "$(Group):$(Device):$(Param):ReadCommError:Report")
  field(OUT, "$(Group):$(Device):CommError:Status PP")
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(DISV, "0")
  field(SDIS, "$(Group):On:Status")
}

# Logs Comm error
record(stringout, "$(Group):$(Device):$(Param):ReadCommError:Report") {
  field(VAL, "$(Device) Comm Error")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(DISV, "0")
  field(SDIS, "$(Group):On:Status")
}

# PDIFF calculation used to check if the difference
# between pset and pread is getting "close" to pdiff.
# This is used to turn pread and pset yellow on the
# operator displays.
record(calc, "$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2") {
  field(DESC, "compare set readback values.")
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc")
  field(CALC, "(ABS(A -B) > (.5*C))&(A=D)")
  field(INPA, "$(Group):$(Device):$(Param):SetToChk.VAL ")
  field(INPB, "$(Group):$(Device):$(Param):Read.VAL")
  field(INPC, "$(Group):$(Device):$(Param):PDIFF PP")
  field(INPD, "$(Group):$(Device):$(Param):SetToChk2.VAL")
}

# Checking the PSET-PREAD<Pdiff requirement.
# 
# If the pset has changed once the current has
# been read (the A+D condition in the calc field)
# , the PSET-Pread<PDiff will not be used.
# Checking this condition is difficult while PSET is changing
# because it changes so much faster than PREAD does.
record(calcout, "$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc") {
  field(DESC, "compare set readback values.")
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2")
  field(CALC, "(((ABS(A -B)) > C)&(A=D))")
  field(INPA, "$(Group):$(Device):$(Param):SetToChk.VAL ")
  field(INPB, "$(Group):$(Device):$(Param):Read.VAL")
  field(INPC, "$(Group):$(Device):$(Param):PDIFF PP")
  field(INPD, "$(Group):$(Device):$(Param):SetToChk2.VAL")
  field(OUT, "$(Group):$(Device):$(Param):ReadPDIFF:Report.PROC")
  field(OOPT, "Transition To Non-zero")
}

# Log pdiff interlock
record(stringout, "$(Group):$(Device):$(Param):ReadPDIFF:Report") {
  field(VAL, "$(Device) PREAD-PSET Diff Error")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(SDIS, "$(Group):InitializingorShuttingDown")
}

# Checks Pread less than or equal to PLow
record(calcout, "$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc") {
  field(FLNK, "$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc")
  field(CALC, "(A<B)|(A=B)")
  field(INPA, "$(Group):$(Device):$(Param):Read.VAL")
  field(INPB, "$(Group):$(Device):$(Param):PLOW")
  field(OUT, "$(Group):$(Device):$(Param):PLow:Error:String.PROC PP")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use CALC")
}

# Logs Pread less than or equal to PLow Interlock
record(stringout, "$(Group):$(Device):$(Param):PLow:Error:String") {
  field(VAL, "$(Device) < PLow ")
  field(OUT, "CCC:OpsDisplay:System:Write CC PP")
  field(SDIS, "$(Group):InitializingorShuttingDown")
}

# Current value is zero if device is off
record(calc, "$(Group):$(Device):$(Param):Read") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc")
  field(CALC, "A*B")
  field(INPA, "$(Group):$(Device):$(Param):ParseRead.VAL")
  field(INPB, "$(Group):On:Status.VAL")
  field(EGU, "A")
  field(PREC, "2")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
}

# Checks Pread greater than or equal to PHigh
record(calcout, "$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc") {
  field(INPA, "$(Group):$(Device):$(Param):Read.VAL")
  field(INPB, "$(Group):$(Device):$(Param):PHIGH")
  field(OUT, "$(Group):$(Device):$(Param):PHigh:Error:String.PROC PP")
  field(CALC, "(A>B)|(A=B)")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use CALC")
  field(FLNK, "$(Group):$(Device):ParticleBeam:Interlock:Status")
}

# Logs Pread greater than or equal to PHigh Interlock
record(stringout, "$(Group):$(Device):$(Param):PHigh:Error:String") {
  field(VAL, "$(Group) > PHigh")
  field(OUT, "CCC:OpsDisplay:System:Write CC PP")
  field(SDIS, "$(Group):InitializingorShuttingDown")
}

#! Further lines contain data used by VisualDCT
#! View(4168,3382,1.2)
#! TextBox(TB0,940,200,240,240,0,"Dialog",24,1,13369395,"Send current set parameter to ISM power supply",null)
#! TextBox(TB1,878,1168,180,1240,0,"Dialog",24,1,13369395,"Get voltage and current from ISM power supply\nand check for window interlocks",null)
#! Record("$(Group):$(Device):$(Param):SetDevice",140,325,0,1,"$(Group):$(Device):$(Param):SetDevice")
#! Field("$(Group):$(Device):$(Param):SetDevice.FLNK",16777215,1,"$(Group):$(Device):$(Param):SetDevice.FLNK")
#! Link("$(Group):$(Device):$(Param):SetDevice.FLNK","$(Group):$(Device):$(Param):ParseSet")
#! Field("$(Group):$(Device):$(Param):SetDevice.VAL",16777215,1,"$(Group):$(Device):$(Param):SetDevice.VAL")
#! Record("$(Group):$(Device):$(Param):ParseSet",520,363,0,0,"$(Group):$(Device):$(Param):ParseSet")
#! Field("$(Group):$(Device):$(Param):ParseSet.INPA",16777215,0,"$(Group):$(Device):$(Param):ParseSet.INPA")
#! Link("$(Group):$(Device):$(Param):ParseSet.INPA","$(Group):$(Device):$(Param):SetDevice.VAL")
#! Field("$(Group):$(Device):$(Param):ParseSet.OUT",16777215,1,"$(Group):$(Device):$(Param):ParseSet.OUT")
#! Link("$(Group):$(Device):$(Param):ParseSet.OUT","$(Group):$(Device):$(Param):SendSet.AOUT")
#! Record("$(Group):$(Device):$(Param):SendSet",880,340,0,1,"$(Group):$(Device):$(Param):SendSet")
#! Field("$(Group):$(Device):$(Param):SendSet.AOUT",16777215,0,"$(Group):$(Device):$(Param):SendSet.AOUT")
#! Record("$(Group):$(Device):Volt:GetRead",120,1322,0,1,"$(Group):$(Device):Volt:GetRead")
#! Field("$(Group):$(Device):Volt:GetRead.FLNK",16777215,1,"$(Group):$(Device):Volt:GetRead.FLNK")
#! Link("$(Group):$(Device):Volt:GetRead.FLNK","$(Group):$(Device):Volt:ParseRead")
#! Field("$(Group):$(Device):Volt:GetRead.AINP",16777215,1,"$(Group):$(Device):Volt:GetRead.AINP")
#! Field("$(Group):$(Device):Volt:GetRead.SDIS",16777215,1,"$(Group):$(Device):Volt:GetRead.SDIS")
#! Record("$(Group):$(Device):Volt:ParseRead",560,1465,0,0,"$(Group):$(Device):Volt:ParseRead")
#! Field("$(Group):$(Device):Volt:ParseRead.FLNK",16777215,1,"$(Group):$(Device):Volt:ParseRead.FLNK")
#! Link("$(Group):$(Device):Volt:ParseRead.FLNK","$(Group):$(Device):Volt:Read")
#! Field("$(Group):$(Device):Volt:ParseRead.INAA",16777215,0,"$(Group):$(Device):Volt:ParseRead.INAA")
#! Link("$(Group):$(Device):Volt:ParseRead.INAA","$(Group):$(Device):Volt:GetRead.AINP")
#! Field("$(Group):$(Device):Volt:ParseRead.VAL",16777215,1,"$(Group):$(Device):Volt:ParseRead.VAL")
#! Record("$(Group):$(Device):Volt:Read",940,1443,0,0,"$(Group):$(Device):Volt:Read")
#! Field("$(Group):$(Device):Volt:Read.FLNK",16777215,1,"$(Group):$(Device):Volt:Read.FLNK")
#! Link("$(Group):$(Device):Volt:Read.FLNK","$(Group):$(Device):$(Param):SetToChk2")
#! Field("$(Group):$(Device):Volt:Read.INPA",16777215,0,"$(Group):$(Device):Volt:Read.INPA")
#! Link("$(Group):$(Device):Volt:Read.INPA","$(Group):$(Device):Volt:ParseRead.VAL")
#! Field("$(Group):$(Device):Volt:Read.INPB",16777215,1,"$(Group):$(Device):Volt:Read.INPB")
#! Record("$(Group):$(Device):$(Param):SetToChk2",1380,1471,0,0,"$(Group):$(Device):$(Param):SetToChk2")
#! Field("$(Group):$(Device):$(Param):SetToChk2.FLNK",16777215,1,"$(Group):$(Device):$(Param):SetToChk2.FLNK")
#! Link("$(Group):$(Device):$(Param):SetToChk2.FLNK","$(Group):$(Device):$(Param):SetToChk")
#! Field("$(Group):$(Device):$(Param):SetToChk2.INPA",16777215,1,"$(Group):$(Device):$(Param):SetToChk2.INPA")
#! Link("$(Group):$(Device):$(Param):SetToChk2.INPA","$(Group):$(Device):$(Param):SetToChk.VAL")
#! Field("$(Group):$(Device):$(Param):SetToChk2.VAL",16777215,1,"$(Group):$(Device):$(Param):SetToChk2.VAL")
#! Record("$(Group):$(Device):$(Param):SetToChk",1820,1511,0,0,"$(Group):$(Device):$(Param):SetToChk")
#! Field("$(Group):$(Device):$(Param):SetToChk.FLNK",16777215,1,"$(Group):$(Device):$(Param):SetToChk.FLNK")
#! Link("$(Group):$(Device):$(Param):SetToChk.FLNK","$(Group):$(Device):$(Param):GetRead")
#! Field("$(Group):$(Device):$(Param):SetToChk.INPA",16777215,1,"$(Group):$(Device):$(Param):SetToChk.INPA")
#! Field("$(Group):$(Device):$(Param):SetToChk.VAL",16777215,1,"$(Group):$(Device):$(Param):SetToChk.VAL")
#! Record("$(Group):$(Device):$(Param):GetRead",2300,1422,0,0,"$(Group):$(Device):$(Param):GetRead")
#! Field("$(Group):$(Device):$(Param):GetRead.FLNK",16777215,1,"$(Group):$(Device):$(Param):GetRead.FLNK")
#! Link("$(Group):$(Device):$(Param):GetRead.FLNK","$(Group):$(Device):$(Param):CommCheck")
#! Field("$(Group):$(Device):$(Param):GetRead.ERRS",16777215,1,"$(Group):$(Device):$(Param):GetRead.ERRS")
#! Field("$(Group):$(Device):$(Param):GetRead.AINP",16777215,1,"$(Group):$(Device):$(Param):GetRead.AINP")
#! Field("$(Group):$(Device):$(Param):GetRead.SDIS",16777215,1,"$(Group):$(Device):$(Param):GetRead.SDIS")
#! Record("$(Group):$(Device):$(Param):ParseRead",4380,1705,0,0,"$(Group):$(Device):$(Param):ParseRead")
#! Field("$(Group):$(Device):$(Param):ParseRead.INAA",16777215,0,"$(Group):$(Device):$(Param):ParseRead.INAA")
#! Link("$(Group):$(Device):$(Param):ParseRead.INAA","$(Group):$(Device):$(Param):GetRead.AINP")
#! Field("$(Group):$(Device):$(Param):ParseRead.FLNK",16777215,1,"$(Group):$(Device):$(Param):ParseRead.FLNK")
#! Link("$(Group):$(Device):$(Param):ParseRead.FLNK","$(Group):$(Device):$(Param):Read")
#! Field("$(Group):$(Device):$(Param):ParseRead.VAL",16777215,1,"$(Group):$(Device):$(Param):ParseRead.VAL")
#! Record("$(Group):$(Device):$(Param):CommCheck",2780,1580,0,0,"$(Group):$(Device):$(Param):CommCheck")
#! Field("$(Group):$(Device):$(Param):CommCheck.FLNK",16777215,1,"$(Group):$(Device):$(Param):CommCheck.FLNK")
#! Link("$(Group):$(Device):$(Param):CommCheck.FLNK","$(Group):$(Device):$(Param):ReadCommError:Calc")
#! Field("$(Group):$(Device):$(Param):CommCheck.INAA",16777215,0,"$(Group):$(Device):$(Param):CommCheck.INAA")
#! Link("$(Group):$(Device):$(Param):CommCheck.INAA","$(Group):$(Device):$(Param):GetRead.ERRS")
#! Field("$(Group):$(Device):$(Param):CommCheck.VAL",16777215,1,"$(Group):$(Device):$(Param):CommCheck.VAL")
#! Visibility("$(Group):$(Device):$(Param):CommCheck.CALC",1)
#! Record("$(Group):$(Device):$(Param):ReadCommError:Calc",3160,1591,0,0,"$(Group):$(Device):$(Param):ReadCommError:Calc")
#! Field("$(Group):$(Device):$(Param):ReadCommError:Calc.OUT",16777215,1,"$(Group):$(Device):$(Param):ReadCommError:Calc.OUT")
#! Link("$(Group):$(Device):$(Param):ReadCommError:Calc.OUT","$(Group):$(Device):$(Param):ReadCommError:True.PROC")
#! Field("$(Group):$(Device):$(Param):ReadCommError:Calc.INPA",16777215,0,"$(Group):$(Device):$(Param):ReadCommError:Calc.INPA")
#! Link("$(Group):$(Device):$(Param):ReadCommError:Calc.INPA","$(Group):$(Device):$(Param):CommCheck.VAL")
#! Field("$(Group):$(Device):$(Param):ReadCommError:Calc.FLNK",16777215,1,"$(Group):$(Device):$(Param):ReadCommError:Calc.FLNK")
#! Link("$(Group):$(Device):$(Param):ReadCommError:Calc.FLNK","$(Group):$(Device):$(Param):ParseRead")
#! Record("$(Group):$(Device):$(Param):ReadCommError:True",3520,1497,0,1,"$(Group):$(Device):$(Param):ReadCommError:True")
#! Field("$(Group):$(Device):$(Param):ReadCommError:True.PROC",16777215,0,"$(Group):$(Device):$(Param):ReadCommError:True.PROC")
#! Field("$(Group):$(Device):$(Param):ReadCommError:True.FLNK",16777215,1,"$(Group):$(Device):$(Param):ReadCommError:True.FLNK")
#! Link("$(Group):$(Device):$(Param):ReadCommError:True.FLNK","$(Group):$(Device):$(Param):ReadCommError:Report")
#! Field("$(Group):$(Device):$(Param):ReadCommError:True.OUT",16777215,1,"$(Group):$(Device):$(Param):ReadCommError:True.OUT")
#! Field("$(Group):$(Device):$(Param):ReadCommError:True.SDIS",16777215,1,"$(Group):$(Device):$(Param):ReadCommError:True.SDIS")
#! Record("$(Group):$(Device):$(Param):ReadCommError:Report",3860,1545,0,0,"$(Group):$(Device):$(Param):ReadCommError:Report")
#! Field("$(Group):$(Device):$(Param):ReadCommError:Report.OUT",16777215,1,"$(Group):$(Device):$(Param):ReadCommError:Report.OUT")
#! Field("$(Group):$(Device):$(Param):ReadCommError:Report.SDIS",16777215,1,"$(Group):$(Device):$(Param):ReadCommError:Report.SDIS")
#! Record("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2",2840,2028,0,0,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPA",16777215,0,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPA")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPA","$(Group):$(Device):$(Param):SetToChk.VAL")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPB",16777215,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPB")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPB","$(Group):$(Device):$(Param):Read.VAL")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPC",16777215,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPC")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPD",16777215,0,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPD")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.INPD","$(Group):$(Device):$(Param):SetToChk2.VAL")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.FLNK",16777215,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.FLNK")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2.FLNK","$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc")
#! Record("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc",2160,2360,0,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.FLNK",16777215,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.FLNK")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.FLNK","$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc2")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPC",16777215,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPC")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPA",16777215,0,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPA")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPA","$(Group):$(Device):$(Param):SetToChk.VAL")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPB",16777215,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPB")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPB","$(Group):$(Device):$(Param):Read.VAL")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.OUT",16777215,1,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.OUT")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.OUT","$(Group):$(Device):$(Param):ReadPDIFF:Report.PROC")
#! Field("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPD",16777215,0,"$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPD")
#! Link("$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc.INPD","$(Group):$(Device):$(Param):SetToChk2.VAL")
#! Record("$(Group):$(Device):$(Param):ReadPDIFF:Report",2520,2680,0,1,"$(Group):$(Device):$(Param):ReadPDIFF:Report")
#! Field("$(Group):$(Device):$(Param):ReadPDIFF:Report.OUT",16777215,1,"$(Group):$(Device):$(Param):ReadPDIFF:Report.OUT")
#! Field("$(Group):$(Device):$(Param):ReadPDIFF:Report.PROC",16777215,0,"$(Group):$(Device):$(Param):ReadPDIFF:Report.PROC")
#! Field("$(Group):$(Device):$(Param):ReadPDIFF:Report.SDIS",16777215,1,"$(Group):$(Device):$(Param):ReadPDIFF:Report.SDIS")
#! Record("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc",3340,2883,0,0,"$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc")
#! Field("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.OUT",16777215,1,"$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.OUT")
#! Link("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.OUT","$(Group):$(Device):$(Param):PLow:Error:String.PROC")
#! Field("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.INPA",16777215,1,"$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.INPA")
#! Link("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.INPA","$(Group):$(Device):$(Param):Read.VAL")
#! Field("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.INPB",16777215,1,"$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.INPB")
#! Field("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.FLNK",16777215,1,"$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.FLNK")
#! Link("$(Group):$(Device):$(Param):PREAD:LTOE:PLOW:Calc.FLNK","$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc")
#! Record("$(Group):$(Device):$(Param):PLow:Error:String",3740,2820,0,1,"$(Group):$(Device):$(Param):PLow:Error:String")
#! Field("$(Group):$(Device):$(Param):PLow:Error:String.OUT",16777215,1,"$(Group):$(Device):$(Param):PLow:Error:String.OUT")
#! Field("$(Group):$(Device):$(Param):PLow:Error:String.PROC",16777215,0,"$(Group):$(Device):$(Param):PLow:Error:String.PROC")
#! Field("$(Group):$(Device):$(Param):PLow:Error:String.SDIS",16777215,1,"$(Group):$(Device):$(Param):PLow:Error:String.SDIS")
#! Record("$(Group):$(Device):$(Param):Read",4700,1765,0,0,"$(Group):$(Device):$(Param):Read")
#! Field("$(Group):$(Device):$(Param):Read.INPA",16777215,0,"$(Group):$(Device):$(Param):Read.INPA")
#! Link("$(Group):$(Device):$(Param):Read.INPA","$(Group):$(Device):$(Param):ParseRead.VAL")
#! Field("$(Group):$(Device):$(Param):Read.FLNK",16777215,0,"$(Group):$(Device):$(Param):Read.FLNK")
#! Link("$(Group):$(Device):$(Param):Read.FLNK","$(Group):$(Device):$(Param):PREADPSET:PDIFF:Calc")
#! Field("$(Group):$(Device):$(Param):Read.VAL",16777215,0,"$(Group):$(Device):$(Param):Read.VAL")
#! Field("$(Group):$(Device):$(Param):Read.INPB",16777215,1,"$(Group):$(Device):$(Param):Read.INPB")
#! Record("$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc",3740,3143,0,0,"$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc")
#! Field("$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.OUT",16777215,1,"$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.OUT")
#! Link("$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.OUT","$(Group):$(Device):$(Param):PHigh:Error:String.PROC")
#! Field("$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.INPA",16777215,1,"$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.INPA")
#! Link("$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.INPA","$(Group):$(Device):$(Param):Read.VAL")
#! Field("$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.INPB",16777215,1,"$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.INPB")
#! Field("$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.FLNK",16777215,1,"$(Group):$(Device):$(Param):PREAD:GTOE:PHIGH:Calc.FLNK")
#! Record("$(Group):$(Device):$(Param):PHigh:Error:String",4060,3120,0,1,"$(Group):$(Device):$(Param):PHigh:Error:String")
#! Field("$(Group):$(Device):$(Param):PHigh:Error:String.OUT",16777215,1,"$(Group):$(Device):$(Param):PHigh:Error:String.OUT")
#! Field("$(Group):$(Device):$(Param):PHigh:Error:String.PROC",16777215,0,"$(Group):$(Device):$(Param):PHigh:Error:String.PROC")
#! Field("$(Group):$(Device):$(Param):PHigh:Error:String.SDIS",16777215,1,"$(Group):$(Device):$(Param):PHigh:Error:String.SDIS")
