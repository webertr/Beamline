#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Checks Particle Beam interlock status for SWM. This is written to the Modicon bit
# Device:NoFault:Write. There, the modicon bit is part of PLC that will ultimateyl
# disallow the beam from being turned on. All the PREAD inputs are from Analog.vdb.
# The Initializing and ShuttingDown inputs are from SWMOnOff.vdb and SWMInitialize.vdb.
# 
# In Analog.vdb, after a read process, there is an FLINK to this record,
# starting the process to check the interlock conditions. At the end of
# this record, it throws an FLINK back to HBDown in Analog.vdb.
record(calcout, "$(SubSys):ParticleBeam:Interlock:Status") {
  field(SCAN, "Passive")
  field(CALC, "A|B|C|D|E|F|G|H|I")
  field(INPA, "$(SubSys):Condition:Initializing:Status")
  field(INPB, "$(SubSys):Condition:ShuttingDown:Status")
  field(INPC, "$(SubSys):PREAD:GTOE:PHIGH:Calc")
  field(INPD, "$(SubSys):PREAD:LTOE:PLOW:Calc")
  field(INPE, "$(SubSys):PREADPSET:PDIFF:Calc")
  field(INPF, "$(SubSys):CommError:Status")
  field(INPG, "$(SubSys):HardwareError:Status")
  field(OUT, "$(SubSys):NoFault:Write")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL")
  field(OCAL, "!A&!B&!C&!D&!E&!F&!G&!H&!I")
  field(FLNK, "$(SubSys):HBDOWN PP")
  field(INPH, "$(SubSys):Polarity:Fault")
  field(INPI, "$(SubSys):Condition:Ramping:Status")
}

# ShuttingDown Status
# 
# This is set and reset in SWMOnOff.vdb
record(bo, "$(SubSys):Condition:ShuttingDown:Status") {
  field(VAL, "0")
  field(PINI, "YES")
  field(ZNAM, "0")
  field(ONAM, "1")
}

# Monitors combined Device and Particle Beam interlock status for posting on operator displays
record(calc, "$(SubSys):Combined:Interlock:Status") {
  field(SCAN, "Passive")
  field(CALC, "A|B")
  field(INPA, "$(SubSys):ParticleBeam:Interlock:Status")
  field(INPB, "$(SubSys):Device:Interlock:Status.VAL")
}

record(seq, "$(SubSys):LocalTransitionReport:Select") {
  field(SELM, "Mask")
  field(SELL, "$(SubSys):LocalTransitionReport")
  field(LNK1, "$(SubSys):RemoteTransitionReport:Log.PROC")
  field(LNK2, "$(SubSys):RemoteTransitionReport:Log2.PROC")
}

# Detect when SWM transitions between local and remote
record(calcout, "$(SubSys):LocalTransitionReport") {
  field(SCAN, ".1 second")
  field(PINI, "YES")
  field(OUT, "$(SubSys):LocalTransitionReport:Select.PROC")
  field(OOPT, "On Change")
  field(CALC, "!A+1")
  field(INPA, "SWM:NotLocal:Status")
}

# Log Message "SWM Transition to Remote"
record(stringout, "$(SubSys):RemoteTransitionReport:Log") {
  field(VAL, "$(SubSys) Transition to Remote")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Log Message "SWM Transition to Local"
record(stringout, "$(SubSys):RemoteTransitionReport:Log2") {
  field(VAL, "$(SubSys) Transition to Local")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(bo, "$(SubSys):CommError:Status") {
  field(VAL, "0")
  field(PINI, "YES")
  field(FLNK, "$(SubSys):ReadCommFailed:True:MSG")
  field(ZNAM, "0")
  field(ONAM, "1")
}

# Initializing Status
# 
# This is set and reset in SWMInitialize.vdb
record(bo, "$(SubSys):Condition:Initializing:Status") {
  field(VAL, "0")
  field(PINI, "YES")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(SubSys):HardwareError:Status") {
  field(VAL, "0")
  field(PINI, "YES")
  field(FLNK, "$(SubSys):ReadHardwareFailed:True:MSG")
  field(ZNAM, "0")
  field(ONAM, "1")
}

# Sends Power Failure message to system log
record(stringout, "$(SubSys):PowerFailure:StringReport") {
  field(VAL, "$(SubSys) Interlock, Power Failure")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Monitors Device interlock status and calculates which interlocks are active
record(calcout, "$(SubSys):Interlock:Report") {
  field(CALC, "A+2*B+4*C+8*D+16*E+32*!F")
  field(INPA, "$(SubSys):TransistorFailure:Status")
  field(INPB, "$(SubSys):CoolingNotOK:Status")
  field(INPC, "$(SubSys):PowerFailure:Status")
  field(INPD, "$(SubSys):Overload:Status")
  field(OUT, "$(SubSys):Interlock:ReportSeq.PROC")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use CALC")
  field(INPE, "$(SubSys):MagCoolingNotOK:Status")
  field(SCAN, "1 second")
  field(INPF, "$(SubSys):24Volt:Status")
}

# Process appropriate log message records
# according to which device interlocks
# are active.
# 
# .2 sec between links to avoid message storms to
# the system log.
record(seq, "$(SubSys):Interlock:ReportSeq") {
  field(SELM, "Mask")
  field(DLY1, ".2")
  field(LNK1, "$(SubSys):TransistorFailure:StringReport.PROC")
  field(DLY2, ".2")
  field(LNK2, "$(SubSys):CoolingNotOK:StringReport.PROC")
  field(DLY3, ".2")
  field(LNK3, "$(SubSys):PowerFailure:StringReport.PROC")
  field(DLY4, ".2")
  field(LNK4, "$(SubSys):Overload:StringReport.PROC")
  field(SELN, "")
  field(SELL, "$(SubSys):Interlock:Report.VAL")
  field(DLY5, ".2")
  field(LNK5, "$(SubSys):MagCooling:StringReport.PROC")
  field(DLY6, "0.2")
  field(LNK6, "$(SubSys):24Volt:StringReport.PROC")
}

# Sends Overload message to system log
record(stringout, "$(SubSys):Overload:StringReport") {
  field(VAL, "$(SubSys) Interlock, Overload")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Calculates if any Device interlocks are active.
# Will be combined with Particle Beam Interlock
# status to give Overall Interlocks Status
record(calc, "$(SubSys):Device:Interlock:Status") {
  field(SCAN, ".1 second")
  field(CALC, "A#0")
  field(INPA, "$(SubSys):Interlock:Report.VAL")
  field(FLNK, "$(SubSys):Combined:Interlock:Status")
}

# Sends Cooling message to system log
record(stringout, "$(SubSys):CoolingNotOK:StringReport") {
  field(VAL, "$(SubSys) Interlock, Cooling")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(stringout, "$(SubSys):MagCooling:StringReport") {
  field(VAL, "$(SubSys) Interlock, Mag Cooling ")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Transistor Failure message to system log
record(stringout, "$(SubSys):TransistorFailure:StringReport") {
  field(VAL, "$(SubSys) Interlock, Transistor Failure")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(stringout, "$(SubSys):24Volt:StringReport") {
  field(VAL, "$(SubSys) Interlock, Mag Cooling ")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# If the polarity isn't correct, this PV gets set to 1 and is read in
# by the particle beam interlock.
record(bo, "$(SubSys):Polarity:Fault") {
}

# If line A has been selected, check to see if you have Left polarity.
record(calcout, "$(SubSys):Set:Polarity:LineA") {
  field(CALC, "!((A=1)&(B=0)&C)")
  field(OUT, "$(SubSys):Polarity:Fault.VAL PP")
  field(DOPT, "Use CALC")
  field(INPA, "$(SubSys):Polarity:Left:Status")
  field(INPB, "$(SubSys):Polarity:Right:Status")
  field(INPC, "$(SubSys):Condition:Left:Ramped:Status")
}

# If line B or C have been selected, check to see if you have Right polarity.
record(calcout, "$(SubSys):Set:Polarity:LineBAndC") {
  field(CALC, "!((A=0)&(B=1))")
  field(OUT, "$(SubSys):Polarity:Fault.VAL PP")
  field(DOPT, "Use CALC")
  field(INPA, "$(SubSys):Polarity:Left:Status")
  field(INPB, "$(SubSys):Polarity:Right:Status")
  field(INPC, "$(SubSys):Condition:Right:Ramped:Status")
}

# Determines if A has been selected, or B and C
record(seq, "$(SubSys):BLMA:PolChk:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):BLSelect:Calc.VAL")
  field(LNK1, "$(SubSys):Set:Polarity:LineA.PROC")
  field(LNK2, "$(SubSys):Set:Polarity:LineBAndC.PROC")
}

# Reads in to see what line has been selected.
record(calc, "$(SubSys):BLSelect:Calc") {
  field(SCAN, ".1 second")
  field(FLNK, "$(SubSys):BLMA:PolChk:Seq")
  field(CALC, "(A|B)*1+(C|D|E)*2")
  field(INPA, "CYC:LineASelectedTreatMode:Status")
  field(INPB, "CYC:LineASelectedTestMode:Status")
  field(INPC, "CYC:LineBSelectedTreatMode:Status")
  field(INPD, "CYC:LineBSelectedTestMode:Status")
  field(INPE, "CYC:LineCSelectedTestMode:Status")
}

# This is here so the database can know if
# the swm needs to be ramped when the
# zero line is selected.
record(bo, "$(SubSys):Condition:Left:Ramped:Status") {
  field(VAL, "0")
  field(PINI, "YES")
}

record(bo, "$(SubSys):Condition:Right:Ramped:Status") {
  field(PINI, "YES")
  field(VAL, "0")
}

record(calcout, "$(SubSys):Condition:Left:Ramped:Transition3") {
  field(SCAN, "1 second")
  field(CALC, "A&B")
  field(INPA, "$(SubSys):Polarity:Left:Status")
  field(INPB, "$(SubSys):Condition:Ramping:Status")
  field(OUT, "$(SubSys):Left:Ramped:Trans:MultP.PROC")
  field(OOPT, "Transition To Zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
}

record(seq, "$(SubSys):Left:Ramped:Trans:MultP") {
  field(SCAN, "Passive")
  field(SELM, "All")
  field(LNK1, "$(SubSys):Condition:Left:Ramped:Status PP")
  field(DOL1, "1")
  field(DOL2, "0")
  field(LNK2, "$(SubSys):Condition:Right:Ramped:Status PP")
}

record(calcout, "$(SubSys):Condition:Right:Ramped:Transition") {
  field(SCAN, "1 second")
  field(CALC, "A&B")
  field(INPA, "$(SubSys):Polarity:Right:Status")
  field(INPB, "$(SubSys):Condition:Ramping:Status")
  field(OUT, "$(SubSys):Right:Ramped:Trans:MultP.PROC")
  field(OOPT, "Transition To Zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
}

record(seq, "$(SubSys):Right:Ramped:Trans:MultP") {
  field(SCAN, "Passive")
  field(SELM, "All")
  field(LNK1, "$(SubSys):Condition:Left:Ramped:Status PP")
  field(DOL1, "0")
  field(DOL2, "1")
  field(LNK2, "$(SubSys):Condition:Right:Ramped:Status PP")
}

# SWM Ramping Status
# Set to true during ramping which is defined from
# the time the SWM Current is set to the top ramping value
# until after the ramp hold time once PREAD has reached
# the top ramping value, or ramping has been aborted manually
# or because of some timeout
record(bo, "$(SubSys):Condition:Ramping:Status") {
  field(VAL, "0")
  field(PINI, "YES")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(calcout, "$(SubSys):ReadCommFailed:True:MSG") {
  field(CALC, "A")
  field(INPA, "$(SubSys):CommError:Status")
  field(OUT, "$(SubSys):Curr:ReadCommFailed.PROC")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
}

record(stringout, "$(SubSys):Curr:ReadCommFailed") {
  field(VAL, "$(SubSys) Asyn Comm Err")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(stringout, "$(SubSys):Curr:ReadHWFailed") {
  field(VAL, "$(SubSys) Asyn HW Err")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(calcout, "$(SubSys):ReadHardwareFailed:True:MSG") {
  field(CALC, "A")
  field(INPA, "$(SubSys):HardwareError:Status")
  field(OUT, "$(SubSys):Curr:ReadHWFailed.PROC")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
}

#! Further lines contain data used by VisualDCT
#! View(1050,1262,1.0)
#! Record("$(SubSys):ParticleBeam:Interlock:Status",2360,1421,0,1,"$(SubSys):ParticleBeam:Interlock:Status")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPG",16777215,0,"$(SubSys):ParticleBeam:Interlock:Status.INPG")
#! Link("$(SubSys):ParticleBeam:Interlock:Status.INPG","$(SubSys):HardwareError:Status.VAL")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPB",16777215,0,"$(SubSys):ParticleBeam:Interlock:Status.INPB")
#! Link("$(SubSys):ParticleBeam:Interlock:Status.INPB","$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPA",16777215,0,"$(SubSys):ParticleBeam:Interlock:Status.INPA")
#! Link("$(SubSys):ParticleBeam:Interlock:Status.INPA","$(SubSys):Condition:Initializing:Status.VAL")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPF",16777215,0,"$(SubSys):ParticleBeam:Interlock:Status.INPF")
#! Link("$(SubSys):ParticleBeam:Interlock:Status.INPF","$(SubSys):CommError:Status.VAL")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.VAL",16777215,1,"$(SubSys):ParticleBeam:Interlock:Status.VAL")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.OUT",16777215,1,"$(SubSys):ParticleBeam:Interlock:Status.OUT")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.FLNK",16777215,1,"$(SubSys):ParticleBeam:Interlock:Status.FLNK")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPE",16777215,1,"$(SubSys):ParticleBeam:Interlock:Status.INPE")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPD",16777215,1,"$(SubSys):ParticleBeam:Interlock:Status.INPD")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPC",16777215,0,"$(SubSys):ParticleBeam:Interlock:Status.INPC")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPI",16777215,1,"$(SubSys):ParticleBeam:Interlock:Status.INPI")
#! Link("$(SubSys):ParticleBeam:Interlock:Status.INPI","$(SubSys):Condition:Ramping:Status.VAL")
#! Field("$(SubSys):ParticleBeam:Interlock:Status.INPH",16777215,0,"$(SubSys):ParticleBeam:Interlock:Status.INPH")
#! Link("$(SubSys):ParticleBeam:Interlock:Status.INPH","$(SubSys):Polarity:Fault.VAL")
#! Record("$(SubSys):Condition:ShuttingDown:Status",1940,1488,0,1,"$(SubSys):Condition:ShuttingDown:Status")
#! Field("$(SubSys):Condition:ShuttingDown:Status.VAL",16777215,1,"$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Record("$(SubSys):Combined:Interlock:Status",2760,1068,0,0,"$(SubSys):Combined:Interlock:Status")
#! Field("$(SubSys):Combined:Interlock:Status.INPB",16777215,0,"$(SubSys):Combined:Interlock:Status.INPB")
#! Link("$(SubSys):Combined:Interlock:Status.INPB","$(SubSys):Device:Interlock:Status.VAL")
#! Field("$(SubSys):Combined:Interlock:Status.INPA",16777215,0,"$(SubSys):Combined:Interlock:Status.INPA")
#! Link("$(SubSys):Combined:Interlock:Status.INPA","$(SubSys):ParticleBeam:Interlock:Status.VAL")
#! Record("$(SubSys):LocalTransitionReport:Select",3400,1708,0,1,"$(SubSys):LocalTransitionReport:Select")
#! Field("$(SubSys):LocalTransitionReport:Select.PROC",16777215,0,"$(SubSys):LocalTransitionReport:Select.PROC")
#! Field("$(SubSys):LocalTransitionReport:Select.SELL",16777215,0,"$(SubSys):LocalTransitionReport:Select.SELL")
#! Link("$(SubSys):LocalTransitionReport:Select.SELL","$(SubSys):LocalTransitionReport.VAL")
#! Field("$(SubSys):LocalTransitionReport:Select.LNK1",16777215,1,"$(SubSys):LocalTransitionReport:Select.LNK1")
#! Link("$(SubSys):LocalTransitionReport:Select.LNK1","$(SubSys):RemoteTransitionReport:Log.PROC")
#! Field("$(SubSys):LocalTransitionReport:Select.LNK2",16777215,1,"$(SubSys):LocalTransitionReport:Select.LNK2")
#! Link("$(SubSys):LocalTransitionReport:Select.LNK2","$(SubSys):RemoteTransitionReport:Log2.PROC")
#! Record("$(SubSys):LocalTransitionReport",3060,1680,0,1,"$(SubSys):LocalTransitionReport")
#! Field("$(SubSys):LocalTransitionReport.OUT",16777215,1,"$(SubSys):LocalTransitionReport.OUT")
#! Link("$(SubSys):LocalTransitionReport.OUT","$(SubSys):LocalTransitionReport:Select.PROC")
#! Field("$(SubSys):LocalTransitionReport.INPA",16777215,1,"$(SubSys):LocalTransitionReport.INPA")
#! Field("$(SubSys):LocalTransitionReport.VAL",16777215,1,"$(SubSys):LocalTransitionReport.VAL")
#! Record("$(SubSys):RemoteTransitionReport:Log",3680,1716,0,1,"$(SubSys):RemoteTransitionReport:Log")
#! Field("$(SubSys):RemoteTransitionReport:Log.OUT",16777215,1,"$(SubSys):RemoteTransitionReport:Log.OUT")
#! Field("$(SubSys):RemoteTransitionReport:Log.PROC",16777215,0,"$(SubSys):RemoteTransitionReport:Log.PROC")
#! Record("$(SubSys):RemoteTransitionReport:Log2",3700,1936,0,1,"$(SubSys):RemoteTransitionReport:Log2")
#! Field("$(SubSys):RemoteTransitionReport:Log2.OUT",16777215,1,"$(SubSys):RemoteTransitionReport:Log2.OUT")
#! Field("$(SubSys):RemoteTransitionReport:Log2.PROC",16777215,0,"$(SubSys):RemoteTransitionReport:Log2.PROC")
#! Record("$(SubSys):CommError:Status",1900,1854,0,1,"$(SubSys):CommError:Status")
#! Field("$(SubSys):CommError:Status.FLNK",16777215,0,"$(SubSys):CommError:Status.FLNK")
#! Link("$(SubSys):CommError:Status.FLNK","$(SubSys):ReadCommFailed:True:MSG")
#! Field("$(SubSys):CommError:Status.VAL",16777215,1,"$(SubSys):CommError:Status.VAL")
#! Record("$(SubSys):Condition:Initializing:Status",1900,1648,0,1,"$(SubSys):Condition:Initializing:Status")
#! Field("$(SubSys):Condition:Initializing:Status.VAL",16777215,1,"$(SubSys):Condition:Initializing:Status.VAL")
#! Record("$(SubSys):HardwareError:Status",2020,1274,0,1,"$(SubSys):HardwareError:Status")
#! Field("$(SubSys):HardwareError:Status.FLNK",16777215,0,"$(SubSys):HardwareError:Status.FLNK")
#! Link("$(SubSys):HardwareError:Status.FLNK","$(SubSys):ReadHardwareFailed:True:MSG")
#! Field("$(SubSys):HardwareError:Status.VAL",16777215,1,"$(SubSys):HardwareError:Status.VAL")
#! Record("$(SubSys):PowerFailure:StringReport",1360,396,0,1,"$(SubSys):PowerFailure:StringReport")
#! Field("$(SubSys):PowerFailure:StringReport.OUT",16777215,1,"$(SubSys):PowerFailure:StringReport.OUT")
#! Field("$(SubSys):PowerFailure:StringReport.PROC",16777215,0,"$(SubSys):PowerFailure:StringReport.PROC")
#! Record("$(SubSys):Interlock:Report",360,231,0,0,"$(SubSys):Interlock:Report")
#! Field("$(SubSys):Interlock:Report.INPA",16777215,1,"$(SubSys):Interlock:Report.INPA")
#! Field("$(SubSys):Interlock:Report.INPB",16777215,1,"$(SubSys):Interlock:Report.INPB")
#! Field("$(SubSys):Interlock:Report.INPC",16777215,1,"$(SubSys):Interlock:Report.INPC")
#! Field("$(SubSys):Interlock:Report.INPD",16777215,1,"$(SubSys):Interlock:Report.INPD")
#! Field("$(SubSys):Interlock:Report.OUT",16777215,1,"$(SubSys):Interlock:Report.OUT")
#! Link("$(SubSys):Interlock:Report.OUT","$(SubSys):Interlock:ReportSeq.PROC")
#! Field("$(SubSys):Interlock:Report.VAL",16777215,1,"$(SubSys):Interlock:Report.VAL")
#! Field("$(SubSys):Interlock:Report.INPE",16777215,1,"$(SubSys):Interlock:Report.INPE")
#! Field("$(SubSys):Interlock:Report.INPF",16777215,1,"$(SubSys):Interlock:Report.INPF")
#! Record("$(SubSys):Interlock:ReportSeq",720,315,0,0,"$(SubSys):Interlock:ReportSeq")
#! Field("$(SubSys):Interlock:ReportSeq.LNK1",16777215,1,"$(SubSys):Interlock:ReportSeq.LNK1")
#! Link("$(SubSys):Interlock:ReportSeq.LNK1","$(SubSys):TransistorFailure:StringReport.PROC")
#! Field("$(SubSys):Interlock:ReportSeq.LNK2",16777215,1,"$(SubSys):Interlock:ReportSeq.LNK2")
#! Link("$(SubSys):Interlock:ReportSeq.LNK2","$(SubSys):CoolingNotOK:StringReport.PROC")
#! Field("$(SubSys):Interlock:ReportSeq.LNK3",16777215,1,"$(SubSys):Interlock:ReportSeq.LNK3")
#! Link("$(SubSys):Interlock:ReportSeq.LNK3","$(SubSys):PowerFailure:StringReport.PROC")
#! Field("$(SubSys):Interlock:ReportSeq.LNK4",16777215,1,"$(SubSys):Interlock:ReportSeq.LNK4")
#! Link("$(SubSys):Interlock:ReportSeq.LNK4","$(SubSys):Overload:StringReport.PROC")
#! Field("$(SubSys):Interlock:ReportSeq.PROC",16777215,0,"$(SubSys):Interlock:ReportSeq.PROC")
#! Field("$(SubSys):Interlock:ReportSeq.SELL",16777215,0,"$(SubSys):Interlock:ReportSeq.SELL")
#! Link("$(SubSys):Interlock:ReportSeq.SELL","$(SubSys):Interlock:Report.VAL")
#! Field("$(SubSys):Interlock:ReportSeq.LNK5",16777215,1,"$(SubSys):Interlock:ReportSeq.LNK5")
#! Link("$(SubSys):Interlock:ReportSeq.LNK5","$(SubSys):MagCooling:StringReport.PROC")
#! Field("$(SubSys):Interlock:ReportSeq.LNK6",16777215,1,"$(SubSys):Interlock:ReportSeq.LNK6")
#! Link("$(SubSys):Interlock:ReportSeq.LNK6","$(SubSys):24Volt:StringReport.PROC")
#! Record("$(SubSys):Overload:StringReport",1360,576,0,1,"$(SubSys):Overload:StringReport")
#! Field("$(SubSys):Overload:StringReport.OUT",16777215,1,"$(SubSys):Overload:StringReport.OUT")
#! Field("$(SubSys):Overload:StringReport.PROC",16777215,0,"$(SubSys):Overload:StringReport.PROC")
#! Record("$(SubSys):Device:Interlock:Status",2120,1028,0,1,"$(SubSys):Device:Interlock:Status")
#! Field("$(SubSys):Device:Interlock:Status.FLNK",16777215,1,"$(SubSys):Device:Interlock:Status.FLNK")
#! Link("$(SubSys):Device:Interlock:Status.FLNK","$(SubSys):Combined:Interlock:Status")
#! Field("$(SubSys):Device:Interlock:Status.INPA",16777215,0,"$(SubSys):Device:Interlock:Status.INPA")
#! Link("$(SubSys):Device:Interlock:Status.INPA","$(SubSys):Interlock:Report.VAL")
#! Field("$(SubSys):Device:Interlock:Status.VAL",16777215,1,"$(SubSys):Device:Interlock:Status.VAL")
#! Record("$(SubSys):CoolingNotOK:StringReport",1340,236,0,1,"$(SubSys):CoolingNotOK:StringReport")
#! Field("$(SubSys):CoolingNotOK:StringReport.OUT",16777215,1,"$(SubSys):CoolingNotOK:StringReport.OUT")
#! Field("$(SubSys):CoolingNotOK:StringReport.PROC",16777215,0,"$(SubSys):CoolingNotOK:StringReport.PROC")
#! Record("$(SubSys):MagCooling:StringReport",1380,776,0,1,"$(SubSys):MagCooling:StringReport")
#! Field("$(SubSys):MagCooling:StringReport.OUT",16777215,1,"$(SubSys):MagCooling:StringReport.OUT")
#! Field("$(SubSys):MagCooling:StringReport.PROC",16777215,0,"$(SubSys):MagCooling:StringReport.PROC")
#! Record("$(SubSys):TransistorFailure:StringReport",1320,96,0,1,"$(SubSys):TransistorFailure:StringReport")
#! Field("$(SubSys):TransistorFailure:StringReport.OUT",16777215,1,"$(SubSys):TransistorFailure:StringReport.OUT")
#! Field("$(SubSys):TransistorFailure:StringReport.PROC",16777215,0,"$(SubSys):TransistorFailure:StringReport.PROC")
#! Record("$(SubSys):24Volt:StringReport",1220,936,0,1,"$(SubSys):24Volt:StringReport")
#! Field("$(SubSys):24Volt:StringReport.OUT",16777215,1,"$(SubSys):24Volt:StringReport.OUT")
#! Field("$(SubSys):24Volt:StringReport.PROC",16777215,0,"$(SubSys):24Volt:StringReport.PROC")
#! Record("$(SubSys):Polarity:Fault",1960,2283,0,1,"$(SubSys):Polarity:Fault")
#! Field("$(SubSys):Polarity:Fault.VAL",16777215,1,"$(SubSys):Polarity:Fault.VAL")
#! Record("$(SubSys):Set:Polarity:LineA",1560,2680,0,1,"$(SubSys):Set:Polarity:LineA")
#! Field("$(SubSys):Set:Polarity:LineA.OUT",16777215,1,"$(SubSys):Set:Polarity:LineA.OUT")
#! Link("$(SubSys):Set:Polarity:LineA.OUT","$(SubSys):Polarity:Fault.VAL")
#! Field("$(SubSys):Set:Polarity:LineA.PROC",16777215,0,"$(SubSys):Set:Polarity:LineA.PROC")
#! Field("$(SubSys):Set:Polarity:LineA.INPA",16777215,1,"$(SubSys):Set:Polarity:LineA.INPA")
#! Field("$(SubSys):Set:Polarity:LineA.INPB",16777215,1,"$(SubSys):Set:Polarity:LineA.INPB")
#! Field("$(SubSys):Set:Polarity:LineA.INPC",16777215,1,"$(SubSys):Set:Polarity:LineA.INPC")
#! Link("$(SubSys):Set:Polarity:LineA.INPC","$(SubSys):Condition:Left:Ramped:Status.VAL")
#! Record("$(SubSys):Set:Polarity:LineBAndC",1560,2940,0,1,"$(SubSys):Set:Polarity:LineBAndC")
#! Field("$(SubSys):Set:Polarity:LineBAndC.OUT",16777215,1,"$(SubSys):Set:Polarity:LineBAndC.OUT")
#! Link("$(SubSys):Set:Polarity:LineBAndC.OUT","$(SubSys):Polarity:Fault.VAL")
#! Field("$(SubSys):Set:Polarity:LineBAndC.PROC",16777215,0,"$(SubSys):Set:Polarity:LineBAndC.PROC")
#! Field("$(SubSys):Set:Polarity:LineBAndC.INPA",16777215,1,"$(SubSys):Set:Polarity:LineBAndC.INPA")
#! Field("$(SubSys):Set:Polarity:LineBAndC.INPB",16777215,1,"$(SubSys):Set:Polarity:LineBAndC.INPB")
#! Field("$(SubSys):Set:Polarity:LineBAndC.INPC",16777215,1,"$(SubSys):Set:Polarity:LineBAndC.INPC")
#! Link("$(SubSys):Set:Polarity:LineBAndC.INPC","$(SubSys):Condition:Right:Ramped:Status.VAL")
#! Record("$(SubSys):BLMA:PolChk:Seq",1280,2908,0,0,"$(SubSys):BLMA:PolChk:Seq")
#! Field("$(SubSys):BLMA:PolChk:Seq.SELL",16777215,0,"$(SubSys):BLMA:PolChk:Seq.SELL")
#! Link("$(SubSys):BLMA:PolChk:Seq.SELL","$(SubSys):BLSelect:Calc.VAL")
#! Field("$(SubSys):BLMA:PolChk:Seq.LNK1",16777215,1,"$(SubSys):BLMA:PolChk:Seq.LNK1")
#! Link("$(SubSys):BLMA:PolChk:Seq.LNK1","$(SubSys):Set:Polarity:LineA.PROC")
#! Field("$(SubSys):BLMA:PolChk:Seq.LNK2",16777215,1,"$(SubSys):BLMA:PolChk:Seq.LNK2")
#! Link("$(SubSys):BLMA:PolChk:Seq.LNK2","$(SubSys):Set:Polarity:LineBAndC.PROC")
#! Record("$(SubSys):BLSelect:Calc",920,2792,0,1,"$(SubSys):BLSelect:Calc")
#! Field("$(SubSys):BLSelect:Calc.FLNK",16777215,1,"$(SubSys):BLSelect:Calc.FLNK")
#! Link("$(SubSys):BLSelect:Calc.FLNK","$(SubSys):BLMA:PolChk:Seq")
#! Field("$(SubSys):BLSelect:Calc.INPA",16777215,1,"$(SubSys):BLSelect:Calc.INPA")
#! Field("$(SubSys):BLSelect:Calc.INPB",16777215,1,"$(SubSys):BLSelect:Calc.INPB")
#! Field("$(SubSys):BLSelect:Calc.INPC",16777215,1,"$(SubSys):BLSelect:Calc.INPC")
#! Field("$(SubSys):BLSelect:Calc.INPD",16777215,1,"$(SubSys):BLSelect:Calc.INPD")
#! Field("$(SubSys):BLSelect:Calc.INPE",16777215,1,"$(SubSys):BLSelect:Calc.INPE")
#! Field("$(SubSys):BLSelect:Calc.VAL",16777215,1,"$(SubSys):BLSelect:Calc.VAL")
#! Record("$(SubSys):Condition:Left:Ramped:Status",3300,2576,0,1,"$(SubSys):Condition:Left:Ramped:Status")
#! Field("$(SubSys):Condition:Left:Ramped:Status.VAL",16777215,1,"$(SubSys):Condition:Left:Ramped:Status.VAL")
#! Record("$(SubSys):Condition:Right:Ramped:Status",3280,2916,0,1,"$(SubSys):Condition:Right:Ramped:Status")
#! Field("$(SubSys):Condition:Right:Ramped:Status.VAL",16777215,1,"$(SubSys):Condition:Right:Ramped:Status.VAL")
#! Record("$(SubSys):Condition:Left:Ramped:Transition3",2500,2332,0,1,"$(SubSys):Condition:Left:Ramped:Transition3")
#! Field("$(SubSys):Condition:Left:Ramped:Transition3.INPB",16777215,1,"$(SubSys):Condition:Left:Ramped:Transition3.INPB")
#! Link("$(SubSys):Condition:Left:Ramped:Transition3.INPB","$(SubSys):Condition:Ramping:Status.VAL")
#! Field("$(SubSys):Condition:Left:Ramped:Transition3.INPA",16777215,1,"$(SubSys):Condition:Left:Ramped:Transition3.INPA")
#! Field("$(SubSys):Condition:Left:Ramped:Transition3.OUT",16777215,1,"$(SubSys):Condition:Left:Ramped:Transition3.OUT")
#! Link("$(SubSys):Condition:Left:Ramped:Transition3.OUT","$(SubSys):Left:Ramped:Trans:MultP.PROC")
#! Record("$(SubSys):Left:Ramped:Trans:MultP",2860,2540,0,1,"$(SubSys):Left:Ramped:Trans:MultP")
#! Field("$(SubSys):Left:Ramped:Trans:MultP.LNK1",16777215,1,"$(SubSys):Left:Ramped:Trans:MultP.LNK1")
#! Link("$(SubSys):Left:Ramped:Trans:MultP.LNK1","$(SubSys):Condition:Left:Ramped:Status.VAL")
#! Field("$(SubSys):Left:Ramped:Trans:MultP.PROC",16777215,0,"$(SubSys):Left:Ramped:Trans:MultP.PROC")
#! Field("$(SubSys):Left:Ramped:Trans:MultP.LNK2",16777215,1,"$(SubSys):Left:Ramped:Trans:MultP.LNK2")
#! Link("$(SubSys):Left:Ramped:Trans:MultP.LNK2","$(SubSys):Condition:Right:Ramped:Status.VAL")
#! Record("$(SubSys):Condition:Right:Ramped:Transition",3960,2092,0,1,"$(SubSys):Condition:Right:Ramped:Transition")
#! Field("$(SubSys):Condition:Right:Ramped:Transition.INPA",16777215,1,"$(SubSys):Condition:Right:Ramped:Transition.INPA")
#! Field("$(SubSys):Condition:Right:Ramped:Transition.INPB",16777215,0,"$(SubSys):Condition:Right:Ramped:Transition.INPB")
#! Link("$(SubSys):Condition:Right:Ramped:Transition.INPB","$(SubSys):Condition:Ramping:Status.VAL")
#! Field("$(SubSys):Condition:Right:Ramped:Transition.OUT",16777215,0,"$(SubSys):Condition:Right:Ramped:Transition.OUT")
#! Link("$(SubSys):Condition:Right:Ramped:Transition.OUT","$(SubSys):Right:Ramped:Trans:MultP.PROC")
#! Record("$(SubSys):Right:Ramped:Trans:MultP",3640,2560,0,1,"$(SubSys):Right:Ramped:Trans:MultP")
#! Field("$(SubSys):Right:Ramped:Trans:MultP.LNK1",16777215,0,"$(SubSys):Right:Ramped:Trans:MultP.LNK1")
#! Link("$(SubSys):Right:Ramped:Trans:MultP.LNK1","$(SubSys):Condition:Left:Ramped:Status.VAL")
#! Field("$(SubSys):Right:Ramped:Trans:MultP.LNK2",16777215,0,"$(SubSys):Right:Ramped:Trans:MultP.LNK2")
#! Link("$(SubSys):Right:Ramped:Trans:MultP.LNK2","$(SubSys):Condition:Right:Ramped:Status.VAL")
#! Field("$(SubSys):Right:Ramped:Trans:MultP.PROC",16777215,1,"$(SubSys):Right:Ramped:Trans:MultP.PROC")
#! Record("$(SubSys):Condition:Ramping:Status",3000,2008,0,1,"$(SubSys):Condition:Ramping:Status")
#! Field("$(SubSys):Condition:Ramping:Status.VAL",16777215,1,"$(SubSys):Condition:Ramping:Status.VAL")
#! Record("$(SubSys):ReadCommFailed:True:MSG",1600,1860,0,1,"$(SubSys):ReadCommFailed:True:MSG")
#! Field("$(SubSys):ReadCommFailed:True:MSG.INPA",16777215,1,"$(SubSys):ReadCommFailed:True:MSG.INPA")
#! Link("$(SubSys):ReadCommFailed:True:MSG.INPA","$(SubSys):CommError:Status.VAL")
#! Field("$(SubSys):ReadCommFailed:True:MSG.OUT",16777215,0,"$(SubSys):ReadCommFailed:True:MSG.OUT")
#! Link("$(SubSys):ReadCommFailed:True:MSG.OUT","$(SubSys):Curr:ReadCommFailed.PROC")
#! Record("$(SubSys):Curr:ReadCommFailed",1320,1856,0,1,"$(SubSys):Curr:ReadCommFailed")
#! Field("$(SubSys):Curr:ReadCommFailed.OUT",16777215,1,"$(SubSys):Curr:ReadCommFailed.OUT")
#! Field("$(SubSys):Curr:ReadCommFailed.PROC",16777215,1,"$(SubSys):Curr:ReadCommFailed.PROC")
#! Record("$(SubSys):Curr:ReadHWFailed",1360,1336,0,1,"$(SubSys):Curr:ReadHWFailed")
#! Field("$(SubSys):Curr:ReadHWFailed.OUT",16777215,1,"$(SubSys):Curr:ReadHWFailed.OUT")
#! Field("$(SubSys):Curr:ReadHWFailed.PROC",16777215,1,"$(SubSys):Curr:ReadHWFailed.PROC")
#! Record("$(SubSys):ReadHardwareFailed:True:MSG",1640,1280,0,1,"$(SubSys):ReadHardwareFailed:True:MSG")
#! Field("$(SubSys):ReadHardwareFailed:True:MSG.INPA",16777215,1,"$(SubSys):ReadHardwareFailed:True:MSG.INPA")
#! Link("$(SubSys):ReadHardwareFailed:True:MSG.INPA","$(SubSys):HardwareError:Status.VAL")
#! Field("$(SubSys):ReadHardwareFailed:True:MSG.OUT",16777215,0,"$(SubSys):ReadHardwareFailed:True:MSG.OUT")
#! Link("$(SubSys):ReadHardwareFailed:True:MSG.OUT","$(SubSys):Curr:ReadHWFailed.PROC")
