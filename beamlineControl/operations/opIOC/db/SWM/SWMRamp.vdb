#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Checks to see that the SWM is on, the rf is off, and the SWM is not shutting down.
record(calc, "$(SubSys):Curr:Ramp:ReadyCheck") {
  field(FLNK, "$(SubSys):Curr:Ramp:Sequence")
  field(CALC, "(A|(!B)|(C&!D)|E)+1")
  field(INPA, "$(SubSys):Condition:ShuttingDown:Status")
  field(INPB, "$(SubSys):On:Status")
  field(INPC, "RF:HighPowerOn:Status")
  field(INPD, "FC1:Closed:Status")
  field(INPE, "$(SubSys):Condition:Ramping:Status")
}

# Verifies that the SWM is on, not shutting down, and the rf is off.
record(seq, "$(SubSys):Curr:Ramp:Sequence") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Curr:Ramp:ReadyCheck.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Curr:Ramp:Started:String.PROC")
  field(DLY2, "0")
  field(LNK2, "$(SubSys):Device:RampInterlock:Log.PROC")
  field(DLY1, "1")
  field(DOL2, "1")
}

# Continues chain setting Ramping Status to False
record(bo, "$(SubSys):Curr:Ramp:End") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Curr:Restore.PROC")
}

# Sends SWM Ramping Started to system log
record(stringout, "$(SubSys):Curr:Ramp:Started:String") {
  field(FLNK, "$(SubSys):Curr:Ramp:Start")
  field(VAL, "$(SubSys) Ramping started")
  field(OMSL, "supervisory")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends User Canceled Ramp message to system log
# processes chain to set Ramping Status to False
record(stringout, "$(SubSys):Curr:Ramp:Canceled:String") {
  field(FLNK, "$(SubSys):Curr:Ramp:End")
  field(VAL, "$(SubSys) Ramp canceled, user pressed cancel")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Processes two records at end of ramping process
# 
# FLNK processes record that sets SWM Current PSET to what it
# was before ramping began
# 
# LNK1 set Ramping Status to False
record(fanout, "$(SubSys):Curr:Restore") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Curr:SetStored")
  field(LNK1, "$(SubSys):Curr:RampingInProgressSetFalse")
}

# Send Ramp Completed to system log
# Continue processing chain to complete Ramp process
record(stringout, "$(SubSys):Curr:Ramp:Complete:String") {
  field(VAL, "$(SubSys) ramp completed")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):Curr:Ramp:End")
}

# Tempory storage for SWM Current PSET
# This value will be put back into PSET once
# the Device has ramped to the top and stayed there
# for some time
record(ao, "$(SubSys):Curr:SetStored") {
  field(SCAN, "Passive")
  field(OUT, "$(SubSys):Curr:Set PP")
}

# Continue process chain to complete Ramp process
record(seq, "$(SubSys):Curr:RampCompare:Seq2") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Curr:RampCompare:Delay.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Curr:Ramp:Complete:String.PROC")
}

# When Top timer reaches 60, continue chain to
# complete Ramp process
record(calc, "$(SubSys):Curr:RampCompare:Delay") {
  field(SCAN, ".1 second")
  field(FLNK, "$(SubSys):Curr:RampCompare:Seq2")
  field(CALC, "(ABS(60-B)<1)&A&(C=60)")
  field(INPA, "$(SubSys):Condition:Ramping:Status.VAL")
  field(INPB, "$(SubSys):Curr:Read CA")
  field(INPC, "$(SubSys):Curr:Ramp:Timer.VAL")
}

# Timer holding SWM Current PSET at Ramp top for
# 60 sec
record(calcout, "$(SubSys):Curr:Ramp:Timer") {
  field(SCAN, "1 second")
  field(CALC, "A+1")
  field(INPA, "$(SubSys):Curr:Ramp:Timer.VAL")
}

# Check to see if SWM Current PREAD has reached the
# ramp top which is 60.  If so, begin timer
# holding SWM Current PSET at 60
record(calcout, "$(SubSys):Curr:RampCompare") {
  field(SCAN, ".1 second")
  field(CALC, "(ABS(60-B)<1)&A")
  field(INPA, "$(SubSys):Condition:Ramping:Status.VAL")
  field(INPB, "$(SubSys):Curr:Read CA")
  field(OUT, "$(SubSys):Curr:Ramp:Timer.VAL")
  field(OOPT, "When Zero")
}

# Sets SWM Ramping Status to True
record(bo, "$(SubSys):Curr:RampingInProgressSetTrue") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Condition:Ramping:Status")
  field(VAL, "1")
  field(OUT, "$(SubSys):Condition:Ramping:Status.VAL")
}

# Sets SWM Ramping Status to False
record(bo, "$(SubSys):Curr:RampingInProgressSetFalse") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Condition:Ramping:Status")
  field(VAL, "0")
  field(OUT, "$(SubSys):Condition:Ramping:Status.VAL")
}

# Sends "Ramp To" value to SWM Current PSET
# This value is currently 60
record(ao, "$(SubSys):Curr:RampTop") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Curr:RampingInProgressSetTrue")
  field(VAL, "60")
  field(OUT, "$(SubSys):Curr:Set PP")
  field(OMSL, "supervisory")
}

# Sends SWM Current PSET to tempory storage
# This value will be put back into PSET once
# the Device has ramped to the top and stayed there
# for some time
record(ao, "$(SubSys):Curr:Ramp:Start") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(SubSys):Curr:Ramp:Started:String2")
  field(OUT, "$(SubSys):Curr:SetStored")
  field(DOL, "$(SubSys):Curr:Set CA")
  field(OMSL, "closed_loop")
}

# Starts Timeout Counter for SWM Ramping Timeout
record(calc, "$(SubSys):Curr:Ramp:Timeout:Timer") {
  field(SCAN, "1 second")
  field(CALC, "(A+1)*B")
  field(INPA, "$(SubSys):Curr:Ramp:Timeout:Timer.VAL")
  field(INPB, "$(SubSys):Condition:Ramping:Status.VAL")
  field(FLNK, "$(SubSys):Curr:Ramp:Timeout:Expired")
}

# SWM Ramping Timeout Counter
# If Ramping Status is true for more than 180 seconds
# or the Device turns off, the Timeout Counter will
# indicate that a timeout condition has occured
record(calc, "$(SubSys):Curr:Ramp:Timeout:Expired") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Curr:Ramp:Timeout:PrintString")
  field(CALC, "(180-A)<0|(!B&C)")
  field(INPA, "$(SubSys):Curr:Ramp:Timeout:Timer.VAL")
  field(INPB, "$(SubSys):On:Status")
  field(INPC, "$(SubSys):Condition:Ramping:Status.VAL")
}

# Sets timeout condition based on Timeout Counter
record(seq, "$(SubSys):Curr:Ramp:Timeout:PrintString") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Curr:Ramp:Timeout:Expired.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Curr:Ramp:TimeoutFan.PROC")
}

# Sends SWM Timeout to system log
# Processes record to set Ramping Status
# to False
record(stringout, "$(SubSys):Curr:Ramp:Timeout:String") {
  field(FLNK, "$(SubSys):Curr:Ramp:End")
  field(VAL, "$(SubSys) Timeout, Ramp canceled")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Determines which device interlock is preventing
# Device from Ramping
record(calc, "$(SubSys):Device:RampInterlock:Log") {
  field(FLNK, "$(SubSys):Device:RampInterlock:LogSeq")
  field(CALC, "(A&(!D))+2*!B+4*C+8*E")
  field(INPA, "$(SubSys):Condition:ShuttingDown:Status")
  field(INPB, "$(SubSys):On:Status")
  field(INPC, "RF:HighPowerOn:Status")
  field(INPD, "FC1:Closed:Status")
  field(INPE, "$(SubSys):Condition:Ramping:Status")
}

# Process appropriate log message records
# according to what is keeping SWM from ramping
# 
# .2 sec between links to avoid message storms to
# the system log.
record(seq, "$(SubSys):Device:RampInterlock:LogSeq") {
  field(SELM, "Mask")
  field(DLY1, ".2")
  field(LNK1, "$(SubSys):Ramp:ShuttingDown:String.PROC")
  field(DLY2, ".2")
  field(LNK2, "$(SubSys):Ramp:NotOn:String.PROC")
  field(DLY3, ".2")
  field(LNK3, "$(SubSys):Ramp:BeamOn:String.PROC")
  field(DLY4, ".2")
  field(SELN, "")
  field(SELL, "$(SubSys):Device:RampInterlock:Log.VAL")
  field(DOL1, "1")
  field(DOL2, "1")
  field(DOL3, "1")
  field(DOL4, "1")
  field(LNK4, "$(SubSys):CANT:Ramp:Ramping:String.PROC")
}

# Sends Cannot Ramp, Device Shutting Down message to system log
record(stringout, "$(SubSys):Ramp:ShuttingDown:String") {
  field(VAL, "Cannot Ramp, SWM Shutting Down")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Cannot Ramp, Device Not On message to system log
record(stringout, "$(SubSys):Ramp:NotOn:String") {
  field(VAL, "Cannot Ramp, SWM OFF")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Cannot Ramp, Beam On message to system log
record(stringout, "$(SubSys):Ramp:BeamOn:String") {
  field(VAL, "Cant Ramp SWM, Beam On+FC1 Open")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Lnk1
# Begins Process to set Timeout Flag on Status Display
# 
# FLNK
# Begins process to send Ramp Timeout to system log
# and to abort Ramp
record(fanout, "$(SubSys):Curr:Ramp:TimeoutFan") {
  field(FLNK, "$(SubSys):Curr:Ramp:Timeout:String")
  field(SELM, "All")
  field(LNK1, "$(SubSys):Curr:Ramp:Timeout:FlagSet")
}

# Clears Ramp Failed Info Message on Status Display
# when Ramping Status becomes True (i.e. when ramping is started)
record(calcout, "$(SubSys):Curr:Ramp:Timeout:Clear") {
  field(CALC, "A")
  field(INPA, "$(SubSys):Condition:Ramping:Status.VAL")
  field(OUT, "$(SubSys):Curr:Ramp:Timeout:FlagClear.PROC")
  field(OOPT, "Transition To Non-zero")
}

# Clears Ramp Timeout Info appearing on Status Display
record(bo, "$(SubSys):Curr:Ramp:Timeout:FlagClear") {
  field(VAL, "0")
  field(OUT, "$(SubSys):Curr:Ramp:Timeout:Flag PP")
}

# Sets Ramp Timeout Info appearing on Status Display
record(bo, "$(SubSys):Curr:Ramp:Timeout:FlagSet") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Curr:Ramp:Timeout:Flag PP")
}

# Ramp Timeout Info Appearing on Status Display
record(bo, "$(SubSys):Curr:Ramp:Timeout:Flag") {
  field(PINI, "YES")
  field(VAL, "0")
}

record(stringout, "$(SubSys):Curr:Ramp:Started:String2") {
  field(FLNK, "$(SubSys):Curr:RampTop")
  field(VAL, "$(SubSys) Ramping 60 Sent")
  field(OMSL, "supervisory")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# This record is processed when you want the SWM to ramp.
record(seq, "$(SubSys):Curr:Ramp:CMD") {
  field(FLNK, "$(SubSys):Curr:Ramp:ReadyCheck")
}

# Sends can't ramp b/c the swm is already ramping message.
record(stringout, "$(SubSys):CANT:Ramp:Ramping:String") {
  field(VAL, "Cannot Ramp, SWM Already Ramping")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

#! Further lines contain data used by VisualDCT
#! View(3836,1034,1.5)
#! Record("$(SubSys):Curr:Ramp:ReadyCheck",1700,1487,0,0,"$(SubSys):Curr:Ramp:ReadyCheck")
#! Field("$(SubSys):Curr:Ramp:ReadyCheck.FLNK",16777215,1,"$(SubSys):Curr:Ramp:ReadyCheck.FLNK")
#! Link("$(SubSys):Curr:Ramp:ReadyCheck.FLNK","$(SubSys):Curr:Ramp:Sequence")
#! Field("$(SubSys):Curr:Ramp:ReadyCheck.VAL",16777215,1,"$(SubSys):Curr:Ramp:ReadyCheck.VAL")
#! Field("$(SubSys):Curr:Ramp:ReadyCheck.INPA",16777215,1,"$(SubSys):Curr:Ramp:ReadyCheck.INPA")
#! Field("$(SubSys):Curr:Ramp:ReadyCheck.INPB",16777215,1,"$(SubSys):Curr:Ramp:ReadyCheck.INPB")
#! Field("$(SubSys):Curr:Ramp:ReadyCheck.INPC",16777215,1,"$(SubSys):Curr:Ramp:ReadyCheck.INPC")
#! Field("$(SubSys):Curr:Ramp:ReadyCheck.INPD",16777215,1,"$(SubSys):Curr:Ramp:ReadyCheck.INPD")
#! Field("$(SubSys):Curr:Ramp:ReadyCheck.INPE",16777215,1,"$(SubSys):Curr:Ramp:ReadyCheck.INPE")
#! Record("$(SubSys):Curr:Ramp:Sequence",2060,1493,0,0,"$(SubSys):Curr:Ramp:Sequence")
#! Field("$(SubSys):Curr:Ramp:Sequence.SELL",16777215,0,"$(SubSys):Curr:Ramp:Sequence.SELL")
#! Link("$(SubSys):Curr:Ramp:Sequence.SELL","$(SubSys):Curr:Ramp:ReadyCheck.VAL")
#! Field("$(SubSys):Curr:Ramp:Sequence.LNK2",16777215,1,"$(SubSys):Curr:Ramp:Sequence.LNK2")
#! Link("$(SubSys):Curr:Ramp:Sequence.LNK2","$(SubSys):Device:RampInterlock:Log.PROC")
#! Field("$(SubSys):Curr:Ramp:Sequence.LNK1",16777215,1,"$(SubSys):Curr:Ramp:Sequence.LNK1")
#! Link("$(SubSys):Curr:Ramp:Sequence.LNK1","$(SubSys):Curr:Ramp:Started:String.PROC")
#! Record("$(SubSys):Curr:Ramp:End",2520,2436,0,1,"$(SubSys):Curr:Ramp:End")
#! Field("$(SubSys):Curr:Ramp:End.OUT",16777215,1,"$(SubSys):Curr:Ramp:End.OUT")
#! Link("$(SubSys):Curr:Ramp:End.OUT","$(SubSys):Curr:Restore.PROC")
#! Record("$(SubSys):Curr:Ramp:Started:String",2520,1528,0,1,"$(SubSys):Curr:Ramp:Started:String")
#! Field("$(SubSys):Curr:Ramp:Started:String.PROC",16777215,0,"$(SubSys):Curr:Ramp:Started:String.PROC")
#! Field("$(SubSys):Curr:Ramp:Started:String.OUT",16777215,1,"$(SubSys):Curr:Ramp:Started:String.OUT")
#! Field("$(SubSys):Curr:Ramp:Started:String.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Started:String.FLNK")
#! Link("$(SubSys):Curr:Ramp:Started:String.FLNK","$(SubSys):Curr:Ramp:Start")
#! Record("$(SubSys):Curr:Ramp:Canceled:String",2240,1982,0,1,"$(SubSys):Curr:Ramp:Canceled:String")
#! Field("$(SubSys):Curr:Ramp:Canceled:String.OUT",16777215,1,"$(SubSys):Curr:Ramp:Canceled:String.OUT")
#! Field("$(SubSys):Curr:Ramp:Canceled:String.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Canceled:String.FLNK")
#! Link("$(SubSys):Curr:Ramp:Canceled:String.FLNK","$(SubSys):Curr:Ramp:End")
#! Record("$(SubSys):Curr:Restore",3040,2282,0,1,"$(SubSys):Curr:Restore")
#! Field("$(SubSys):Curr:Restore.FLNK",16777215,1,"$(SubSys):Curr:Restore.FLNK")
#! Link("$(SubSys):Curr:Restore.FLNK","$(SubSys):Curr:SetStored")
#! Field("$(SubSys):Curr:Restore.LNK1",16777215,1,"$(SubSys):Curr:Restore.LNK1")
#! Link("$(SubSys):Curr:Restore.LNK1","$(SubSys):Curr:RampingInProgressSetFalse")
#! Field("$(SubSys):Curr:Restore.PROC",16777215,0,"$(SubSys):Curr:Restore.PROC")
#! Record("$(SubSys):Curr:Ramp:Complete:String",1920,2122,0,1,"$(SubSys):Curr:Ramp:Complete:String")
#! Field("$(SubSys):Curr:Ramp:Complete:String.OUT",16777215,1,"$(SubSys):Curr:Ramp:Complete:String.OUT")
#! Field("$(SubSys):Curr:Ramp:Complete:String.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Complete:String.FLNK")
#! Link("$(SubSys):Curr:Ramp:Complete:String.FLNK","$(SubSys):Curr:Ramp:End")
#! Field("$(SubSys):Curr:Ramp:Complete:String.PROC",16777215,0,"$(SubSys):Curr:Ramp:Complete:String.PROC")
#! Record("$(SubSys):Curr:SetStored",3580,1876,0,0,"$(SubSys):Curr:SetStored")
#! Field("$(SubSys):Curr:SetStored.OUT",16777215,0,"$(SubSys):Curr:SetStored.OUT")
#! Field("$(SubSys):Curr:SetStored.VAL",16777215,0,"$(SubSys):Curr:SetStored.VAL")
#! Record("$(SubSys):Curr:RampCompare:Seq2",1600,2128,0,0,"$(SubSys):Curr:RampCompare:Seq2")
#! Field("$(SubSys):Curr:RampCompare:Seq2.LNK1",16777215,1,"$(SubSys):Curr:RampCompare:Seq2.LNK1")
#! Link("$(SubSys):Curr:RampCompare:Seq2.LNK1","$(SubSys):Curr:Ramp:Complete:String.PROC")
#! Field("$(SubSys):Curr:RampCompare:Seq2.SELL",16777215,0,"$(SubSys):Curr:RampCompare:Seq2.SELL")
#! Link("$(SubSys):Curr:RampCompare:Seq2.SELL","$(SubSys):Curr:RampCompare:Delay.VAL")
#! Record("$(SubSys):Curr:RampCompare:Delay",1180,2081,0,1,"$(SubSys):Curr:RampCompare:Delay")
#! Field("$(SubSys):Curr:RampCompare:Delay.FLNK",16777215,1,"$(SubSys):Curr:RampCompare:Delay.FLNK")
#! Link("$(SubSys):Curr:RampCompare:Delay.FLNK","$(SubSys):Curr:RampCompare:Seq2")
#! Field("$(SubSys):Curr:RampCompare:Delay.VAL",16777215,1,"$(SubSys):Curr:RampCompare:Delay.VAL")
#! Field("$(SubSys):Curr:RampCompare:Delay.INPA",16777215,1,"$(SubSys):Curr:RampCompare:Delay.INPA")
#! Field("$(SubSys):Curr:RampCompare:Delay.INPC",16777215,0,"$(SubSys):Curr:RampCompare:Delay.INPC")
#! Link("$(SubSys):Curr:RampCompare:Delay.INPC","$(SubSys):Curr:Ramp:Timer.VAL")
#! Field("$(SubSys):Curr:RampCompare:Delay.INPB",16777215,1,"$(SubSys):Curr:RampCompare:Delay.INPB")
#! Record("$(SubSys):Curr:Ramp:Timer",840,2122,0,1,"$(SubSys):Curr:Ramp:Timer")
#! Field("$(SubSys):Curr:Ramp:Timer.VAL",16777215,1,"$(SubSys):Curr:Ramp:Timer.VAL")
#! Field("$(SubSys):Curr:Ramp:Timer.INPA",16777215,0,"$(SubSys):Curr:Ramp:Timer.INPA")
#! Link("$(SubSys):Curr:Ramp:Timer.INPA","$(SubSys):Curr:Ramp:Timer.VAL")
#! Record("$(SubSys):Curr:RampCompare",480,2101,0,1,"$(SubSys):Curr:RampCompare")
#! Field("$(SubSys):Curr:RampCompare.INPB",16777215,1,"$(SubSys):Curr:RampCompare.INPB")
#! Field("$(SubSys):Curr:RampCompare.OUT",16777215,1,"$(SubSys):Curr:RampCompare.OUT")
#! Link("$(SubSys):Curr:RampCompare.OUT","$(SubSys):Curr:Ramp:Timer.VAL")
#! Field("$(SubSys):Curr:RampCompare.INPA",16777215,1,"$(SubSys):Curr:RampCompare.INPA")
#! Record("$(SubSys):Curr:RampingInProgressSetTrue",3780,1548,0,0,"$(SubSys):Curr:RampingInProgressSetTrue")
#! Field("$(SubSys):Curr:RampingInProgressSetTrue.FLNK",16777215,1,"$(SubSys):Curr:RampingInProgressSetTrue.FLNK")
#! Field("$(SubSys):Curr:RampingInProgressSetTrue.OUT",16777215,1,"$(SubSys):Curr:RampingInProgressSetTrue.OUT")
#! Record("$(SubSys):Curr:RampingInProgressSetFalse",3460,2488,0,0,"$(SubSys):Curr:RampingInProgressSetFalse")
#! Field("$(SubSys):Curr:RampingInProgressSetFalse.FLNK",16777215,1,"$(SubSys):Curr:RampingInProgressSetFalse.FLNK")
#! Field("$(SubSys):Curr:RampingInProgressSetFalse.OUT",16777215,1,"$(SubSys):Curr:RampingInProgressSetFalse.OUT")
#! Record("$(SubSys):Curr:RampTop",3500,1434,0,0,"$(SubSys):Curr:RampTop")
#! Field("$(SubSys):Curr:RampTop.OUT",16777215,0,"$(SubSys):Curr:RampTop.OUT")
#! Field("$(SubSys):Curr:RampTop.FLNK",16777215,1,"$(SubSys):Curr:RampTop.FLNK")
#! Link("$(SubSys):Curr:RampTop.FLNK","$(SubSys):Curr:RampingInProgressSetTrue")
#! Record("$(SubSys):Curr:Ramp:Start",2840,1521,0,0,"$(SubSys):Curr:Ramp:Start")
#! Field("$(SubSys):Curr:Ramp:Start.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Start.FLNK")
#! Link("$(SubSys):Curr:Ramp:Start.FLNK","$(SubSys):Curr:Ramp:Started:String2")
#! Field("$(SubSys):Curr:Ramp:Start.OUT",16777215,1,"$(SubSys):Curr:Ramp:Start.OUT")
#! Link("$(SubSys):Curr:Ramp:Start.OUT","$(SubSys):Curr:SetStored.VAL")
#! Field("$(SubSys):Curr:Ramp:Start.DOL",16777215,0,"$(SubSys):Curr:Ramp:Start.DOL")
#! Record("$(SubSys):Curr:Ramp:Timeout:Timer",660,2714,0,1,"$(SubSys):Curr:Ramp:Timeout:Timer")
#! Field("$(SubSys):Curr:Ramp:Timeout:Timer.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Timer.FLNK")
#! Link("$(SubSys):Curr:Ramp:Timeout:Timer.FLNK","$(SubSys):Curr:Ramp:Timeout:Expired")
#! Field("$(SubSys):Curr:Ramp:Timeout:Timer.INPA",16777215,0,"$(SubSys):Curr:Ramp:Timeout:Timer.INPA")
#! Link("$(SubSys):Curr:Ramp:Timeout:Timer.INPA","$(SubSys):Curr:Ramp:Timeout:Timer.VAL")
#! Field("$(SubSys):Curr:Ramp:Timeout:Timer.VAL",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Timer.VAL")
#! Field("$(SubSys):Curr:Ramp:Timeout:Timer.INPB",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Timer.INPB")
#! Record("$(SubSys):Curr:Ramp:Timeout:Expired",1040,2721,0,0,"$(SubSys):Curr:Ramp:Timeout:Expired")
#! Field("$(SubSys):Curr:Ramp:Timeout:Expired.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Expired.FLNK")
#! Link("$(SubSys):Curr:Ramp:Timeout:Expired.FLNK","$(SubSys):Curr:Ramp:Timeout:PrintString")
#! Field("$(SubSys):Curr:Ramp:Timeout:Expired.INPA",16777215,0,"$(SubSys):Curr:Ramp:Timeout:Expired.INPA")
#! Link("$(SubSys):Curr:Ramp:Timeout:Expired.INPA","$(SubSys):Curr:Ramp:Timeout:Timer.VAL")
#! Field("$(SubSys):Curr:Ramp:Timeout:Expired.VAL",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Expired.VAL")
#! Field("$(SubSys):Curr:Ramp:Timeout:Expired.INPB",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Expired.INPB")
#! Field("$(SubSys):Curr:Ramp:Timeout:Expired.INPC",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Expired.INPC")
#! Record("$(SubSys):Curr:Ramp:Timeout:PrintString",1380,2748,0,0,"$(SubSys):Curr:Ramp:Timeout:PrintString")
#! Field("$(SubSys):Curr:Ramp:Timeout:PrintString.LNK1",16777215,1,"$(SubSys):Curr:Ramp:Timeout:PrintString.LNK1")
#! Link("$(SubSys):Curr:Ramp:Timeout:PrintString.LNK1","$(SubSys):Curr:Ramp:TimeoutFan.PROC")
#! Field("$(SubSys):Curr:Ramp:Timeout:PrintString.SELL",16777215,0,"$(SubSys):Curr:Ramp:Timeout:PrintString.SELL")
#! Link("$(SubSys):Curr:Ramp:Timeout:PrintString.SELL","$(SubSys):Curr:Ramp:Timeout:Expired.VAL")
#! Record("$(SubSys):Curr:Ramp:Timeout:String",2140,2502,0,0,"$(SubSys):Curr:Ramp:Timeout:String")
#! Field("$(SubSys):Curr:Ramp:Timeout:String.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Timeout:String.FLNK")
#! Link("$(SubSys):Curr:Ramp:Timeout:String.FLNK","$(SubSys):Curr:Ramp:End")
#! Field("$(SubSys):Curr:Ramp:Timeout:String.OUT",16777215,1,"$(SubSys):Curr:Ramp:Timeout:String.OUT")
#! Record("$(SubSys):Device:RampInterlock:Log",2460,887,0,0,"$(SubSys):Device:RampInterlock:Log")
#! Field("$(SubSys):Device:RampInterlock:Log.INPA",16777215,1,"$(SubSys):Device:RampInterlock:Log.INPA")
#! Field("$(SubSys):Device:RampInterlock:Log.INPB",16777215,1,"$(SubSys):Device:RampInterlock:Log.INPB")
#! Field("$(SubSys):Device:RampInterlock:Log.INPC",16777215,1,"$(SubSys):Device:RampInterlock:Log.INPC")
#! Field("$(SubSys):Device:RampInterlock:Log.FLNK",16777215,1,"$(SubSys):Device:RampInterlock:Log.FLNK")
#! Link("$(SubSys):Device:RampInterlock:Log.FLNK","$(SubSys):Device:RampInterlock:LogSeq")
#! Field("$(SubSys):Device:RampInterlock:Log.VAL",16777215,0,"$(SubSys):Device:RampInterlock:Log.VAL")
#! Field("$(SubSys):Device:RampInterlock:Log.PROC",16777215,0,"$(SubSys):Device:RampInterlock:Log.PROC")
#! Field("$(SubSys):Device:RampInterlock:Log.INPD",16777215,1,"$(SubSys):Device:RampInterlock:Log.INPD")
#! Field("$(SubSys):Device:RampInterlock:Log.INPE",16777215,1,"$(SubSys):Device:RampInterlock:Log.INPE")
#! Record("$(SubSys):Device:RampInterlock:LogSeq",2740,797,0,0,"$(SubSys):Device:RampInterlock:LogSeq")
#! Field("$(SubSys):Device:RampInterlock:LogSeq.LNK4",16777215,1,"$(SubSys):Device:RampInterlock:LogSeq.LNK4")
#! Link("$(SubSys):Device:RampInterlock:LogSeq.LNK4","$(SubSys):CANT:Ramp:Ramping:String.PROC")
#! Field("$(SubSys):Device:RampInterlock:LogSeq.LNK3",16777215,1,"$(SubSys):Device:RampInterlock:LogSeq.LNK3")
#! Link("$(SubSys):Device:RampInterlock:LogSeq.LNK3","$(SubSys):Ramp:BeamOn:String.PROC")
#! Field("$(SubSys):Device:RampInterlock:LogSeq.LNK2",16777215,1,"$(SubSys):Device:RampInterlock:LogSeq.LNK2")
#! Link("$(SubSys):Device:RampInterlock:LogSeq.LNK2","$(SubSys):Ramp:NotOn:String.PROC")
#! Field("$(SubSys):Device:RampInterlock:LogSeq.LNK1",16777215,1,"$(SubSys):Device:RampInterlock:LogSeq.LNK1")
#! Link("$(SubSys):Device:RampInterlock:LogSeq.LNK1","$(SubSys):Ramp:ShuttingDown:String.PROC")
#! Field("$(SubSys):Device:RampInterlock:LogSeq.SELL",16777215,0,"$(SubSys):Device:RampInterlock:LogSeq.SELL")
#! Link("$(SubSys):Device:RampInterlock:LogSeq.SELL","$(SubSys):Device:RampInterlock:Log.VAL")
#! Record("$(SubSys):Ramp:ShuttingDown:String",3100,1136,0,1,"$(SubSys):Ramp:ShuttingDown:String")
#! Field("$(SubSys):Ramp:ShuttingDown:String.OUT",16777215,1,"$(SubSys):Ramp:ShuttingDown:String.OUT")
#! Field("$(SubSys):Ramp:ShuttingDown:String.PROC",16777215,0,"$(SubSys):Ramp:ShuttingDown:String.PROC")
#! Record("$(SubSys):Ramp:NotOn:String",3120,956,0,1,"$(SubSys):Ramp:NotOn:String")
#! Field("$(SubSys):Ramp:NotOn:String.OUT",16777215,1,"$(SubSys):Ramp:NotOn:String.OUT")
#! Field("$(SubSys):Ramp:NotOn:String.PROC",16777215,0,"$(SubSys):Ramp:NotOn:String.PROC")
#! Record("$(SubSys):Ramp:BeamOn:String",3100,796,0,1,"$(SubSys):Ramp:BeamOn:String")
#! Field("$(SubSys):Ramp:BeamOn:String.OUT",16777215,1,"$(SubSys):Ramp:BeamOn:String.OUT")
#! Field("$(SubSys):Ramp:BeamOn:String.PROC",16777215,0,"$(SubSys):Ramp:BeamOn:String.PROC")
#! Record("$(SubSys):Curr:Ramp:TimeoutFan",1720,2742,0,1,"$(SubSys):Curr:Ramp:TimeoutFan")
#! Field("$(SubSys):Curr:Ramp:TimeoutFan.PROC",16777215,0,"$(SubSys):Curr:Ramp:TimeoutFan.PROC")
#! Field("$(SubSys):Curr:Ramp:TimeoutFan.FLNK",16777215,1,"$(SubSys):Curr:Ramp:TimeoutFan.FLNK")
#! Link("$(SubSys):Curr:Ramp:TimeoutFan.FLNK","$(SubSys):Curr:Ramp:Timeout:String")
#! Field("$(SubSys):Curr:Ramp:TimeoutFan.LNK1",16777215,1,"$(SubSys):Curr:Ramp:TimeoutFan.LNK1")
#! Link("$(SubSys):Curr:Ramp:TimeoutFan.LNK1","$(SubSys):Curr:Ramp:Timeout:FlagSet")
#! Record("$(SubSys):Curr:Ramp:Timeout:Clear",1780,3508,0,0,"$(SubSys):Curr:Ramp:Timeout:Clear")
#! Field("$(SubSys):Curr:Ramp:Timeout:Clear.OUT",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Clear.OUT")
#! Link("$(SubSys):Curr:Ramp:Timeout:Clear.OUT","$(SubSys):Curr:Ramp:Timeout:FlagClear.PROC")
#! Field("$(SubSys):Curr:Ramp:Timeout:Clear.INPA",16777215,1,"$(SubSys):Curr:Ramp:Timeout:Clear.INPA")
#! Record("$(SubSys):Curr:Ramp:Timeout:FlagClear",2100,3496,0,1,"$(SubSys):Curr:Ramp:Timeout:FlagClear")
#! Field("$(SubSys):Curr:Ramp:Timeout:FlagClear.OUT",16777215,1,"$(SubSys):Curr:Ramp:Timeout:FlagClear.OUT")
#! Link("$(SubSys):Curr:Ramp:Timeout:FlagClear.OUT","$(SubSys):Curr:Ramp:Timeout:Flag.VAL")
#! Field("$(SubSys):Curr:Ramp:Timeout:FlagClear.PROC",16777215,0,"$(SubSys):Curr:Ramp:Timeout:FlagClear.PROC")
#! Record("$(SubSys):Curr:Ramp:Timeout:FlagSet",2100,3336,0,0,"$(SubSys):Curr:Ramp:Timeout:FlagSet")
#! Field("$(SubSys):Curr:Ramp:Timeout:FlagSet.OUT",16777215,1,"$(SubSys):Curr:Ramp:Timeout:FlagSet.OUT")
#! Link("$(SubSys):Curr:Ramp:Timeout:FlagSet.OUT","$(SubSys):Curr:Ramp:Timeout:Flag.VAL")
#! Record("$(SubSys):Curr:Ramp:Timeout:Flag",2540,3416,0,1,"$(SubSys):Curr:Ramp:Timeout:Flag")
#! Field("$(SubSys):Curr:Ramp:Timeout:Flag.VAL",16777215,0,"$(SubSys):Curr:Ramp:Timeout:Flag.VAL")
#! Record("$(SubSys):Curr:Ramp:Started:String2",3180,1448,0,0,"$(SubSys):Curr:Ramp:Started:String2")
#! Field("$(SubSys):Curr:Ramp:Started:String2.FLNK",16777215,1,"$(SubSys):Curr:Ramp:Started:String2.FLNK")
#! Link("$(SubSys):Curr:Ramp:Started:String2.FLNK","$(SubSys):Curr:RampTop")
#! Field("$(SubSys):Curr:Ramp:Started:String2.OUT",16777215,1,"$(SubSys):Curr:Ramp:Started:String2.OUT")
#! Record("$(SubSys):Curr:Ramp:CMD",1340,1410,0,1,"$(SubSys):Curr:Ramp:CMD")
#! Field("$(SubSys):Curr:Ramp:CMD.FLNK",16777215,1,"$(SubSys):Curr:Ramp:CMD.FLNK")
#! Link("$(SubSys):Curr:Ramp:CMD.FLNK","$(SubSys):Curr:Ramp:ReadyCheck")
#! Record("$(SubSys):CANT:Ramp:Ramping:String",3080,636,0,1,"$(SubSys):CANT:Ramp:Ramping:String")
#! Field("$(SubSys):CANT:Ramp:Ramping:String.OUT",16777215,1,"$(SubSys):CANT:Ramp:Ramping:String.OUT")
#! Field("$(SubSys):CANT:Ramp:Ramping:String.PROC",16777215,0,"$(SubSys):CANT:Ramp:Ramping:String.PROC")
