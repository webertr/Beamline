#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Set Device Initializing Status to True
record(bo, "$(Group):Condition:Initialize:SetTrue") {
  field(FLNK, "$(Group):OnStatusChk")
  field(VAL, "1")
  field(OUT, "$(Group):Condition:Initializing:Status.VAL PP")
}

# Check to see if Device is on to ensure
# Device can communicate with IOC
# before initiaiiztaion
record(calc, "$(Group):OnStatusChk") {
  field(FLNK, "$(Group):OnStatus:ChkSeq")
  field(CALC, "A+1")
  field(INPA, "$(Group):On:Status")
}

# Branching for Device On Check
# 
# LNK1 Aborts Init and Processes record
# that logs Device Not On
# 
# LNK 2 continues Init Process
record(seq, "$(Group):OnStatus:ChkSeq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):OnStatusChk.VAL")
  field(DOL1, "1")
  field(LNK1, "$(Group):Curr:ResetHB:PulseHi2.PROC")
  field(DOL2, "1")
  field(LNK2, "$(Group):Init:Condition:RFON:Chk.PROC")
}

# Check to see if Beam is on.
# Cannot Initialize with Beam on
record(calc, "$(Group):Init:Condition:RFON:Chk") {
  field(CALC, "!(A&(!B))+1")
  field(INPA, "RF:HighPowerOn:Status")
  field(FLNK, "$(Group):Init:Condition:RFON:ChkSeq")
  field(INPB, "FC1:Closed:Status")
}

# LNK1 Aborts Init and Processes record
# that logs Beam On
# 
# LNK 2 continues Init Process
record(seq, "$(Group):Init:Condition:RFON:ChkSeq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):Init:Condition:RFON:Chk.VAL")
  field(LNK1, "$(Group):Curr:InitFailed4.PROC")
  field(LNK2, "$(Group):Init:CoilErrorCheck.PROC")
}

# Links to perform initialization tasks for the GCC Kikisui supply.
# Required tasks include Comm check, and sending out required analog
# values.  These checks are in GCCInitializeSupply.vdb 4 sec delay
# gives PS time to come on.
record(seq, "$(Group):Init:CoilErrorCheck") {
  field(SELM, "All")
  field(LNK1, "$(Group):InitStarted.PROC")
  field(FLNK, "$(Group):Init:ChkInitStatus")
  field(DLY1, "4")
}

# Returns a 0 after the supply has finished its part of the
# initialization: Comm check, and sending out required analog values
record(calc, "$(Group):Init:ChkInitStatus") {
  field(FLNK, "$(Group):Init:ChkInitStatus2")
  field(CALC, "A")
  field(INPA, "$(Group):Init:Status")
}

# This returns a:
# 1 if init is not complete for all coils.  Link back to check if inits are complete.
# 
# 2 if init is complete and one of the inits has failed.  Abort Initialization.
record(calc, "$(Group):Init:ChkInitStatus2") {
  field(FLNK, "$(Group):Init:ChkInitStatus3")
  field(CALC, "H+2*!H*(A)")
  field(INPA, "$(Group):InitFailed:Status")
  field(INPH, "$(Group):Init:ChkInitStatus.VAL")
}

# This returns a:
# 1 if init is not complete for all coils.  Link back to check if inits are complete.
# 
# 2 if init is complete and one of the inits has failed.  Abort Initialization.
# 
# 3 if init is complete and no inits failed. Continue Initialization Process.
record(calc, "$(Group):Init:ChkInitStatus3") {
  field(FLNK, "$(Group):Init:CoilErrorCheck2")
  field(CALC, "I+3*!H*!A")
  field(INPA, "$(Group):InitFailed:Status")
  field(INPH, "$(Group):Init:ChkInitStatus.VAL")
  field(INPI, "$(Group):Init:ChkInitStatus2.VAL")
}

# Uses previous Calc to branch:
# 
# 1 if init is not complete for all coils.  Link back to check if inits are complete.
# 
# 2 if init is complete and one of the inits has failed.  Abort Initialization.
# 
# 3 if init is complete and no inits failed. Continue Initialization Process.
# 
# Link 1 must be CA to break the processing locked, thus allowing a loop
record(seq, "$(Group):Init:CoilErrorCheck2") {
  field(SELM, "Specified")
  field(SELL, "$(Group):Init:ChkInitStatus3.VAL")
  field(LNK1, "$(Group):Init:ChkInitStatus.PROC CA")
  field(LNK2, "$(Group):Condition:Initialize:SetFalse.PROC CA")
  field(LNK3, "$(Group):Initializing:Scan:Disable:Reset.PROC CA")
}

# Reset initializing:scan:disable record once all powersupplies have
# been initialized
record(bo, "$(Group):Initializing:Scan:Disable:Reset") {
  field(PINI, "YES")
  field(VAL, "0")
  field(FLNK, "$(Group):Curr:ResetHB:PulseHi")
  field(OUT, "$(Group):Initializing:Scan:Disable.VAL PP")
}

# Set Reset Heartbeat Interlock bit high in modicon
# to reset heartbeat monitor Wait 4 seconds to allow
# the scanning of the powersupplies to begin, thus
# providing the heartbeat signal
record(calcout, "$(Group):Curr:ResetHB:PulseHi") {
  field(FLNK, "$(Group):Curr:ResetHB:PulseLo")
  field(OUT, "$(Group):Reset:Heartbeat:Write PP")
  field(ODLY, "4")
  field(CALC, "1")
}

# Set Reset Heartbeat Interlock bit Low in modicon
# so heartbeat can be reset in the future
record(calcout, "$(Group):Curr:ResetHB:PulseLo") {
  field(OUT, "$(Group):Reset:Heartbeat:Write PP")
  field(ODLY, "1")
  field(FLNK, "$(Group):Init:HBCheck")
}

# Checks to insure that Heart Beat was Reset in MOD 1
record(calc, "$(Group):Init:HBCheck") {
  field(FLNK, "$(Group):Init:HBCheck:Seq")
  field(CALC, "A+1")
  field(INPA, "$(Group):HeartbeatOK:Status")
}

# If Heartbeat is OK:
# Link 2 - continue with Initialization
# 
# If Not:
# Link 1 - Log Heart Beat Reset Fail and abort Initialization
record(seq, "$(Group):Init:HBCheck:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):Init:HBCheck.VAL")
  field(DOL1, "0")
  field(DOL2, "1")
  field(LNK2, "$(Group):Curr:InitComplete.PROC")
  field(LNK1, "$(Group):Curr:InitFailed6.PROC")
}

# Logs Init Complete
record(stringout, "$(Group):Curr:InitComplete") {
  field(FLNK, "$(Group):Condition:Initialize:SetFalse")
  field(VAL, "$(Group) Initialize Complete")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Heart Beat reset failed to log and continues
# to abort init sequence
record(stringout, "$(Group):Curr:InitFailed6") {
  field(FLNK, "$(Group):Condition:Initialize:SetFalse")
  field(VAL, "$(Group) Hrt Beat Err,Init Failed")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sets Initialize Status to False.
record(bo, "$(Group):Condition:Initialize:SetFalse") {
  field(VAL, "0")
  field(OUT, "$(Group):Condition:Initializing:Status.VAL PP")
}

# disallows power supply scanning until each powersupply has been intialized
# Value is 1 while supplies are initializing and this is when the
# scanning to read the power supplies will be disabled.
record(bo, "$(Group):Initializing:Scan:Disable") {
  field(PINI, "YES")
}

# Logs Beam On, Init Aborted
record(stringout, "$(Group):Curr:InitFailed4") {
  field(FLNK, "$(Group):Condition:Initialize:SetFalse")
  field(VAL, "$(Group) Beam On+FC1 Out,Can't Init")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Logs Device Off, Init Aborted
record(stringout, "$(Group):Curr:InitFailed3") {
  field(FLNK, "$(Group):Condition:Initialize:SetFalse")
  field(VAL, "$(Group) Not On, HB Reset Only")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Initializing Status. This is read in GCCBeamInterlockCondition.vdb. There, it is
# bundled up to one big interock, that is written to a modicon bit. This modicon bit
# is part of a PLC that will stop the beam from turning on.
record(bo, "$(Group):Condition:Initializing:Status") {
  field(PINI, "YES")
  field(OUT, "$(Group):Initializing:Scan:Disable.VAL PP")
}

# Begin Device Init Sequence. Write "Initializing" Message to system log
# 
# This record is processed when the "Initialize" button is clicked
# in the EDM operations interface.
# 
# It is also processed by a call from a record in the "OnOff.vdb". It happens once
# the databases senses that a coil has been turned on, in the modicon bit "On:Status"
# bit.
record(stringout, "$(Group):Curr:Init:String") {
  field(FLNK, "$(Group):Condition:Initialize:SetTrue")
  field(VAL, "$(Group) Initializing")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# We want to be able to reset the HB with the GCC Off, b/c the GCC can be off the PSET=0
record(calcout, "$(Group):Curr:ResetHB:PulseHi2") {
  field(FLNK, "$(Group):Curr:ResetHB:PulseLo2")
  field(OUT, "$(Group):Reset:Heartbeat:Write PP")
  field(CALC, "1")
}

# We want to be able to reset the HB with the GCC Off, b/c the GCC can be off the PSET=0
record(calcout, "$(Group):Curr:ResetHB:PulseLo2") {
  field(OUT, "$(Group):Reset:Heartbeat:Write PP")
  field(ODLY, "1")
  field(FLNK, "$(Group):Curr:InitFailed3")
}

#! Further lines contain data used by VisualDCT
#! View(6440,5769,1.5)
#! Record("$(Group):Condition:Initialize:SetTrue",300,2882,0,0,"$(Group):Condition:Initialize:SetTrue")
#! Field("$(Group):Condition:Initialize:SetTrue.OUT",16777215,0,"$(Group):Condition:Initialize:SetTrue.OUT")
#! Link("$(Group):Condition:Initialize:SetTrue.OUT","$(Group):Condition:Initializing:Status.VAL")
#! Field("$(Group):Condition:Initialize:SetTrue.FLNK",16777215,1,"$(Group):Condition:Initialize:SetTrue.FLNK")
#! Link("$(Group):Condition:Initialize:SetTrue.FLNK","$(Group):OnStatusChk")
#! Record("$(Group):OnStatusChk",560,2882,0,0,"$(Group):OnStatusChk")
#! Field("$(Group):OnStatusChk.FLNK",16777215,1,"$(Group):OnStatusChk.FLNK")
#! Link("$(Group):OnStatusChk.FLNK","$(Group):OnStatus:ChkSeq")
#! Field("$(Group):OnStatusChk.INPA",16777215,1,"$(Group):OnStatusChk.INPA")
#! Field("$(Group):OnStatusChk.VAL",16777215,0,"$(Group):OnStatusChk.VAL")
#! Record("$(Group):OnStatus:ChkSeq",820,2901,0,0,"$(Group):OnStatus:ChkSeq")
#! Field("$(Group):OnStatus:ChkSeq.SELL",16777215,0,"$(Group):OnStatus:ChkSeq.SELL")
#! Link("$(Group):OnStatus:ChkSeq.SELL","$(Group):OnStatusChk.VAL")
#! Field("$(Group):OnStatus:ChkSeq.LNK2",16777215,1,"$(Group):OnStatus:ChkSeq.LNK2")
#! Link("$(Group):OnStatus:ChkSeq.LNK2","$(Group):Init:Condition:RFON:Chk.PROC")
#! Field("$(Group):OnStatus:ChkSeq.LNK1",16777215,1,"$(Group):OnStatus:ChkSeq.LNK1")
#! Link("$(Group):OnStatus:ChkSeq.LNK1","$(Group):Curr:ResetHB:PulseHi2.PROC")
#! Record("$(Group):Init:Condition:RFON:Chk",1080,2868,0,1,"$(Group):Init:Condition:RFON:Chk")
#! Field("$(Group):Init:Condition:RFON:Chk.FLNK",16777215,1,"$(Group):Init:Condition:RFON:Chk.FLNK")
#! Link("$(Group):Init:Condition:RFON:Chk.FLNK","$(Group):Init:Condition:RFON:ChkSeq")
#! Field("$(Group):Init:Condition:RFON:Chk.INPA",16777215,1,"$(Group):Init:Condition:RFON:Chk.INPA")
#! Field("$(Group):Init:Condition:RFON:Chk.VAL",16777215,0,"$(Group):Init:Condition:RFON:Chk.VAL")
#! Field("$(Group):Init:Condition:RFON:Chk.PROC",16777215,1,"$(Group):Init:Condition:RFON:Chk.PROC")
#! Field("$(Group):Init:Condition:RFON:Chk.INPB",16777215,1,"$(Group):Init:Condition:RFON:Chk.INPB")
#! Record("$(Group):Init:Condition:RFON:ChkSeq",1340,2968,0,0,"$(Group):Init:Condition:RFON:ChkSeq")
#! Field("$(Group):Init:Condition:RFON:ChkSeq.SELL",16777215,0,"$(Group):Init:Condition:RFON:ChkSeq.SELL")
#! Link("$(Group):Init:Condition:RFON:ChkSeq.SELL","$(Group):Init:Condition:RFON:Chk.VAL")
#! Field("$(Group):Init:Condition:RFON:ChkSeq.LNK2",16777215,1,"$(Group):Init:Condition:RFON:ChkSeq.LNK2")
#! Link("$(Group):Init:Condition:RFON:ChkSeq.LNK2","$(Group):Init:CoilErrorCheck.PROC")
#! Field("$(Group):Init:Condition:RFON:ChkSeq.LNK1",16777215,1,"$(Group):Init:Condition:RFON:ChkSeq.LNK1")
#! Link("$(Group):Init:Condition:RFON:ChkSeq.LNK1","$(Group):Curr:InitFailed4.PROC")
#! Record("$(Group):Init:CoilErrorCheck",1640,2768,0,1,"$(Group):Init:CoilErrorCheck")
#! Field("$(Group):Init:CoilErrorCheck.LNK1",16777215,1,"$(Group):Init:CoilErrorCheck.LNK1")
#! Field("$(Group):Init:CoilErrorCheck.PROC",16777215,0,"$(Group):Init:CoilErrorCheck.PROC")
#! Field("$(Group):Init:CoilErrorCheck.FLNK",16777215,1,"$(Group):Init:CoilErrorCheck.FLNK")
#! Link("$(Group):Init:CoilErrorCheck.FLNK","$(Group):Init:ChkInitStatus")
#! Record("$(Group):Init:ChkInitStatus",2020,2922,0,0,"$(Group):Init:ChkInitStatus")
#! Field("$(Group):Init:ChkInitStatus.INPA",16777215,1,"$(Group):Init:ChkInitStatus.INPA")
#! Field("$(Group):Init:ChkInitStatus.FLNK",16777215,1,"$(Group):Init:ChkInitStatus.FLNK")
#! Link("$(Group):Init:ChkInitStatus.FLNK","$(Group):Init:ChkInitStatus2")
#! Field("$(Group):Init:ChkInitStatus.VAL",16777215,1,"$(Group):Init:ChkInitStatus.VAL")
#! Field("$(Group):Init:ChkInitStatus.PROC",16777215,1,"$(Group):Init:ChkInitStatus.PROC")
#! Record("$(Group):Init:ChkInitStatus2",2440,2868,0,0,"$(Group):Init:ChkInitStatus2")
#! Field("$(Group):Init:ChkInitStatus2.FLNK",16777215,1,"$(Group):Init:ChkInitStatus2.FLNK")
#! Link("$(Group):Init:ChkInitStatus2.FLNK","$(Group):Init:ChkInitStatus3")
#! Field("$(Group):Init:ChkInitStatus2.INPA",16777215,1,"$(Group):Init:ChkInitStatus2.INPA")
#! Field("$(Group):Init:ChkInitStatus2.INPH",16777215,0,"$(Group):Init:ChkInitStatus2.INPH")
#! Link("$(Group):Init:ChkInitStatus2.INPH","$(Group):Init:ChkInitStatus.VAL")
#! Field("$(Group):Init:ChkInitStatus2.VAL",16777215,1,"$(Group):Init:ChkInitStatus2.VAL")
#! Record("$(Group):Init:ChkInitStatus3",2740,2934,0,0,"$(Group):Init:ChkInitStatus3")
#! Field("$(Group):Init:ChkInitStatus3.FLNK",16777215,1,"$(Group):Init:ChkInitStatus3.FLNK")
#! Link("$(Group):Init:ChkInitStatus3.FLNK","$(Group):Init:CoilErrorCheck2")
#! Field("$(Group):Init:ChkInitStatus3.INPA",16777215,1,"$(Group):Init:ChkInitStatus3.INPA")
#! Field("$(Group):Init:ChkInitStatus3.INPI",16777215,0,"$(Group):Init:ChkInitStatus3.INPI")
#! Link("$(Group):Init:ChkInitStatus3.INPI","$(Group):Init:ChkInitStatus2.VAL")
#! Field("$(Group):Init:ChkInitStatus3.INPH",16777215,0,"$(Group):Init:ChkInitStatus3.INPH")
#! Link("$(Group):Init:ChkInitStatus3.INPH","$(Group):Init:ChkInitStatus.VAL")
#! Field("$(Group):Init:ChkInitStatus3.VAL",16777215,1,"$(Group):Init:ChkInitStatus3.VAL")
#! Record("$(Group):Init:CoilErrorCheck2",3080,3134,0,0,"$(Group):Init:CoilErrorCheck2")
#! Field("$(Group):Init:CoilErrorCheck2.LNK3",16777215,1,"$(Group):Init:CoilErrorCheck2.LNK3")
#! Link("$(Group):Init:CoilErrorCheck2.LNK3","$(Group):Initializing:Scan:Disable:Reset.PROC")
#! Field("$(Group):Init:CoilErrorCheck2.SELL",16777215,0,"$(Group):Init:CoilErrorCheck2.SELL")
#! Link("$(Group):Init:CoilErrorCheck2.SELL","$(Group):Init:ChkInitStatus3.VAL")
#! Field("$(Group):Init:CoilErrorCheck2.LNK1",16777215,0,"$(Group):Init:CoilErrorCheck2.LNK1")
#! Link("$(Group):Init:CoilErrorCheck2.LNK1","$(Group):Init:ChkInitStatus.PROC")
#! Field("$(Group):Init:CoilErrorCheck2.LNK2",16777215,1,"$(Group):Init:CoilErrorCheck2.LNK2")
#! Link("$(Group):Init:CoilErrorCheck2.LNK2","$(Group):Condition:Initialize:SetFalse.PROC")
#! Record("$(Group):Initializing:Scan:Disable:Reset",3380,2828,0,1,"$(Group):Initializing:Scan:Disable:Reset")
#! Field("$(Group):Initializing:Scan:Disable:Reset.FLNK",16777215,1,"$(Group):Initializing:Scan:Disable:Reset.FLNK")
#! Link("$(Group):Initializing:Scan:Disable:Reset.FLNK","$(Group):Curr:ResetHB:PulseHi")
#! Field("$(Group):Initializing:Scan:Disable:Reset.PROC",16777215,0,"$(Group):Initializing:Scan:Disable:Reset.PROC")
#! Field("$(Group):Initializing:Scan:Disable:Reset.OUT",16777215,1,"$(Group):Initializing:Scan:Disable:Reset.OUT")
#! Link("$(Group):Initializing:Scan:Disable:Reset.OUT","$(Group):Initializing:Scan:Disable.VAL")
#! Record("$(Group):Curr:ResetHB:PulseHi",3660,2828,0,0,"$(Group):Curr:ResetHB:PulseHi")
#! Field("$(Group):Curr:ResetHB:PulseHi.FLNK",16777215,1,"$(Group):Curr:ResetHB:PulseHi.FLNK")
#! Link("$(Group):Curr:ResetHB:PulseHi.FLNK","$(Group):Curr:ResetHB:PulseLo")
#! Field("$(Group):Curr:ResetHB:PulseHi.OUT",16777215,1,"$(Group):Curr:ResetHB:PulseHi.OUT")
#! Record("$(Group):Curr:ResetHB:PulseLo",3940,2862,0,0,"$(Group):Curr:ResetHB:PulseLo")
#! Field("$(Group):Curr:ResetHB:PulseLo.OUT",16777215,1,"$(Group):Curr:ResetHB:PulseLo.OUT")
#! Field("$(Group):Curr:ResetHB:PulseLo.FLNK",16777215,1,"$(Group):Curr:ResetHB:PulseLo.FLNK")
#! Link("$(Group):Curr:ResetHB:PulseLo.FLNK","$(Group):Init:HBCheck")
#! Record("$(Group):Init:HBCheck",4200,2922,0,0,"$(Group):Init:HBCheck")
#! Field("$(Group):Init:HBCheck.FLNK",16777215,1,"$(Group):Init:HBCheck.FLNK")
#! Link("$(Group):Init:HBCheck.FLNK","$(Group):Init:HBCheck:Seq")
#! Field("$(Group):Init:HBCheck.VAL",16777215,0,"$(Group):Init:HBCheck.VAL")
#! Field("$(Group):Init:HBCheck.INPA",16777215,1,"$(Group):Init:HBCheck.INPA")
#! Record("$(Group):Init:HBCheck:Seq",4460,2921,0,0,"$(Group):Init:HBCheck:Seq")
#! Field("$(Group):Init:HBCheck:Seq.SELL",16777215,0,"$(Group):Init:HBCheck:Seq.SELL")
#! Link("$(Group):Init:HBCheck:Seq.SELL","$(Group):Init:HBCheck.VAL")
#! Field("$(Group):Init:HBCheck:Seq.LNK2",16777215,1,"$(Group):Init:HBCheck:Seq.LNK2")
#! Link("$(Group):Init:HBCheck:Seq.LNK2","$(Group):Curr:InitComplete.PROC")
#! Field("$(Group):Init:HBCheck:Seq.LNK1",16777215,1,"$(Group):Init:HBCheck:Seq.LNK1")
#! Link("$(Group):Init:HBCheck:Seq.LNK1","$(Group):Curr:InitFailed6.PROC")
#! Record("$(Group):Curr:InitComplete",4760,2982,0,1,"$(Group):Curr:InitComplete")
#! Field("$(Group):Curr:InitComplete.FLNK",16777215,1,"$(Group):Curr:InitComplete.FLNK")
#! Link("$(Group):Curr:InitComplete.FLNK","$(Group):Condition:Initialize:SetFalse")
#! Field("$(Group):Curr:InitComplete.OUT",16777215,1,"$(Group):Curr:InitComplete.OUT")
#! Field("$(Group):Curr:InitComplete.PROC",16777215,0,"$(Group):Curr:InitComplete.PROC")
#! Record("$(Group):Curr:InitFailed6",4740,3202,0,1,"$(Group):Curr:InitFailed6")
#! Field("$(Group):Curr:InitFailed6.FLNK",16777215,1,"$(Group):Curr:InitFailed6.FLNK")
#! Link("$(Group):Curr:InitFailed6.FLNK","$(Group):Condition:Initialize:SetFalse")
#! Field("$(Group):Curr:InitFailed6.OUT",16777215,1,"$(Group):Curr:InitFailed6.OUT")
#! Field("$(Group):Curr:InitFailed6.PROC",16777215,0,"$(Group):Curr:InitFailed6.PROC")
#! Record("$(Group):Condition:Initialize:SetFalse",4800,3496,0,1,"$(Group):Condition:Initialize:SetFalse")
#! Field("$(Group):Condition:Initialize:SetFalse.PROC",16777215,0,"$(Group):Condition:Initialize:SetFalse.PROC")
#! Field("$(Group):Condition:Initialize:SetFalse.OUT",16777215,0,"$(Group):Condition:Initialize:SetFalse.OUT")
#! Link("$(Group):Condition:Initialize:SetFalse.OUT","$(Group):Condition:Initializing:Status.VAL")
#! Record("$(Group):Initializing:Scan:Disable",3400,3490,0,1,"$(Group):Initializing:Scan:Disable")
#! Field("$(Group):Initializing:Scan:Disable.VAL",16777215,1,"$(Group):Initializing:Scan:Disable.VAL")
#! Record("$(Group):Curr:InitFailed4",1780,4082,0,1,"$(Group):Curr:InitFailed4")
#! Field("$(Group):Curr:InitFailed4.FLNK",16777215,1,"$(Group):Curr:InitFailed4.FLNK")
#! Link("$(Group):Curr:InitFailed4.FLNK","$(Group):Condition:Initialize:SetFalse")
#! Field("$(Group):Curr:InitFailed4.OUT",16777215,1,"$(Group):Curr:InitFailed4.OUT")
#! Field("$(Group):Curr:InitFailed4.PROC",16777215,0,"$(Group):Curr:InitFailed4.PROC")
#! Record("$(Group):Curr:InitFailed3",1800,4362,0,0,"$(Group):Curr:InitFailed3")
#! Field("$(Group):Curr:InitFailed3.FLNK",16777215,1,"$(Group):Curr:InitFailed3.FLNK")
#! Link("$(Group):Curr:InitFailed3.FLNK","$(Group):Condition:Initialize:SetFalse")
#! Field("$(Group):Curr:InitFailed3.OUT",16777215,1,"$(Group):Curr:InitFailed3.OUT")
#! Record("$(Group):Condition:Initializing:Status",220,3496,0,1,"$(Group):Condition:Initializing:Status")
#! Field("$(Group):Condition:Initializing:Status.OUT",16777215,1,"$(Group):Condition:Initializing:Status.OUT")
#! Link("$(Group):Condition:Initializing:Status.OUT","$(Group):Initializing:Scan:Disable.VAL")
#! Field("$(Group):Condition:Initializing:Status.VAL",16777215,1,"$(Group):Condition:Initializing:Status.VAL")
#! Record("$(Group):Curr:Init:String",20,2802,0,1,"$(Group):Curr:Init:String")
#! Field("$(Group):Curr:Init:String.OUT",16777215,1,"$(Group):Curr:Init:String.OUT")
#! Field("$(Group):Curr:Init:String.FLNK",16777215,1,"$(Group):Curr:Init:String.FLNK")
#! Link("$(Group):Curr:Init:String.FLNK","$(Group):Condition:Initialize:SetTrue")
#! Record("$(Group):Curr:ResetHB:PulseHi2",1180,4322,0,0,"$(Group):Curr:ResetHB:PulseHi2")
#! Field("$(Group):Curr:ResetHB:PulseHi2.FLNK",16777215,1,"$(Group):Curr:ResetHB:PulseHi2.FLNK")
#! Link("$(Group):Curr:ResetHB:PulseHi2.FLNK","$(Group):Curr:ResetHB:PulseLo2")
#! Field("$(Group):Curr:ResetHB:PulseHi2.OUT",16777215,1,"$(Group):Curr:ResetHB:PulseHi2.OUT")
#! Field("$(Group):Curr:ResetHB:PulseHi2.PROC",16777215,0,"$(Group):Curr:ResetHB:PulseHi2.PROC")
#! Record("$(Group):Curr:ResetHB:PulseLo2",1500,4342,0,0,"$(Group):Curr:ResetHB:PulseLo2")
#! Field("$(Group):Curr:ResetHB:PulseLo2.OUT",16777215,1,"$(Group):Curr:ResetHB:PulseLo2.OUT")
#! Field("$(Group):Curr:ResetHB:PulseLo2.FLNK",16777215,1,"$(Group):Curr:ResetHB:PulseLo2.FLNK")
#! Link("$(Group):Curr:ResetHB:PulseLo2.FLNK","$(Group):Curr:InitFailed3")
