#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Begins process two links.  FLNK starts checks required
# to eventually turn the device On.  LNK2 will check to
# see if Device is "Shutting Down" when On is requested.
# If it is, the "Off" sequence will be aborted and
# the Ouptput current PSET will be set to what it was before
# the "Shutdown" state was entered
record(fanout, "$(Group):OnRequest:Abort:Shutdown") {
  field(FLNK, "$(Group):OnRequest:SO")
  field(LNK2, "$(Group):OnReq:ShutDownAbort:Seq")
}

# Processes when On is requested.  If Status is "Shutting Down"
# the shutdown sequence will be aborted
record(seq, "$(Group):OnReq:ShutDownAbort:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):Condition:ShuttingDown:Status")
  field(LNK1, "$(Group):OnReq:ShutDownAbort:Fan.PROC")
}

# Will process Shut down Aborted log message and
# continue with Shutdown Abort
record(fanout, "$(Group):OnReq:ShutDownAbort:Fan") {
  field(FLNK, "$(Group):OfforOffAbortedSeq")
  field(LNK1, "$(Group):OnReqi:ShutDownAbort:Log")
}

# Shutdown aborted to system log
record(stringout, "$(Group):OnReqi:ShutDownAbort:Log") {
  field(VAL, "$(Group) Shutdown Aborted by On Request")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Value in this record holds the value of
# the state of the system.  It is 1 if
# On has been requested and On has not
# failed, and 0 if Off has been
# requested and off has not failed
# 
# This State is just for internal book keeping
# for the IOC and not apparant to operators
record(bo, "$(Group):Request:Status") {
}

# Writes "Device On Requested" to system log
record(stringout, "$(Group):OnRequest:SO") {
  field(FLNK, "$(Group):AlreadyOnCk")
  field(VAL, "$(Group) On requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if SM23A is On or in Local
record(calc, "$(Group):AlreadyOnCk") {
  field(FLNK, "$(Group):AlreadyOnCk:Seq")
  field(CALC, "A+(!A&!B)*2+B*4")
  field(INPA, "$(Group):On:Status")
  field(INPB, "$(Group):Local:Status")
}

# Continues with one of three processes:
# LNK 1 if SM23A is already on
# LNK 2 if not on and not in local
# LNK 3 if in local
record(seq, "$(Group):AlreadyOnCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(Group):AlreadyOnCk.VAL")
  field(DLY1, ".5")
  field(LNK1, "$(Group):AlreadyOnCk:SO.PROC")
  field(DLY2, ".5")
  field(LNK2, "$(Group):Reset:Then:IntlkChk.PROC")
  field(DLY3, ".5")
  field(LNK3, "$(Group):Local:String.PROC")
}

# Sets the Status of the system to Device Not On and Not requested to be On
# 
# This is internal book keeping for the IOC
record(bo, "$(Group):On:Failed") {
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

# Write "Device in local control" to system log
# and link to process chain that aborts Device On sequence
record(stringout, "$(Group):Local:String") {
  field(VAL, "$(Group) in local,can't turn on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(Group):On:Failed")
}

# Write Device "Already On" to system log and link to process
# chain that aborts Device On sequence
record(stringout, "$(Group):AlreadyOnCk:SO") {
  field(VAL, "$(Group) Already On")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continue with On sequence after
# device On and local checks have been made.
# 
# LNK1 Continues On Sequence by checking to see
# if all "Resetable" interlocks have been cleared
# after a delay of three seconds.
# 
# Calls the record "$(Group):On:InterlockCk.PROC" in
# the "BeamlineToSWMSystemReset.vdb" database, that
# will resset all interlocks from the SWM on.
record(seq, "$(Group):Reset:Then:IntlkChk") {
  field(SELM, "All")
  field(LNK1, "$(Group):Reset:Pulse:High.PROC")
  field(DLY2, "3")
  field(LNK2, "$(Group):On:InterlockCk.PROC")
}

# Check to see if all "Resetable" interlocks have been cleared
# three seconds after the reset chain processing has begun
# 
# Device:Interlock:Status is a record in Condition.vdb that
# reads in the temperature interlocks,
# XY2A:TempSwitchesNotOK:Status, and XY3A''.
record(calc, "$(Group):On:InterlockCk") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):On:Seq")
  field(CALC, "(!A)+1")
  field(INPA, "$(Group):Device:Interlock:Status")
}

# Last branching before device is turned on
# LNK 1 sends error to log messages and
# aborts On sequence if device interlocks persist
# 
# LNK 2 will send on command to Modicon to
# turn on device
record(seq, "$(Group):On:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):On:InterlockCk.VAL")
  field(DOL1, "1")
  field(LNK1, "$(Group):OnError:String.PROC")
  field(DOL2, "1")
  field(LNK2, "$(Group):On:Pulse:High.PROC")
}

# Set Modicon device On bit to 1 to turn on device
record(calcout, "$(Group):On:Pulse:High") {
  field(FLNK, "$(Group):On:Pulse:Low")
  field(OUT, "$(Group):On:Write.VAL")
  field(CALC, "1")
}

# Write "Device Interlock, Cannot turn device On" to system
# log and link to process chain that aborts device On sequence
record(stringout, "$(Group):OnError:String") {
  field(VAL, "Intlk, Can't turn $(Group) on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(Group):On:FailedFO")
}

# One second after device On bit has been set
# to 1 in the Modicon PLC, set the bit back to zero.
# Logic in the Modicon PLC is such that if the bit
# is not set back to zero, once the supply turns off
# it cannot be turned back on.
record(calcout, "$(Group):On:Pulse:Low") {
  field(VAL, "0")
  field(OUT, "$(Group):On:Write.VAL")
  field(ODLY, "1")
  field(FLNK, "$(Group):On:Timeout")
}

# Process the device On Timeout check after a delay of
# DL1 which is three seconds
record(seq, "$(Group):On:Timeout") {
  field(SELM, "All")
  field(LNK2, "$(Group):On:Timeout:Calc.PROC")
  field(DLY2, "3")
}

# SM23A On timeout check.  If after three seconds of
# being commanded on, the device has not come on a timeout
# message will be logged and the On sequence will be
# aborted.
record(calcout, "$(Group):On:Timeout:Calc") {
  field(CALC, "A")
  field(INPA, "$(Group):On:Status")
  field(OUT, "$(Group):On:Timeout:SO.PROC")
  field(OOPT, "When Zero")
}

# Write "SM23A Turn On Timeout" to system log
# and link to process chain that aborts Device On sequence
record(stringout, "$(Group):On:Timeout:SO") {
  field(FLNK, "$(Group):On:Failed")
  field(VAL, "$(Group) Turn On Timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continously checks to see if Device has turned on or off
record(calcout, "$(Group):OnOff:Calc:SO") {
  field(SCAN, ".1 second")
  field(CALC, "A+1")
  field(INPA, "$(Group):On:Status")
  field(OUT, "$(Group):OnOff:SO:Seq.PROC")
  field(OOPT, "On Change")
}

# Drives processing chains depending if device
# has turned On or Off
# 
# LNK1
# device has turned on.  Write system message and
# begin initialization of SM23A
# 
# LNK2
# Device has turned Off.  Write system message and
# restore PSET to what it was before Off was
# requested.
record(seq, "$(Group):OnOff:SO:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):OnOff:Calc:SO.VAL")
  field(LNK1, "$(Group):Off:String.PROC")
  field(LNK2, "$(Group):On:String:And:Init.PROC")
}

# Write SM23A turned On to message log and
# start processing SM23A Initialize sequence
# in Initialize.vdb
record(stringout, "$(Group):On:String:And:Init") {
  field(VAL, "$(Group) turned on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(Group):Curr:Init:String.PROC PP")
}

# Write Device turned Off system message and
# restore PSET to what it was before Off was
# requested.
record(stringout, "$(Group):Off:String") {
  field(VAL, "$(Group) turned off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(Group):CheckOffRequested:BeforeRestore")
}

# Sets Shutdown Status to False
# 
# Sets internal state to Not Off or Not requested Off
record(fanout, "$(Group):Off:Timeout:FO") {
  field(FLNK, "$(Group):Condition:SDSetFalse")
  field(LNK1, "$(Group):Off:Failed")
}

# Writes device Shutdown Timeout to system log
record(stringout, "$(Group):SD:Timeout:String") {
  field(FLNK, "$(Group):Off:Timeout:FO")
  field(VAL, "$(Group) Off request timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# When Shutdown timeout has been reached, this record
# will begin to process chain logging the
# timeout condition and setting Shutdown Status to false
record(seq, "$(Group):SD:Timeout:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):SD:Timeout:Calc.VAL")
  field(DOL1, "1")
  field(LNK1, "$(Group):SD:Timeout:String.PROC")
}

# Device shutdown timer.  Device has 360 seconds to shutdown
# before timeout condition is reached
record(calc, "$(Group):SD:Timeout:Calc") {
  field(SCAN, "1 second")
  field(FLNK, "$(Group):SD:Timeout:Seq")
  field(CALC, "A>360")
  field(INPA, "$(Group):SDTimeout:timer.VAL")
}

# Starts Timeout timer once device Shutdown Status is true
record(calc, "$(Group):SDTimeout:timer") {
  field(SCAN, "1 second")
  field(CALC, "(A+1)*B")
  field(INPA, "$(Group):SDTimeout:timer.VAL")
  field(INPB, "$(Group):Condition:ShuttingDown:Status")
}

# Sets internal state to not Off or not Requested Off
record(bo, "$(Group):Off:Failed") {
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

# Writes "Device in Local Control" to system log
# and begins chain to abort Off sequence
record(stringout, "$(Group):Local:String2") {
  field(VAL, "$(Group) local, can't turn off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(Group):Off:Failed")
}

# Writes "Already Off" to system log
record(stringout, "$(Group):AlreadyOffCk:SO") {
  field(VAL, "$(Group) Already Off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continues with one of three processes:
# LNK 1 if Device is already off
# LNK 2 if not off and not in local
# LNK 3 if in local
record(seq, "$(Group):AlreadyOffCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(Group):AlreadyOffCk.VAL")
  field(DLY1, ".5")
  field(DOL1, "1")
  field(LNK1, "$(Group):AlreadyOffCk:SO.PROC")
  field(DLY2, ".5")
  field(LNK2, "$(Group):Condition:ShuttingDown:SetTrue.PROC")
  field(DOL2, "1")
  field(DLY3, ".5")
  field(DOL3, "1")
  field(LNK3, "$(Group):Local:String2.PROC")
}

# Checks to see if the Device is Off or in Local
record(calc, "$(Group):AlreadyOffCk") {
  field(FLNK, "$(Group):AlreadyOffCk:Seq")
  field(CALC, "!A+(A&!B)*2+B*4")
  field(INPA, "$(Group):On:Status")
  field(INPB, "$(Group):Local:Status")
}

# One second after issuing command to Modicon to Set
# Device Off bit to zero, set Off bit back to one so
# that the Device may be turned on in the future
record(calcout, "$(Group):Off:Pulse:High") {
  field(VAL, "1")
  field(OUT, "$(Group):Off:Write PP")
  field(ODLY, "1")
}

# Issue command to Modicon to Set Device Off bit to zero,
# turning off Device
record(calcout, "$(Group):Off:Pulse:Low") {
  field(FLNK, "$(Group):Off:Pulse:High")
  field(VAL, "0")
  field(OUT, "$(Group):Off:Write PP")
}

# If device is Shutting down and shutdown has not failed
# and the Device Current PSET is less than x, proceed
# with issuing a command to the Modicon to turn Off
# Device
record(seq, "$(Group):Condition:SD:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):Zero:Check.VAL")
  field(DOL1, "1")
  field(LNK1, "$(Group):Off:Pulse:Low.PROC")
}

# If device is Shutting down and shutdown has not failed
# and the Device Current PSET is less than x, proceed
# with issuing a command to the Modicon to turn Off
# Device
record(calc, "$(Group):Zero:Check") {
  field(FLNK, "$(Group):Condition:SD:Seq")
  field(CALC, "A&ABS(B)<.5&ABS(D)<.5")
  field(INPA, "$(Group):Zero:Check2")
  field(INPB, "$(Group):Y2:$(Param):Read")
  field(INPC, "$(Group):Y3:$(Param):Read")
}

# Writes "Off Requested" to system log
record(stringout, "$(Group):OffRequest:SO") {
  field(FLNK, "$(Group):AlreadyOffCk")
  field(VAL, "$(Group) Off requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Begins processing chain to determine which
# device interlock prevented Device from turning
# on in order to write info to system log.
# 
# Done in two sets because there are so many
# possible device interlocks for EMC
# 
# LNK 1 sets the internal status to Off or
# not On Requested
# 
# LNK2 and LNK3 check which device interlock
# is active
record(fanout, "$(Group):On:FailedFO") {
  field(LNK1, "$(Group):On:Failed")
  field(LNK3, "$(Group):Device:Interlock:Log")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
# when the IOC starts up. PINI set to
# yes means this get processes on initialization
# of the database (before anything else gets scanned).
record(bo, "$(Group):Init:OnSignal2") {
  field(FLNK, "$(Group):Init:OffSignal2")
  field(VAL, "0")
  field(OUT, "$(Group):On:Write PP")
  field(OMSL, "supervisory")
  field(PINI, "YES")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
# when the IOC starts up.
record(bo, "$(Group):Init:OffSignal2") {
  field(VAL, "1")
  field(OUT, "$(Group):Off:Write PP")
  field(OMSL, "supervisory")
}

# Determines which device interlock is preventing
# Device from turning on. If an interlock stops from
# turning the device on, this record is activated
# to verify that this is the issue, and if so,
# write it to the console.
record(calc, "$(Group):Device:Interlock:Log") {
  field(FLNK, "$(Group):Device:Interlock:LogSeq")
  field(CALC, "!A+2*B+4*C")
  field(INPA, "$(Group):GroundFaultOk:Status")
  field(INPB, "XY2A:TempSwitchesNotOK:Status")
  field(INPC, "XY3A:TempSwitchesNotOK:Status")
}

# Process appropriate log message records
# according to which device interlocks
# are active.
# 
# .2 sec between links to avoid message storms to
# the system log.
record(seq, "$(Group):Device:Interlock:LogSeq") {
  field(SELM, "Mask")
  field(DLY1, ".2")
  field(LNK1, "$(Group):GroundFaultIntlk:String.PROC")
  field(DLY2, ".2")
  field(LNK2, "$(Group):X2Y2Cooling:String.PROC")
  field(DLY3, ".2")
  field(DLY4, ".2")
  field(SELN, "")
  field(SELL, "$(Group):Device:Interlock:Log.VAL")
  field(LNK3, "$(Group):X3Y3Cooling:String.PROC")
}

# Sends ground fault interlock message to system log
record(stringout, "$(Group):GroundFaultIntlk:String") {
  field(VAL, "$(Group) Inlk, Gnd Fault")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
# 
# Needs to go from 0 to 1 later to
# turn on device.
record(bo, "$(Group):Init:OnSignal") {
  field(FLNK, "$(Group):Init:OffSignal")
  field(VAL, "0")
  field(OUT, "$(Group):On:Write PP")
  field(OMSL, "supervisory")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
# 
# Needs to go from 1 to 0 later to turn on device.
record(bo, "$(Group):Init:OffSignal") {
  field(VAL, "1")
  field(OUT, "$(Group):Off:Write PP")
  field(OMSL, "supervisory")
  field(FLNK, "$(Group):OnRequest:Abort:Shutdown")
}

# Sets shutdown status to false to prevent the PS
# from actually shutting down.
record(bo, "$(Group):Condition:SDSetFalse") {
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Condition:ShuttingDown:Status PP")
}

# Sets Shutting down status to true
record(bo, "$(Group):Condition:ShuttingDown:SetTrue") {
  field(VAL, "1")
  field(OUT, "$(Group):Condition:ShuttingDown:Status.VAL PP")
  field(FLNK, "$(Group):ZeroCheckSeq")
  field(OMSL, "supervisory")
}

# These are links to records in MultiOff.vdb. These records
# set the coil to 0, but save a non zero PSET if it is set
# to something other then zero. Then reason is so if you
# turn it back on, it will go back to it's original value.
record(seq, "$(Group):ZeroCheckSeq") {
  field(SELM, "All")
  field(LNK1, "$(Group):X2:Off:PSET0Check.PROC")
  field(DLY2, ".2")
  field(LNK2, "$(Group):X3:Off:PSET0Check.PROC")
  field(DLY3, ".2")
  field(LNK3, "$(Group):Y2:Off:PSET0Check.PROC")
  field(DLY4, ".2")
  field(LNK4, "$(Group):Y3:Off:PSET0Check.PROC")
}

# Holds value of "Shutting Down" Status. A calcout is constantly reading this and
# waiting for it to go to 1. When it does, and the current is < 0.5A, the device
# will begin shutting down.
record(bo, "$(Group):Condition:ShuttingDown:Status") {
  field(VAL, "0")
  field(OMSL, "supervisory")
}

# Restores PSET to the value it was
# before the device was commanded off
# Links to records in MultiOffSeq.vdb
record(seq, "$(Group):OfforOffAbortedSeq") {
  field(FLNK, "$(Group):Condition:SDSetFalse")
  field(SELM, "All")
  field(LNK1, "$(Group):X2:Set:SD:Restore.PROC")
  field(DLY2, ".2")
  field(LNK2, "$(Group):X3:Set:SD:Restore.PROC")
  field(DLY3, ".2")
  field(LNK3, "$(Group):Y2:Set:SD:Restore.PROC")
  field(DLY4, "0.2")
  field(LNK4, "$(Group):Y3:Set:SD:Restore.PROC")
}

# This will not process next record
# if device shutdown was unexpected
# (resulting from interlock or local off)
# 
# This solves problem where PSET was getting
# set to zero after unexpected shutdown
record(calcout, "$(Group):CheckOffRequested:BeforeRestore") {
  field(CALC, "A")
  field(INPA, "$(Group):Request:Status")
  field(OUT, "$(Group):OfforOffAbortedSeq.PROC")
  field(OOPT, "When Zero")
}

# Sends Cooling Interlock message to system log
record(stringout, "$(Group):X2Y2Cooling:String") {
  field(VAL, "XY2A Intlk, Cooling")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends cooling interlock message
record(stringout, "$(Group):X3Y3Cooling:String") {
  field(VAL, "XY3A Intlk, Cooling")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Start of the On chain.  This is processed first
# when trying to turn on the device. This is
# initialized by calling the .PROC field of it
# from the operations terminal in EDM.
record(bo, "$(Group):Curr:OnRequest") {
  field(FLNK, "$(Group):Init:OnSignal")
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

# Start of the SM23A Off chain.  This is
# processed first when trying to turn
# off SM23A. It is called from
# the EDM operations interface.
record(bo, "$(Group):Curr:OffRequest") {
  field(FLNK, "$(Group):OffRequest:SO")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

record(calc, "$(Group):Zero:Check2") {
  field(SCAN, ".5 second")
  field(FLNK, "$(Group):Zero:Check")
  field(CALC, "A&!B&ABS(C)<.5&ABS(D)<.5")
  field(INPA, "$(Group):Condition:ShuttingDown:Status")
  field(INPB, "$(Group):Request:Status.VAL")
  field(INPC, "$(Group):X2:$(Param):Read")
  field(INPD, "$(Group):X3:$(Param):Read")
}

#! Further lines contain data used by VisualDCT
#! View(1986,5470,1.6)
#! Record("$(Group):OnRequest:Abort:Shutdown",1560,1955,0,0,"$(Group):OnRequest:Abort:Shutdown")
#! Field("$(Group):OnRequest:Abort:Shutdown.FLNK",16777215,1,"$(Group):OnRequest:Abort:Shutdown.FLNK")
#! Link("$(Group):OnRequest:Abort:Shutdown.FLNK","$(Group):OnRequest:SO")
#! Field("$(Group):OnRequest:Abort:Shutdown.LNK2",16777215,1,"$(Group):OnRequest:Abort:Shutdown.LNK2")
#! Link("$(Group):OnRequest:Abort:Shutdown.LNK2","$(Group):OnReq:ShutDownAbort:Seq")
#! Record("$(Group):OnReq:ShutDownAbort:Seq",1720,2382,0,1,"$(Group):OnReq:ShutDownAbort:Seq")
#! Field("$(Group):OnReq:ShutDownAbort:Seq.SELL",16777215,1,"$(Group):OnReq:ShutDownAbort:Seq.SELL")
#! Link("$(Group):OnReq:ShutDownAbort:Seq.SELL","$(Group):Condition:ShuttingDown:Status.VAL")
#! Field("$(Group):OnReq:ShutDownAbort:Seq.LNK1",16777215,1,"$(Group):OnReq:ShutDownAbort:Seq.LNK1")
#! Link("$(Group):OnReq:ShutDownAbort:Seq.LNK1","$(Group):OnReq:ShutDownAbort:Fan.PROC")
#! Record("$(Group):OnReq:ShutDownAbort:Fan",2040,2515,0,1,"$(Group):OnReq:ShutDownAbort:Fan")
#! Field("$(Group):OnReq:ShutDownAbort:Fan.PROC",16777215,0,"$(Group):OnReq:ShutDownAbort:Fan.PROC")
#! Field("$(Group):OnReq:ShutDownAbort:Fan.LNK1",16777215,1,"$(Group):OnReq:ShutDownAbort:Fan.LNK1")
#! Link("$(Group):OnReq:ShutDownAbort:Fan.LNK1","$(Group):OnReqi:ShutDownAbort:Log")
#! Field("$(Group):OnReq:ShutDownAbort:Fan.FLNK",16777215,1,"$(Group):OnReq:ShutDownAbort:Fan.FLNK")
#! Link("$(Group):OnReq:ShutDownAbort:Fan.FLNK","$(Group):OfforOffAbortedSeq")
#! Record("$(Group):OnReqi:ShutDownAbort:Log",2340,2515,0,0,"$(Group):OnReqi:ShutDownAbort:Log")
#! Field("$(Group):OnReqi:ShutDownAbort:Log.OUT",16777215,1,"$(Group):OnReqi:ShutDownAbort:Log.OUT")
#! Record("$(Group):Request:Status",980,2924,0,1,"$(Group):Request:Status")
#! Field("$(Group):Request:Status.VAL",16777215,1,"$(Group):Request:Status.VAL")
#! Record("$(Group):OnRequest:SO",1960,1922,0,0,"$(Group):OnRequest:SO")
#! Field("$(Group):OnRequest:SO.OUT",16777215,1,"$(Group):OnRequest:SO.OUT")
#! Field("$(Group):OnRequest:SO.FLNK",16777215,1,"$(Group):OnRequest:SO.FLNK")
#! Link("$(Group):OnRequest:SO.FLNK","$(Group):AlreadyOnCk")
#! Record("$(Group):AlreadyOnCk",2280,1907,0,0,"$(Group):AlreadyOnCk")
#! Field("$(Group):AlreadyOnCk.FLNK",16777215,1,"$(Group):AlreadyOnCk.FLNK")
#! Link("$(Group):AlreadyOnCk.FLNK","$(Group):AlreadyOnCk:Seq")
#! Field("$(Group):AlreadyOnCk.VAL",16777215,1,"$(Group):AlreadyOnCk.VAL")
#! Field("$(Group):AlreadyOnCk.INPA",16777215,1,"$(Group):AlreadyOnCk.INPA")
#! Field("$(Group):AlreadyOnCk.INPB",16777215,1,"$(Group):AlreadyOnCk.INPB")
#! Record("$(Group):AlreadyOnCk:Seq",2580,1871,0,0,"$(Group):AlreadyOnCk:Seq")
#! Field("$(Group):AlreadyOnCk:Seq.SELL",16777215,0,"$(Group):AlreadyOnCk:Seq.SELL")
#! Link("$(Group):AlreadyOnCk:Seq.SELL","$(Group):AlreadyOnCk.VAL")
#! Field("$(Group):AlreadyOnCk:Seq.LNK1",16777215,1,"$(Group):AlreadyOnCk:Seq.LNK1")
#! Link("$(Group):AlreadyOnCk:Seq.LNK1","$(Group):AlreadyOnCk:SO.PROC")
#! Field("$(Group):AlreadyOnCk:Seq.LNK3",16777215,1,"$(Group):AlreadyOnCk:Seq.LNK3")
#! Link("$(Group):AlreadyOnCk:Seq.LNK3","$(Group):Local:String.PROC")
#! Field("$(Group):AlreadyOnCk:Seq.LNK2",16777215,1,"$(Group):AlreadyOnCk:Seq.LNK2")
#! Link("$(Group):AlreadyOnCk:Seq.LNK2","$(Group):Reset:Then:IntlkChk.PROC")
#! Record("$(Group):On:Failed",2700,1542,0,1,"$(Group):On:Failed")
#! Field("$(Group):On:Failed.OUT",16777215,0,"$(Group):On:Failed.OUT")
#! Link("$(Group):On:Failed.OUT","$(Group):Request:Status.VAL")
#! Record("$(Group):Local:String",2980,1662,0,1,"$(Group):Local:String")
#! Field("$(Group):Local:String.OUT",16777215,1,"$(Group):Local:String.OUT")
#! Field("$(Group):Local:String.PROC",16777215,0,"$(Group):Local:String.PROC")
#! Field("$(Group):Local:String.FLNK",16777215,0,"$(Group):Local:String.FLNK")
#! Link("$(Group):Local:String.FLNK","$(Group):On:Failed")
#! Record("$(Group):AlreadyOnCk:SO",3020,1895,0,1,"$(Group):AlreadyOnCk:SO")
#! Field("$(Group):AlreadyOnCk:SO.OUT",16777215,1,"$(Group):AlreadyOnCk:SO.OUT")
#! Field("$(Group):AlreadyOnCk:SO.PROC",16777215,0,"$(Group):AlreadyOnCk:SO.PROC")
#! Record("$(Group):Reset:Then:IntlkChk",2940,2087,0,1,"$(Group):Reset:Then:IntlkChk")
#! Field("$(Group):Reset:Then:IntlkChk.LNK1",16777215,1,"$(Group):Reset:Then:IntlkChk.LNK1")
#! Field("$(Group):Reset:Then:IntlkChk.LNK2",16777215,1,"$(Group):Reset:Then:IntlkChk.LNK2")
#! Link("$(Group):Reset:Then:IntlkChk.LNK2","$(Group):On:InterlockCk.PROC")
#! Field("$(Group):Reset:Then:IntlkChk.PROC",16777215,0,"$(Group):Reset:Then:IntlkChk.PROC")
#! Record("$(Group):On:InterlockCk",3180,2087,0,1,"$(Group):On:InterlockCk")
#! Field("$(Group):On:InterlockCk.PROC",16777215,1,"$(Group):On:InterlockCk.PROC")
#! Field("$(Group):On:InterlockCk.FLNK",16777215,1,"$(Group):On:InterlockCk.FLNK")
#! Link("$(Group):On:InterlockCk.FLNK","$(Group):On:Seq")
#! Field("$(Group):On:InterlockCk.VAL",16777215,1,"$(Group):On:InterlockCk.VAL")
#! Field("$(Group):On:InterlockCk.INPA",16777215,1,"$(Group):On:InterlockCk.INPA")
#! Record("$(Group):On:Seq",3460,2079,0,0,"$(Group):On:Seq")
#! Field("$(Group):On:Seq.LNK1",16777215,1,"$(Group):On:Seq.LNK1")
#! Link("$(Group):On:Seq.LNK1","$(Group):OnError:String.PROC")
#! Field("$(Group):On:Seq.LNK2",16777215,1,"$(Group):On:Seq.LNK2")
#! Link("$(Group):On:Seq.LNK2","$(Group):On:Pulse:High.PROC")
#! Field("$(Group):On:Seq.SELL",16777215,0,"$(Group):On:Seq.SELL")
#! Link("$(Group):On:Seq.SELL","$(Group):On:InterlockCk.VAL")
#! Record("$(Group):On:Pulse:High",3740,2302,0,1,"$(Group):On:Pulse:High")
#! Field("$(Group):On:Pulse:High.OUT",16777215,1,"$(Group):On:Pulse:High.OUT")
#! Field("$(Group):On:Pulse:High.PROC",16777215,0,"$(Group):On:Pulse:High.PROC")
#! Field("$(Group):On:Pulse:High.FLNK",16777215,1,"$(Group):On:Pulse:High.FLNK")
#! Link("$(Group):On:Pulse:High.FLNK","$(Group):On:Pulse:Low")
#! Record("$(Group):OnError:String",3920,2062,0,1,"$(Group):OnError:String")
#! Field("$(Group):OnError:String.PROC",16777215,0,"$(Group):OnError:String.PROC")
#! Field("$(Group):OnError:String.OUT",16777215,1,"$(Group):OnError:String.OUT")
#! Field("$(Group):OnError:String.FLNK",16777215,1,"$(Group):OnError:String.FLNK")
#! Link("$(Group):OnError:String.FLNK","$(Group):On:FailedFO")
#! Record("$(Group):On:Pulse:Low",4000,2287,0,0,"$(Group):On:Pulse:Low")
#! Field("$(Group):On:Pulse:Low.OUT",16777215,1,"$(Group):On:Pulse:Low.OUT")
#! Field("$(Group):On:Pulse:Low.FLNK",16777215,1,"$(Group):On:Pulse:Low.FLNK")
#! Link("$(Group):On:Pulse:Low.FLNK","$(Group):On:Timeout")
#! Record("$(Group):On:Timeout",4260,2342,0,0,"$(Group):On:Timeout")
#! Field("$(Group):On:Timeout.LNK2",16777215,1,"$(Group):On:Timeout.LNK2")
#! Link("$(Group):On:Timeout.LNK2","$(Group):On:Timeout:Calc.PROC")
#! Record("$(Group):On:Timeout:Calc",4560,2287,0,1,"$(Group):On:Timeout:Calc")
#! Field("$(Group):On:Timeout:Calc.PROC",16777215,0,"$(Group):On:Timeout:Calc.PROC")
#! Field("$(Group):On:Timeout:Calc.INPA",16777215,1,"$(Group):On:Timeout:Calc.INPA")
#! Field("$(Group):On:Timeout:Calc.OUT",16777215,1,"$(Group):On:Timeout:Calc.OUT")
#! Link("$(Group):On:Timeout:Calc.OUT","$(Group):On:Timeout:SO.PROC")
#! Record("$(Group):On:Timeout:SO",4840,2382,0,1,"$(Group):On:Timeout:SO")
#! Field("$(Group):On:Timeout:SO.PROC",16777215,0,"$(Group):On:Timeout:SO.PROC")
#! Field("$(Group):On:Timeout:SO.OUT",16777215,1,"$(Group):On:Timeout:SO.OUT")
#! Field("$(Group):On:Timeout:SO.FLNK",16777215,0,"$(Group):On:Timeout:SO.FLNK")
#! Link("$(Group):On:Timeout:SO.FLNK","$(Group):On:Failed")
#! Record("$(Group):OnOff:Calc:SO",3300,3074,0,1,"$(Group):OnOff:Calc:SO")
#! Field("$(Group):OnOff:Calc:SO.VAL",16777215,1,"$(Group):OnOff:Calc:SO.VAL")
#! Field("$(Group):OnOff:Calc:SO.INPA",16777215,1,"$(Group):OnOff:Calc:SO.INPA")
#! Field("$(Group):OnOff:Calc:SO.OUT",16777215,1,"$(Group):OnOff:Calc:SO.OUT")
#! Link("$(Group):OnOff:Calc:SO.OUT","$(Group):OnOff:SO:Seq.PROC")
#! Record("$(Group):OnOff:SO:Seq",3600,3067,0,1,"$(Group):OnOff:SO:Seq")
#! Field("$(Group):OnOff:SO:Seq.LNK2",16777215,1,"$(Group):OnOff:SO:Seq.LNK2")
#! Link("$(Group):OnOff:SO:Seq.LNK2","$(Group):On:String:And:Init.PROC")
#! Field("$(Group):OnOff:SO:Seq.LNK1",16777215,1,"$(Group):OnOff:SO:Seq.LNK1")
#! Link("$(Group):OnOff:SO:Seq.LNK1","$(Group):Off:String.PROC")
#! Field("$(Group):OnOff:SO:Seq.SELL",16777215,0,"$(Group):OnOff:SO:Seq.SELL")
#! Link("$(Group):OnOff:SO:Seq.SELL","$(Group):OnOff:Calc:SO.VAL")
#! Field("$(Group):OnOff:SO:Seq.PROC",16777215,0,"$(Group):OnOff:SO:Seq.PROC")
#! Record("$(Group):On:String:And:Init",3960,3002,0,1,"$(Group):On:String:And:Init")
#! Field("$(Group):On:String:And:Init.OUT",16777215,1,"$(Group):On:String:And:Init.OUT")
#! Field("$(Group):On:String:And:Init.PROC",16777215,0,"$(Group):On:String:And:Init.PROC")
#! Field("$(Group):On:String:And:Init.FLNK",16777215,1,"$(Group):On:String:And:Init.FLNK")
#! Record("$(Group):Off:String",3960,3182,0,1,"$(Group):Off:String")
#! Field("$(Group):Off:String.OUT",16777215,1,"$(Group):Off:String.OUT")
#! Field("$(Group):Off:String.PROC",16777215,0,"$(Group):Off:String.PROC")
#! Field("$(Group):Off:String.FLNK",16777215,1,"$(Group):Off:String.FLNK")
#! Link("$(Group):Off:String.FLNK","$(Group):CheckOffRequested:BeforeRestore")
#! Record("$(Group):Off:Timeout:FO",4680,4495,0,0,"$(Group):Off:Timeout:FO")
#! Field("$(Group):Off:Timeout:FO.FLNK",16777215,1,"$(Group):Off:Timeout:FO.FLNK")
#! Link("$(Group):Off:Timeout:FO.FLNK","$(Group):Condition:SDSetFalse")
#! Field("$(Group):Off:Timeout:FO.LNK1",16777215,0,"$(Group):Off:Timeout:FO.LNK1")
#! Link("$(Group):Off:Timeout:FO.LNK1","$(Group):Off:Failed")
#! Record("$(Group):SD:Timeout:String",4400,4102,0,0,"$(Group):SD:Timeout:String")
#! Field("$(Group):SD:Timeout:String.FLNK",16777215,1,"$(Group):SD:Timeout:String.FLNK")
#! Link("$(Group):SD:Timeout:String.FLNK","$(Group):Off:Timeout:FO")
#! Field("$(Group):SD:Timeout:String.OUT",16777215,1,"$(Group):SD:Timeout:String.OUT")
#! Field("$(Group):SD:Timeout:String.PROC",16777215,1,"$(Group):SD:Timeout:String.PROC")
#! Record("$(Group):SD:Timeout:Seq",4140,4107,0,0,"$(Group):SD:Timeout:Seq")
#! Field("$(Group):SD:Timeout:Seq.SELL",16777215,0,"$(Group):SD:Timeout:Seq.SELL")
#! Link("$(Group):SD:Timeout:Seq.SELL","$(Group):SD:Timeout:Calc.VAL")
#! Field("$(Group):SD:Timeout:Seq.LNK1",16777215,1,"$(Group):SD:Timeout:Seq.LNK1")
#! Link("$(Group):SD:Timeout:Seq.LNK1","$(Group):SD:Timeout:String.PROC")
#! Record("$(Group):SD:Timeout:Calc",3880,4067,0,1,"$(Group):SD:Timeout:Calc")
#! Field("$(Group):SD:Timeout:Calc.FLNK",16777215,1,"$(Group):SD:Timeout:Calc.FLNK")
#! Link("$(Group):SD:Timeout:Calc.FLNK","$(Group):SD:Timeout:Seq")
#! Field("$(Group):SD:Timeout:Calc.INPA",16777215,0,"$(Group):SD:Timeout:Calc.INPA")
#! Link("$(Group):SD:Timeout:Calc.INPA","$(Group):SDTimeout:timer.VAL")
#! Field("$(Group):SD:Timeout:Calc.VAL",16777215,0,"$(Group):SD:Timeout:Calc.VAL")
#! Record("$(Group):SDTimeout:timer",3620,4087,0,1,"$(Group):SDTimeout:timer")
#! Field("$(Group):SDTimeout:timer.VAL",16777215,0,"$(Group):SDTimeout:timer.VAL")
#! Field("$(Group):SDTimeout:timer.INPA",16777215,0,"$(Group):SDTimeout:timer.INPA")
#! Link("$(Group):SDTimeout:timer.INPA","$(Group):SDTimeout:timer.VAL")
#! Field("$(Group):SDTimeout:timer.INPB",16777215,0,"$(Group):SDTimeout:timer.INPB")
#! Link("$(Group):SDTimeout:timer.INPB","$(Group):Condition:ShuttingDown:Status.VAL")
#! Record("$(Group):Off:Failed",2280,4542,0,1,"$(Group):Off:Failed")
#! Field("$(Group):Off:Failed.OUT",16777215,0,"$(Group):Off:Failed.OUT")
#! Link("$(Group):Off:Failed.OUT","$(Group):Request:Status.VAL")
#! Record("$(Group):Local:String2",1900,4342,0,1,"$(Group):Local:String2")
#! Field("$(Group):Local:String2.OUT",16777215,1,"$(Group):Local:String2.OUT")
#! Field("$(Group):Local:String2.FLNK",16777215,1,"$(Group):Local:String2.FLNK")
#! Link("$(Group):Local:String2.FLNK","$(Group):Off:Failed")
#! Field("$(Group):Local:String2.PROC",16777215,0,"$(Group):Local:String2.PROC")
#! Record("$(Group):AlreadyOffCk:SO",1840,3815,0,1,"$(Group):AlreadyOffCk:SO")
#! Field("$(Group):AlreadyOffCk:SO.OUT",16777215,1,"$(Group):AlreadyOffCk:SO.OUT")
#! Field("$(Group):AlreadyOffCk:SO.PROC",16777215,0,"$(Group):AlreadyOffCk:SO.PROC")
#! Record("$(Group):AlreadyOffCk:Seq",1560,3889,0,0,"$(Group):AlreadyOffCk:Seq")
#! Field("$(Group):AlreadyOffCk:Seq.SELL",16777215,0,"$(Group):AlreadyOffCk:Seq.SELL")
#! Link("$(Group):AlreadyOffCk:Seq.SELL","$(Group):AlreadyOffCk.VAL")
#! Field("$(Group):AlreadyOffCk:Seq.LNK1",16777215,1,"$(Group):AlreadyOffCk:Seq.LNK1")
#! Link("$(Group):AlreadyOffCk:Seq.LNK1","$(Group):AlreadyOffCk:SO.PROC")
#! Field("$(Group):AlreadyOffCk:Seq.LNK2",16777215,1,"$(Group):AlreadyOffCk:Seq.LNK2")
#! Link("$(Group):AlreadyOffCk:Seq.LNK2","$(Group):Condition:ShuttingDown:SetTrue.PROC")
#! Field("$(Group):AlreadyOffCk:Seq.LNK3",16777215,1,"$(Group):AlreadyOffCk:Seq.LNK3")
#! Link("$(Group):AlreadyOffCk:Seq.LNK3","$(Group):Local:String2.PROC")
#! Record("$(Group):AlreadyOffCk",1300,3927,0,0,"$(Group):AlreadyOffCk")
#! Field("$(Group):AlreadyOffCk.FLNK",16777215,1,"$(Group):AlreadyOffCk.FLNK")
#! Link("$(Group):AlreadyOffCk.FLNK","$(Group):AlreadyOffCk:Seq")
#! Field("$(Group):AlreadyOffCk.INPA",16777215,1,"$(Group):AlreadyOffCk.INPA")
#! Field("$(Group):AlreadyOffCk.INPB",16777215,1,"$(Group):AlreadyOffCk.INPB")
#! Field("$(Group):AlreadyOffCk.VAL",16777215,0,"$(Group):AlreadyOffCk.VAL")
#! Record("$(Group):Off:Pulse:High",2560,3482,0,0,"$(Group):Off:Pulse:High")
#! Field("$(Group):Off:Pulse:High.OUT",16777215,1,"$(Group):Off:Pulse:High.OUT")
#! Record("$(Group):Off:Pulse:Low",2220,3482,0,1,"$(Group):Off:Pulse:Low")
#! Field("$(Group):Off:Pulse:Low.PROC",16777215,0,"$(Group):Off:Pulse:Low.PROC")
#! Field("$(Group):Off:Pulse:Low.OUT",16777215,1,"$(Group):Off:Pulse:Low.OUT")
#! Field("$(Group):Off:Pulse:Low.FLNK",16777215,1,"$(Group):Off:Pulse:Low.FLNK")
#! Link("$(Group):Off:Pulse:Low.FLNK","$(Group):Off:Pulse:High")
#! Record("$(Group):Condition:SD:Seq",1880,3567,0,0,"$(Group):Condition:SD:Seq")
#! Field("$(Group):Condition:SD:Seq.SELL",16777215,0,"$(Group):Condition:SD:Seq.SELL")
#! Link("$(Group):Condition:SD:Seq.SELL","$(Group):Zero:Check.VAL")
#! Field("$(Group):Condition:SD:Seq.LNK1",16777215,1,"$(Group):Condition:SD:Seq.LNK1")
#! Link("$(Group):Condition:SD:Seq.LNK1","$(Group):Off:Pulse:Low.PROC")
#! Record("$(Group):Zero:Check",1560,3534,0,0,"$(Group):Zero:Check")
#! Field("$(Group):Zero:Check.FLNK",16777215,1,"$(Group):Zero:Check.FLNK")
#! Link("$(Group):Zero:Check.FLNK","$(Group):Condition:SD:Seq")
#! Field("$(Group):Zero:Check.INPB",16777215,0,"$(Group):Zero:Check.INPB")
#! Field("$(Group):Zero:Check.VAL",16777215,1,"$(Group):Zero:Check.VAL")
#! Field("$(Group):Zero:Check.INPC",16777215,1,"$(Group):Zero:Check.INPC")
#! Field("$(Group):Zero:Check.INPA",16777215,0,"$(Group):Zero:Check.INPA")
#! Link("$(Group):Zero:Check.INPA","$(Group):Zero:Check2.VAL")
#! Record("$(Group):OffRequest:SO",880,3942,0,0,"$(Group):OffRequest:SO")
#! Field("$(Group):OffRequest:SO.FLNK",16777215,1,"$(Group):OffRequest:SO.FLNK")
#! Link("$(Group):OffRequest:SO.FLNK","$(Group):AlreadyOffCk")
#! Field("$(Group):OffRequest:SO.OUT",16777215,1,"$(Group):OffRequest:SO.OUT")
#! Record("$(Group):On:FailedFO",4000,1515,0,1,"$(Group):On:FailedFO")
#! Field("$(Group):On:FailedFO.LNK1",16777215,0,"$(Group):On:FailedFO.LNK1")
#! Link("$(Group):On:FailedFO.LNK1","$(Group):On:Failed")
#! Field("$(Group):On:FailedFO.LNK3",16777215,0,"$(Group):On:FailedFO.LNK3")
#! Link("$(Group):On:FailedFO.LNK3","$(Group):Device:Interlock:Log")
#! Record("$(Group):Init:OnSignal2",1180,1174,0,1,"$(Group):Init:OnSignal2")
#! Field("$(Group):Init:OnSignal2.FLNK",16777215,1,"$(Group):Init:OnSignal2.FLNK")
#! Link("$(Group):Init:OnSignal2.FLNK","$(Group):Init:OffSignal2")
#! Field("$(Group):Init:OnSignal2.OUT",16777215,1,"$(Group):Init:OnSignal2.OUT")
#! Record("$(Group):Init:OffSignal2",1460,1182,0,0,"$(Group):Init:OffSignal2")
#! Field("$(Group):Init:OffSignal2.OUT",16777215,1,"$(Group):Init:OffSignal2.OUT")
#! Record("$(Group):Device:Interlock:Log",3040,574,0,1,"$(Group):Device:Interlock:Log")
#! Field("$(Group):Device:Interlock:Log.INPA",16777215,1,"$(Group):Device:Interlock:Log.INPA")
#! Field("$(Group):Device:Interlock:Log.INPB",16777215,1,"$(Group):Device:Interlock:Log.INPB")
#! Field("$(Group):Device:Interlock:Log.FLNK",16777215,1,"$(Group):Device:Interlock:Log.FLNK")
#! Link("$(Group):Device:Interlock:Log.FLNK","$(Group):Device:Interlock:LogSeq")
#! Field("$(Group):Device:Interlock:Log.VAL",16777215,1,"$(Group):Device:Interlock:Log.VAL")
#! Field("$(Group):Device:Interlock:Log.INPC",16777215,1,"$(Group):Device:Interlock:Log.INPC")
#! Record("$(Group):Device:Interlock:LogSeq",3380,663,0,0,"$(Group):Device:Interlock:LogSeq")
#! Field("$(Group):Device:Interlock:LogSeq.LNK1",16777215,1,"$(Group):Device:Interlock:LogSeq.LNK1")
#! Link("$(Group):Device:Interlock:LogSeq.LNK1","$(Group):GroundFaultIntlk:String.PROC")
#! Field("$(Group):Device:Interlock:LogSeq.LNK2",16777215,1,"$(Group):Device:Interlock:LogSeq.LNK2")
#! Link("$(Group):Device:Interlock:LogSeq.LNK2","$(Group):X2Y2Cooling:String.PROC")
#! Field("$(Group):Device:Interlock:LogSeq.LNK3",16777215,1,"$(Group):Device:Interlock:LogSeq.LNK3")
#! Link("$(Group):Device:Interlock:LogSeq.LNK3","$(Group):X3Y3Cooling:String.PROC")
#! Field("$(Group):Device:Interlock:LogSeq.SELL",16777215,0,"$(Group):Device:Interlock:LogSeq.SELL")
#! Link("$(Group):Device:Interlock:LogSeq.SELL","$(Group):Device:Interlock:Log.VAL")
#! Record("$(Group):GroundFaultIntlk:String",3720,615,0,1,"$(Group):GroundFaultIntlk:String")
#! Field("$(Group):GroundFaultIntlk:String.OUT",16777215,1,"$(Group):GroundFaultIntlk:String.OUT")
#! Field("$(Group):GroundFaultIntlk:String.PROC",16777215,0,"$(Group):GroundFaultIntlk:String.PROC")
#! Record("$(Group):Init:OnSignal",920,1907,0,0,"$(Group):Init:OnSignal")
#! Field("$(Group):Init:OnSignal.FLNK",16777215,1,"$(Group):Init:OnSignal.FLNK")
#! Link("$(Group):Init:OnSignal.FLNK","$(Group):Init:OffSignal")
#! Field("$(Group):Init:OnSignal.OUT",16777215,1,"$(Group):Init:OnSignal.OUT")
#! Record("$(Group):Init:OffSignal",1240,1907,0,0,"$(Group):Init:OffSignal")
#! Field("$(Group):Init:OffSignal.OUT",16777215,1,"$(Group):Init:OffSignal.OUT")
#! Field("$(Group):Init:OffSignal.FLNK",16777215,1,"$(Group):Init:OffSignal.FLNK")
#! Link("$(Group):Init:OffSignal.FLNK","$(Group):OnRequest:Abort:Shutdown")
#! Record("$(Group):Condition:SDSetFalse",4700,3902,0,1,"$(Group):Condition:SDSetFalse")
#! Field("$(Group):Condition:SDSetFalse.OUT",16777215,0,"$(Group):Condition:SDSetFalse.OUT")
#! Link("$(Group):Condition:SDSetFalse.OUT","$(Group):Condition:ShuttingDown:Status.VAL")
#! Record("$(Group):Condition:ShuttingDown:SetTrue",1920,3987,0,1,"$(Group):Condition:ShuttingDown:SetTrue")
#! Field("$(Group):Condition:ShuttingDown:SetTrue.FLNK",16777215,1,"$(Group):Condition:ShuttingDown:SetTrue.FLNK")
#! Link("$(Group):Condition:ShuttingDown:SetTrue.FLNK","$(Group):ZeroCheckSeq")
#! Field("$(Group):Condition:ShuttingDown:SetTrue.OUT",16777215,1,"$(Group):Condition:ShuttingDown:SetTrue.OUT")
#! Link("$(Group):Condition:ShuttingDown:SetTrue.OUT","$(Group):Condition:ShuttingDown:Status.VAL")
#! Field("$(Group):Condition:ShuttingDown:SetTrue.PROC",16777215,0,"$(Group):Condition:ShuttingDown:SetTrue.PROC")
#! Record("$(Group):ZeroCheckSeq",2260,3831,0,0,"$(Group):ZeroCheckSeq")
#! Field("$(Group):ZeroCheckSeq.LNK1",16777215,1,"$(Group):ZeroCheckSeq.LNK1")
#! Field("$(Group):ZeroCheckSeq.LNK2",16777215,1,"$(Group):ZeroCheckSeq.LNK2")
#! Field("$(Group):ZeroCheckSeq.LNK3",16777215,1,"$(Group):ZeroCheckSeq.LNK3")
#! Field("$(Group):ZeroCheckSeq.LNK4",16777215,1,"$(Group):ZeroCheckSeq.LNK4")
#! Record("$(Group):Condition:ShuttingDown:Status",2900,4075,0,1,"$(Group):Condition:ShuttingDown:Status")
#! Field("$(Group):Condition:ShuttingDown:Status.VAL",16777215,1,"$(Group):Condition:ShuttingDown:Status.VAL")
#! Record("$(Group):OfforOffAbortedSeq",4620,3377,0,0,"$(Group):OfforOffAbortedSeq")
#! Field("$(Group):OfforOffAbortedSeq.PROC",16777215,0,"$(Group):OfforOffAbortedSeq.PROC")
#! Field("$(Group):OfforOffAbortedSeq.FLNK",16777215,1,"$(Group):OfforOffAbortedSeq.FLNK")
#! Link("$(Group):OfforOffAbortedSeq.FLNK","$(Group):Condition:SDSetFalse")
#! Field("$(Group):OfforOffAbortedSeq.LNK1",16777215,1,"$(Group):OfforOffAbortedSeq.LNK1")
#! Field("$(Group):OfforOffAbortedSeq.LNK3",16777215,1,"$(Group):OfforOffAbortedSeq.LNK3")
#! Field("$(Group):OfforOffAbortedSeq.LNK2",16777215,1,"$(Group):OfforOffAbortedSeq.LNK2")
#! Field("$(Group):OfforOffAbortedSeq.LNK4",16777215,1,"$(Group):OfforOffAbortedSeq.LNK4")
#! Record("$(Group):CheckOffRequested:BeforeRestore",4260,3287,0,0,"$(Group):CheckOffRequested:BeforeRestore")
#! Field("$(Group):CheckOffRequested:BeforeRestore.INPA",16777215,0,"$(Group):CheckOffRequested:BeforeRestore.INPA")
#! Link("$(Group):CheckOffRequested:BeforeRestore.INPA","$(Group):Request:Status.VAL")
#! Field("$(Group):CheckOffRequested:BeforeRestore.OUT",16777215,1,"$(Group):CheckOffRequested:BeforeRestore.OUT")
#! Link("$(Group):CheckOffRequested:BeforeRestore.OUT","$(Group):OfforOffAbortedSeq.PROC")
#! Record("$(Group):X2Y2Cooling:String",3720,775,0,1,"$(Group):X2Y2Cooling:String")
#! Field("$(Group):X2Y2Cooling:String.OUT",16777215,1,"$(Group):X2Y2Cooling:String.OUT")
#! Field("$(Group):X2Y2Cooling:String.PROC",16777215,0,"$(Group):X2Y2Cooling:String.PROC")
#! Record("$(Group):X3Y3Cooling:String",3740,975,0,1,"$(Group):X3Y3Cooling:String")
#! Field("$(Group):X3Y3Cooling:String.OUT",16777215,1,"$(Group):X3Y3Cooling:String.OUT")
#! Field("$(Group):X3Y3Cooling:String.PROC",16777215,0,"$(Group):X3Y3Cooling:String.PROC")
#! Record("$(Group):Curr:OnRequest",600,1967,0,1,"$(Group):Curr:OnRequest")
#! Field("$(Group):Curr:OnRequest.FLNK",16777215,1,"$(Group):Curr:OnRequest.FLNK")
#! Link("$(Group):Curr:OnRequest.FLNK","$(Group):Init:OnSignal")
#! Field("$(Group):Curr:OnRequest.OUT",16777215,1,"$(Group):Curr:OnRequest.OUT")
#! Link("$(Group):Curr:OnRequest.OUT","$(Group):Request:Status.VAL")
#! Record("$(Group):Curr:OffRequest",460,3807,0,1,"$(Group):Curr:OffRequest")
#! Field("$(Group):Curr:OffRequest.OUT",16777215,1,"$(Group):Curr:OffRequest.OUT")
#! Link("$(Group):Curr:OffRequest.OUT","$(Group):Request:Status.VAL")
#! Field("$(Group):Curr:OffRequest.FLNK",16777215,1,"$(Group):Curr:OffRequest.FLNK")
#! Link("$(Group):Curr:OffRequest.FLNK","$(Group):OffRequest:SO")
#! TextBox(TB4,1400,3980,1400,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB3,980,3980,1000,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB2,380,3720,700,3760,0,"Dialog",28,1,16711731,"SM23A Off Sequence",null)
#! TextBox(TB1,640,1800,960,1840,0,"Dialog",28,1,16711731,"SM23A On Sequence",null)
#! TextBox(TB0,2980,440,3460,540,0,"Dialog",28,1,16711731,"Log Device Interlock Preventing \nSM23A from turning On",null)
#! TextBox(TB8,1160,1100,1740,1140,0,"Dialog",24,1,16711731,"Initialize SM23A On and Off Modicon Coils",null)
#! TextBox(TB7,3340,2860,3820,2960,0,"Dialog",24,1,16711731,"Check for Group Turning on, \nBegin Initialization when it comes on",null)
#! TextBox(TB6,4020,3940,4280,3980,0,"Dialog",24,1,16711731,"ShutDown Timeout",null)
#! TextBox(TB5,1560,3320,2420,3420,0,"Dialog",24,1,16711731,"Turn Group Off if Shutting Down, Off Requested and not Failed,\nand Current < .5 A for all devices in group",null)
#! Record("$(Group):Zero:Check2",1260,3525,0,1,"$(Group):Zero:Check2")
#! Field("$(Group):Zero:Check2.FLNK",16777215,1,"$(Group):Zero:Check2.FLNK")
#! Link("$(Group):Zero:Check2.FLNK","$(Group):Zero:Check")
#! Field("$(Group):Zero:Check2.INPB",16777215,0,"$(Group):Zero:Check2.INPB")
#! Link("$(Group):Zero:Check2.INPB","$(Group):Request:Status.VAL")
#! Field("$(Group):Zero:Check2.INPC",16777215,1,"$(Group):Zero:Check2.INPC")
#! Field("$(Group):Zero:Check2.INPD",16777215,1,"$(Group):Zero:Check2.INPD")
#! Field("$(Group):Zero:Check2.VAL",16777215,1,"$(Group):Zero:Check2.VAL")
#! Field("$(Group):Zero:Check2.INPA",16777215,1,"$(Group):Zero:Check2.INPA")
#! Link("$(Group):Zero:Check2.INPA","$(Group):Condition:ShuttingDown:Status.VAL")
