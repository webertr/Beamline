#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# This gets the status register. It will look for any hardware and communication Errors.
# See Pg. 61 of the manual for a list of the bit meanings.
record(asyn, "$(SubSys):$(Device):HB:ReadError") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(TMOD, "Write/Read")
  field(FLNK, "$(SubSys):$(Device):Asyn:Comm:Error:Check")
  field(AOUT, "*ESR?")
  field(IEOS, "\n")
  field(OEOS, "\n")
}

# Gets the string, and parses it out. It should be ST ####. and that number
# is the status number.
record(scalcout, "$(SubSys):$(Device):HB:Error:ParseRead") {
  field(CALC, "AA")
  field(INAA, "$(SubSys):$(Device):HB:ReadError.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):Freq:GetRead")
}

record(calcout, "$(SubSys):$(Device):Asyn:Comm:Error:Check") {
  field(CALC, "!(A=0)")
  field(INPA, "$(SubSys):$(Device):HB:ReadError.STAT")
  field(OUT, "$(SubSys):$(Device):CommError:Status PP")
  field(FLNK, "$(SubSys):$(Device):HB:Error:ParseRead")
}

record(ai, "$(SubSys):$(Device):ACCurr:SetDevice") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(SubSys):$(Device):ACCurr:SetDevice:Calc")
  field(PREC, "3")
}

record(scalcout, "$(SubSys):$(Device):ACCurr:ParseSet") {
  field(CALC, "PRINTF('CURR:AC %1.4f APP',A)")
  field(INPA, "$(SubSys):$(Device):ACCurr:SetDevice:Calc.VAL")
  field(OUT, "$(SubSys):$(Device):ACCurr:SendSet.AOUT PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(SCAN, "Passive")
  field(PREC, "1")
}

record(asyn, "$(SubSys):$(Device):ACCurr:SendSet") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(TMOD, "Write")
  field(SCAN, "Passive")
  field(OEOS, "\n")
  field(IEOS, "\n")
  field(SDIS, "$(SubSys):Asyn:Disable")
}

# Set magnitude for device coming from paramset.vdb.
# It is a PP call, and initiates the scan of this record,
# which ultimately sends a GPIB command to set the current
# of the PS using an asyn record.
record(ai, "$(SubSys):$(Device):DCCurr:SetDevice") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(SubSys):$(Device):DCCurr:ParseSet")
  field(PREC, "3")
}

# Put Current Value into GPIB String
record(scalcout, "$(SubSys):$(Device):DCCurr:ParseSet") {
  field(CALC, "PRINTF('CURR %1.4f A',A)")
  field(INPA, "$(SubSys):$(Device):DCCurr:SetDevice.VAL")
  field(OUT, "$(SubSys):$(Device):DCCurr:SendSet.AOUT PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(SCAN, "Passive")
  field(PREC, "1")
}

record(asyn, "$(SubSys):$(Device):DCCurr:SendSet") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(TMOD, "Write")
  field(SCAN, "Passive")
  field(OEOS, "\n")
  field(IEOS, "\n")
  field(SDIS, "$(SubSys):Asyn:Disable")
}

record(calc, "$(SubSys):$(Device):ACCurr:Read") {
  field(SCAN, "Passive")
  field(CALC, "A*B")
  field(INPA, "$(SubSys):$(Device):ACCurr:Calc")
  field(INPB, "$(SubSys):On:Status.VAL")
  field(EGU, "A")
  field(PREC, "2")
}

# Voltage is product of voltage value
# and On status.  Thus if supply is off,
# the voltage value will be zero
record(calc, "$(SubSys):$(Device):DCCurr:Read") {
  field(SCAN, "Passive")
  field(CALC, "A*B")
  field(INPA, "$(SubSys):$(Device):DCCurr:Calc")
  field(INPB, "$(SubSys):On:Status.VAL")
  field(EGU, "A")
  field(PREC, "2")
}

# Value of PSET in the Previous scan.
# If the pset is changing from scan to scan, the PSET-Pread<PDiff will not be used.
# Checking this condition is difficult while PSET is changing
# because it changes so much faster than PREAD does.
record(calcout, "$(SubSys):$(Device):DCCurr:SetToChk2") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):DCCurr:SetToChk")
  field(CALC, "A")
  field(INPA, "$(SubSys):$(Device):DCCurr:SetToChk.VAL")
  field(PREC, "4")
}

# Current Value of PSET to be compared with the value of
# PSET during the previous scan.  If they are different,
# this indicates that PSET is changing and the PDIFF
# check will not be made
record(calcout, "$(SubSys):$(Device):DCCurr:SetToChk") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):ACCurr:SetToChk2")
  field(CALC, "A")
  field(INPA, "$(SubSys):$(Device):DCCurr:Set")
  field(PREC, "4")
}

record(calcout, "$(SubSys):$(Device):ACCurr:SetToChk") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):HB:ReadError")
  field(CALC, "A")
  field(INPA, "$(SubSys):$(Device):ACCurr:Set")
  field(PREC, "4")
}

record(calcout, "$(SubSys):$(Device):ACCurr:SetToChk2") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):ACCurr:SetToChk")
  field(CALC, "A")
  field(INPA, "$(SubSys):$(Device):ACCurr:SetToChk.VAL")
  field(PREC, "4")
}

# Not on heartbeat b/c we want a faster scan rate
record(asyn, "$(SubSys):$(Device):MaxCurr:GetRead") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(IEOS, "\n")
  field(TMOD, "Write/Read")
  field(AOUT, "READ:CURR:MAX?")
  field(OEOS, "\n")
  field(SCAN, ".5 second")
  field(FLNK, "$(SubSys):$(Device):MaxCurr:ParseRead")
  field(SDIS, "$(SubSys):Asyn:Disable")
}

# Notice the carriage return and line feed after the sent and recieved messages.
# Not on heartbeat chain b/c we want a faster scan rate.
record(asyn, "$(SubSys):$(Device):MinCurr:GetRead") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(IEOS, "\n")
  field(TMOD, "Write/Read")
  field(AOUT, "READ:CURR:MIN?")
  field(OEOS, "\n")
  field(SCAN, ".5 second")
  field(FLNK, "$(SubSys):$(Device):MinCurr:ParseRead")
  field(SDIS, "$(SubSys):Asyn:Disable")
}

record(calc, "$(SubSys):$(Device):ACCurr:Calc") {
  field(FLNK, "$(SubSys):$(Device):ACCurr:Read")
  field(CALC, "(A-B)")
  field(INPA, "$(SubSys):$(Device):MaxCurr:ParseRead")
  field(INPB, "$(SubSys):$(Device):MinCurr:ParseRead")
}

record(calc, "$(SubSys):$(Device):DCCurr:Calc") {
  field(FLNK, "$(SubSys):$(Device):DCCurr:Read")
  field(CALC, "(A+B)/2")
  field(INPA, "$(SubSys):$(Device):MinCurr:ParseRead")
  field(INPB, "$(SubSys):$(Device):MaxCurr:ParseRead")
}

record(scalcout, "$(SubSys):$(Device):MaxCurr:ParseRead") {
  field(CALC, "AA")
  field(INAA, "$(SubSys):$(Device):MaxCurr:GetRead.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):ACCurr:Calc")
}

# Parse string from power supply containing voltage value
record(scalcout, "$(SubSys):$(Device):MinCurr:ParseRead") {
  field(CALC, "AA")
  field(INAA, "$(SubSys):$(Device):MinCurr:GetRead.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):DCCurr:Calc")
}

record(calc, "$(SubSys):$(Device):ACCurr:SetDevice:Calc") {
  field(FLNK, "$(SubSys):$(Device):ACCurr:ParseSet")
  field(CALC, "A/$(ACCurrMult)")
  field(INPA, "$(SubSys):$(Device):ACCurr:SetDevice")
}

record(asyn, "$(SubSys):$(Device):Freq:GetRead") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(IEOS, "\n")
  field(FLNK, "$(SubSys):$(Device):Freq:ParseRead")
  field(TMOD, "Write/Read")
  field(AOUT, "FREQ?")
  field(OEOS, "\n")
}

record(scalcout, "$(SubSys):$(Device):Freq:ParseRead") {
  field(CALC, "AA")
  field(INAA, "$(SubSys):$(Device):Freq:GetRead.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):Phase:GetPhase")
}

record(scalcout, "$(SubSys):$(Device):Phase:ParseRead") {
  field(CALC, "AA")
  field(INAA, "$(SubSys):$(Device):Phase:GetPhase.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):FuncCheck:Write")
}

record(asyn, "$(SubSys):$(Device):Phase:GetPhase") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(IEOS, "\n")
  field(FLNK, "$(SubSys):$(Device):Phase:ParseRead")
  field(TMOD, "Write/Read")
  field(AOUT, "PHAS?")
  field(OEOS, "\n")
}

# $(SubSys):$(Device):DCCurr:PREADPSET:PDIFF:Calc
record(calcout, "$(SubSys):$(Device):HWErrorCheck:Status") {
  field(FLNK, "$(SubSys):$(Device):DCCurr:PREADPSET:PDIFF:Calc")
  field(CALC, "!(A=$(PHASE))|!(B=100)|!(C=0)|!(D=1)")
  field(INPA, "$(SubSys):$(Device):Phase:ParseRead.VAL")
  field(OUT, "$(SubSys):$(Device):HardwareError:Status PP")
  field(INPB, "$(SubSys):$(Device):Freq:ParseRead.VAL")
  field(INPC, "$(SubSys):$(Device):HB:Error:ParseRead.VAL")
  field(INPD, "$(SubSys):$(Device):FuncCheck:Status")
}

record(asyn, "$(SubSys):$(Device):FuncCheck:Write") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(IEOS, "\n")
  field(TMOD, "Write/Read")
  field(AOUT, "SENSE:FUNC?")
  field(OEOS, "\n")
  field(SCAN, "1 second")
  field(FLNK, "$(SubSys):$(Device):FuncCheck:Scalc")
}

record(scalcout, "$(SubSys):$(Device):FuncCheck:Scalc") {
  field(CALC, "AA=='PEAK\n'")
  field(INAA, "$(SubSys):$(Device):FuncCheck:Write.AINP")
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):$(Device):FuncCheck:Status")
}

record(calc, "$(SubSys):$(Device):FuncCheck:Status") {
  field(CALC, "A")
  field(INPA, "$(SubSys):$(Device):FuncCheck:Scalc.VAL")
  field(FLNK, "$(SubSys):$(Device):HWErrorCheck:Status")
}

#! Further lines contain data used by VisualDCT
#! View(2488,2292,1.0)
#! Record("$(SubSys):$(Device):HB:ReadError",2180,1246,16777215,0,"$(SubSys):$(Device):HB:ReadError")
#! Field("$(SubSys):$(Device):HB:ReadError.FLNK",16777215,1,"$(SubSys):$(Device):HB:ReadError.FLNK")
#! Link("$(SubSys):$(Device):HB:ReadError.FLNK","$(SubSys):$(Device):Asyn:Comm:Error:Check")
#! Field("$(SubSys):$(Device):HB:ReadError.STAT",16777215,1,"$(SubSys):$(Device):HB:ReadError.STAT")
#! Field("$(SubSys):$(Device):HB:ReadError.AINP",16777215,1,"$(SubSys):$(Device):HB:ReadError.AINP")
#! Record("$(SubSys):$(Device):HB:Error:ParseRead",3660,1568,0,0,"$(SubSys):$(Device):HB:Error:ParseRead")
#! Field("$(SubSys):$(Device):HB:Error:ParseRead.INAA",16777215,0,"$(SubSys):$(Device):HB:Error:ParseRead.INAA")
#! Link("$(SubSys):$(Device):HB:Error:ParseRead.INAA","$(SubSys):$(Device):HB:ReadError.AINP")
#! Field("$(SubSys):$(Device):HB:Error:ParseRead.FLNK",16777215,0,"$(SubSys):$(Device):HB:Error:ParseRead.FLNK")
#! Link("$(SubSys):$(Device):HB:Error:ParseRead.FLNK","$(SubSys):$(Device):Freq:GetRead")
#! Field("$(SubSys):$(Device):HB:Error:ParseRead.VAL",16777215,1,"$(SubSys):$(Device):HB:Error:ParseRead.VAL")
#! Record("$(SubSys):$(Device):Asyn:Comm:Error:Check",2540,1308,0,0,"$(SubSys):$(Device):Asyn:Comm:Error:Check")
#! Field("$(SubSys):$(Device):Asyn:Comm:Error:Check.INPA",16777215,0,"$(SubSys):$(Device):Asyn:Comm:Error:Check.INPA")
#! Link("$(SubSys):$(Device):Asyn:Comm:Error:Check.INPA","$(SubSys):$(Device):HB:ReadError.STAT")
#! Field("$(SubSys):$(Device):Asyn:Comm:Error:Check.FLNK",16777215,1,"$(SubSys):$(Device):Asyn:Comm:Error:Check.FLNK")
#! Link("$(SubSys):$(Device):Asyn:Comm:Error:Check.FLNK","$(SubSys):$(Device):HB:Error:ParseRead")
#! Field("$(SubSys):$(Device):Asyn:Comm:Error:Check.OUT",16777215,1,"$(SubSys):$(Device):Asyn:Comm:Error:Check.OUT")
#! Record("$(SubSys):$(Device):ACCurr:SetDevice",160,648,0,1,"$(SubSys):$(Device):ACCurr:SetDevice")
#! Field("$(SubSys):$(Device):ACCurr:SetDevice.FLNK",16777215,1,"$(SubSys):$(Device):ACCurr:SetDevice.FLNK")
#! Link("$(SubSys):$(Device):ACCurr:SetDevice.FLNK","$(SubSys):$(Device):ACCurr:SetDevice:Calc")
#! Field("$(SubSys):$(Device):ACCurr:SetDevice.VAL",16777215,1,"$(SubSys):$(Device):ACCurr:SetDevice.VAL")
#! Record("$(SubSys):$(Device):ACCurr:ParseSet",920,686,0,0,"$(SubSys):$(Device):ACCurr:ParseSet")
#! Field("$(SubSys):$(Device):ACCurr:ParseSet.INPA",16777215,0,"$(SubSys):$(Device):ACCurr:ParseSet.INPA")
#! Link("$(SubSys):$(Device):ACCurr:ParseSet.INPA","$(SubSys):$(Device):ACCurr:SetDevice:Calc.VAL")
#! Field("$(SubSys):$(Device):ACCurr:ParseSet.OUT",16777215,1,"$(SubSys):$(Device):ACCurr:ParseSet.OUT")
#! Link("$(SubSys):$(Device):ACCurr:ParseSet.OUT","$(SubSys):$(Device):ACCurr:SendSet.AOUT")
#! Record("$(SubSys):$(Device):ACCurr:SendSet",1260,706,0,1,"$(SubSys):$(Device):ACCurr:SendSet")
#! Field("$(SubSys):$(Device):ACCurr:SendSet.AOUT",16777215,0,"$(SubSys):$(Device):ACCurr:SendSet.AOUT")
#! Field("$(SubSys):$(Device):ACCurr:SendSet.SDIS",16777215,1,"$(SubSys):$(Device):ACCurr:SendSet.SDIS")
#! Record("$(SubSys):$(Device):DCCurr:SetDevice",140,328,0,1,"$(SubSys):$(Device):DCCurr:SetDevice")
#! Field("$(SubSys):$(Device):DCCurr:SetDevice.FLNK",16777215,1,"$(SubSys):$(Device):DCCurr:SetDevice.FLNK")
#! Link("$(SubSys):$(Device):DCCurr:SetDevice.FLNK","$(SubSys):$(Device):DCCurr:ParseSet")
#! Field("$(SubSys):$(Device):DCCurr:SetDevice.VAL",16777215,1,"$(SubSys):$(Device):DCCurr:SetDevice.VAL")
#! Record("$(SubSys):$(Device):DCCurr:ParseSet",520,366,0,0,"$(SubSys):$(Device):DCCurr:ParseSet")
#! Field("$(SubSys):$(Device):DCCurr:ParseSet.INPA",16777215,0,"$(SubSys):$(Device):DCCurr:ParseSet.INPA")
#! Link("$(SubSys):$(Device):DCCurr:ParseSet.INPA","$(SubSys):$(Device):DCCurr:SetDevice.VAL")
#! Field("$(SubSys):$(Device):DCCurr:ParseSet.OUT",16777215,1,"$(SubSys):$(Device):DCCurr:ParseSet.OUT")
#! Link("$(SubSys):$(Device):DCCurr:ParseSet.OUT","$(SubSys):$(Device):DCCurr:SendSet.AOUT")
#! Record("$(SubSys):$(Device):DCCurr:SendSet",900,386,0,1,"$(SubSys):$(Device):DCCurr:SendSet")
#! Field("$(SubSys):$(Device):DCCurr:SendSet.AOUT",16777215,0,"$(SubSys):$(Device):DCCurr:SendSet.AOUT")
#! Field("$(SubSys):$(Device):DCCurr:SendSet.SDIS",16777215,1,"$(SubSys):$(Device):DCCurr:SendSet.SDIS")
#! Record("$(SubSys):$(Device):ACCurr:Read",3160,620,0,0,"$(SubSys):$(Device):ACCurr:Read")
#! Field("$(SubSys):$(Device):ACCurr:Read.INPA",16777215,0,"$(SubSys):$(Device):ACCurr:Read.INPA")
#! Link("$(SubSys):$(Device):ACCurr:Read.INPA","$(SubSys):$(Device):ACCurr:Calc.VAL")
#! Field("$(SubSys):$(Device):ACCurr:Read.INPB",16777215,1,"$(SubSys):$(Device):ACCurr:Read.INPB")
#! Record("$(SubSys):$(Device):DCCurr:Read",3280,920,0,0,"$(SubSys):$(Device):DCCurr:Read")
#! Field("$(SubSys):$(Device):DCCurr:Read.INPA",16777215,0,"$(SubSys):$(Device):DCCurr:Read.INPA")
#! Link("$(SubSys):$(Device):DCCurr:Read.INPA","$(SubSys):$(Device):DCCurr:Calc.VAL")
#! Field("$(SubSys):$(Device):DCCurr:Read.INPB",16777215,1,"$(SubSys):$(Device):DCCurr:Read.INPB")
#! Record("$(SubSys):$(Device):DCCurr:SetToChk2",260,1234,0,0,"$(SubSys):$(Device):DCCurr:SetToChk2")
#! Field("$(SubSys):$(Device):DCCurr:SetToChk2.FLNK",16777215,1,"$(SubSys):$(Device):DCCurr:SetToChk2.FLNK")
#! Link("$(SubSys):$(Device):DCCurr:SetToChk2.FLNK","$(SubSys):$(Device):DCCurr:SetToChk")
#! Field("$(SubSys):$(Device):DCCurr:SetToChk2.INPA",16777215,1,"$(SubSys):$(Device):DCCurr:SetToChk2.INPA")
#! Link("$(SubSys):$(Device):DCCurr:SetToChk2.INPA","$(SubSys):$(Device):DCCurr:SetToChk.VAL")
#! Record("$(SubSys):$(Device):DCCurr:SetToChk",820,1234,0,0,"$(SubSys):$(Device):DCCurr:SetToChk")
#! Field("$(SubSys):$(Device):DCCurr:SetToChk.FLNK",16777215,1,"$(SubSys):$(Device):DCCurr:SetToChk.FLNK")
#! Link("$(SubSys):$(Device):DCCurr:SetToChk.FLNK","$(SubSys):$(Device):ACCurr:SetToChk2")
#! Field("$(SubSys):$(Device):DCCurr:SetToChk.INPA",16777215,1,"$(SubSys):$(Device):DCCurr:SetToChk.INPA")
#! Field("$(SubSys):$(Device):DCCurr:SetToChk.VAL",16777215,0,"$(SubSys):$(Device):DCCurr:SetToChk.VAL")
#! Record("$(SubSys):$(Device):ACCurr:SetToChk",1840,1254,0,0,"$(SubSys):$(Device):ACCurr:SetToChk")
#! Field("$(SubSys):$(Device):ACCurr:SetToChk.FLNK",16777215,1,"$(SubSys):$(Device):ACCurr:SetToChk.FLNK")
#! Link("$(SubSys):$(Device):ACCurr:SetToChk.FLNK","$(SubSys):$(Device):HB:ReadError")
#! Field("$(SubSys):$(Device):ACCurr:SetToChk.INPA",16777215,1,"$(SubSys):$(Device):ACCurr:SetToChk.INPA")
#! Field("$(SubSys):$(Device):ACCurr:SetToChk.VAL",16777215,0,"$(SubSys):$(Device):ACCurr:SetToChk.VAL")
#! Record("$(SubSys):$(Device):ACCurr:SetToChk2",1340,1254,0,0,"$(SubSys):$(Device):ACCurr:SetToChk2")
#! Field("$(SubSys):$(Device):ACCurr:SetToChk2.FLNK",16777215,1,"$(SubSys):$(Device):ACCurr:SetToChk2.FLNK")
#! Link("$(SubSys):$(Device):ACCurr:SetToChk2.FLNK","$(SubSys):$(Device):ACCurr:SetToChk")
#! Field("$(SubSys):$(Device):ACCurr:SetToChk2.INPA",16777215,1,"$(SubSys):$(Device):ACCurr:SetToChk2.INPA")
#! Link("$(SubSys):$(Device):ACCurr:SetToChk2.INPA","$(SubSys):$(Device):ACCurr:SetToChk.VAL")
#! Record("$(SubSys):$(Device):MaxCurr:GetRead",1780,499,0,0,"$(SubSys):$(Device):MaxCurr:GetRead")
#! Field("$(SubSys):$(Device):MaxCurr:GetRead.FLNK",16777215,1,"$(SubSys):$(Device):MaxCurr:GetRead.FLNK")
#! Link("$(SubSys):$(Device):MaxCurr:GetRead.FLNK","$(SubSys):$(Device):MaxCurr:ParseRead")
#! Field("$(SubSys):$(Device):MaxCurr:GetRead.AINP",16777215,1,"$(SubSys):$(Device):MaxCurr:GetRead.AINP")
#! Field("$(SubSys):$(Device):MaxCurr:GetRead.SDIS",16777215,1,"$(SubSys):$(Device):MaxCurr:GetRead.SDIS")
#! Record("$(SubSys):$(Device):MinCurr:GetRead",1800,859,0,1,"$(SubSys):$(Device):MinCurr:GetRead")
#! Field("$(SubSys):$(Device):MinCurr:GetRead.FLNK",16777215,1,"$(SubSys):$(Device):MinCurr:GetRead.FLNK")
#! Link("$(SubSys):$(Device):MinCurr:GetRead.FLNK","$(SubSys):$(Device):MinCurr:ParseRead")
#! Field("$(SubSys):$(Device):MinCurr:GetRead.AINP",16777215,1,"$(SubSys):$(Device):MinCurr:GetRead.AINP")
#! Field("$(SubSys):$(Device):MinCurr:GetRead.SDIS",16777215,1,"$(SubSys):$(Device):MinCurr:GetRead.SDIS")
#! Record("$(SubSys):$(Device):ACCurr:Calc",2700,588,0,0,"$(SubSys):$(Device):ACCurr:Calc")
#! Field("$(SubSys):$(Device):ACCurr:Calc.INPA",16777215,0,"$(SubSys):$(Device):ACCurr:Calc.INPA")
#! Link("$(SubSys):$(Device):ACCurr:Calc.INPA","$(SubSys):$(Device):MaxCurr:ParseRead.VAL")
#! Field("$(SubSys):$(Device):ACCurr:Calc.FLNK",16777215,1,"$(SubSys):$(Device):ACCurr:Calc.FLNK")
#! Link("$(SubSys):$(Device):ACCurr:Calc.FLNK","$(SubSys):$(Device):ACCurr:Read")
#! Field("$(SubSys):$(Device):ACCurr:Calc.VAL",16777215,1,"$(SubSys):$(Device):ACCurr:Calc.VAL")
#! Field("$(SubSys):$(Device):ACCurr:Calc.INPB",16777215,0,"$(SubSys):$(Device):ACCurr:Calc.INPB")
#! Link("$(SubSys):$(Device):ACCurr:Calc.INPB","$(SubSys):$(Device):MinCurr:ParseRead.VAL")
#! Record("$(SubSys):$(Device):DCCurr:Calc",2680,888,0,0,"$(SubSys):$(Device):DCCurr:Calc")
#! Field("$(SubSys):$(Device):DCCurr:Calc.FLNK",16777215,1,"$(SubSys):$(Device):DCCurr:Calc.FLNK")
#! Link("$(SubSys):$(Device):DCCurr:Calc.FLNK","$(SubSys):$(Device):DCCurr:Read")
#! Field("$(SubSys):$(Device):DCCurr:Calc.VAL",16777215,1,"$(SubSys):$(Device):DCCurr:Calc.VAL")
#! Field("$(SubSys):$(Device):DCCurr:Calc.INPA",16777215,0,"$(SubSys):$(Device):DCCurr:Calc.INPA")
#! Link("$(SubSys):$(Device):DCCurr:Calc.INPA","$(SubSys):$(Device):MinCurr:ParseRead.VAL")
#! Field("$(SubSys):$(Device):DCCurr:Calc.INPB",16777215,0,"$(SubSys):$(Device):DCCurr:Calc.INPB")
#! Link("$(SubSys):$(Device):DCCurr:Calc.INPB","$(SubSys):$(Device):MaxCurr:ParseRead.VAL")
#! Record("$(SubSys):$(Device):MaxCurr:ParseRead",2300,568,0,0,"$(SubSys):$(Device):MaxCurr:ParseRead")
#! Field("$(SubSys):$(Device):MaxCurr:ParseRead.FLNK",16777215,1,"$(SubSys):$(Device):MaxCurr:ParseRead.FLNK")
#! Link("$(SubSys):$(Device):MaxCurr:ParseRead.FLNK","$(SubSys):$(Device):ACCurr:Calc")
#! Field("$(SubSys):$(Device):MaxCurr:ParseRead.INAA",16777215,0,"$(SubSys):$(Device):MaxCurr:ParseRead.INAA")
#! Link("$(SubSys):$(Device):MaxCurr:ParseRead.INAA","$(SubSys):$(Device):MaxCurr:GetRead.AINP")
#! Field("$(SubSys):$(Device):MaxCurr:ParseRead.VAL",16777215,1,"$(SubSys):$(Device):MaxCurr:ParseRead.VAL")
#! Record("$(SubSys):$(Device):MinCurr:ParseRead",2260,928,0,0,"$(SubSys):$(Device):MinCurr:ParseRead")
#! Field("$(SubSys):$(Device):MinCurr:ParseRead.VAL",16777215,1,"$(SubSys):$(Device):MinCurr:ParseRead.VAL")
#! Field("$(SubSys):$(Device):MinCurr:ParseRead.INAA",16777215,0,"$(SubSys):$(Device):MinCurr:ParseRead.INAA")
#! Link("$(SubSys):$(Device):MinCurr:ParseRead.INAA","$(SubSys):$(Device):MinCurr:GetRead.AINP")
#! Field("$(SubSys):$(Device):MinCurr:ParseRead.FLNK",16777215,1,"$(SubSys):$(Device):MinCurr:ParseRead.FLNK")
#! Link("$(SubSys):$(Device):MinCurr:ParseRead.FLNK","$(SubSys):$(Device):DCCurr:Calc")
#! Record("$(SubSys):$(Device):ACCurr:SetDevice:Calc",520,662,0,0,"$(SubSys):$(Device):ACCurr:SetDevice:Calc")
#! Field("$(SubSys):$(Device):ACCurr:SetDevice:Calc.FLNK",16777215,1,"$(SubSys):$(Device):ACCurr:SetDevice:Calc.FLNK")
#! Link("$(SubSys):$(Device):ACCurr:SetDevice:Calc.FLNK","$(SubSys):$(Device):ACCurr:ParseSet")
#! Field("$(SubSys):$(Device):ACCurr:SetDevice:Calc.INPA",16777215,0,"$(SubSys):$(Device):ACCurr:SetDevice:Calc.INPA")
#! Link("$(SubSys):$(Device):ACCurr:SetDevice:Calc.INPA","$(SubSys):$(Device):ACCurr:SetDevice.VAL")
#! Field("$(SubSys):$(Device):ACCurr:SetDevice:Calc.VAL",16777215,1,"$(SubSys):$(Device):ACCurr:SetDevice:Calc.VAL")
#! Record("$(SubSys):$(Device):Freq:GetRead",360,1886,0,1,"$(SubSys):$(Device):Freq:GetRead")
#! Field("$(SubSys):$(Device):Freq:GetRead.FLNK",16777215,1,"$(SubSys):$(Device):Freq:GetRead.FLNK")
#! Link("$(SubSys):$(Device):Freq:GetRead.FLNK","$(SubSys):$(Device):Freq:ParseRead")
#! Field("$(SubSys):$(Device):Freq:GetRead.AINP",16777215,1,"$(SubSys):$(Device):Freq:GetRead.AINP")
#! Record("$(SubSys):$(Device):Freq:ParseRead",980,2168,0,0,"$(SubSys):$(Device):Freq:ParseRead")
#! Field("$(SubSys):$(Device):Freq:ParseRead.FLNK",16777215,1,"$(SubSys):$(Device):Freq:ParseRead.FLNK")
#! Link("$(SubSys):$(Device):Freq:ParseRead.FLNK","$(SubSys):$(Device):Phase:GetPhase")
#! Field("$(SubSys):$(Device):Freq:ParseRead.INAA",16777215,0,"$(SubSys):$(Device):Freq:ParseRead.INAA")
#! Link("$(SubSys):$(Device):Freq:ParseRead.INAA","$(SubSys):$(Device):Freq:GetRead.AINP")
#! Field("$(SubSys):$(Device):Freq:ParseRead.VAL",16777215,1,"$(SubSys):$(Device):Freq:ParseRead.VAL")
#! Record("$(SubSys):$(Device):Phase:ParseRead",1840,2348,0,0,"$(SubSys):$(Device):Phase:ParseRead")
#! Field("$(SubSys):$(Device):Phase:ParseRead.INAA",16777215,0,"$(SubSys):$(Device):Phase:ParseRead.INAA")
#! Link("$(SubSys):$(Device):Phase:ParseRead.INAA","$(SubSys):$(Device):Phase:GetPhase.AINP")
#! Field("$(SubSys):$(Device):Phase:ParseRead.FLNK",16777215,1,"$(SubSys):$(Device):Phase:ParseRead.FLNK")
#! Link("$(SubSys):$(Device):Phase:ParseRead.FLNK","$(SubSys):$(Device):FuncCheck:Write")
#! Field("$(SubSys):$(Device):Phase:ParseRead.VAL",16777215,1,"$(SubSys):$(Device):Phase:ParseRead.VAL")
#! Record("$(SubSys):$(Device):Phase:GetPhase",1500,2226,0,0,"$(SubSys):$(Device):Phase:GetPhase")
#! Field("$(SubSys):$(Device):Phase:GetPhase.FLNK",16777215,1,"$(SubSys):$(Device):Phase:GetPhase.FLNK")
#! Link("$(SubSys):$(Device):Phase:GetPhase.FLNK","$(SubSys):$(Device):Phase:ParseRead")
#! Field("$(SubSys):$(Device):Phase:GetPhase.AINP",16777215,1,"$(SubSys):$(Device):Phase:GetPhase.AINP")
#! Record("$(SubSys):$(Device):HWErrorCheck:Status",3380,2566,0,0,"$(SubSys):$(Device):HWErrorCheck:Status")
#! Field("$(SubSys):$(Device):HWErrorCheck:Status.FLNK",16777215,1,"$(SubSys):$(Device):HWErrorCheck:Status.FLNK")
#! Field("$(SubSys):$(Device):HWErrorCheck:Status.INPD",16777215,0,"$(SubSys):$(Device):HWErrorCheck:Status.INPD")
#! Link("$(SubSys):$(Device):HWErrorCheck:Status.INPD","$(SubSys):$(Device):FuncCheck:Status.VAL")
#! Field("$(SubSys):$(Device):HWErrorCheck:Status.INPA",16777215,0,"$(SubSys):$(Device):HWErrorCheck:Status.INPA")
#! Link("$(SubSys):$(Device):HWErrorCheck:Status.INPA","$(SubSys):$(Device):Phase:ParseRead.VAL")
#! Field("$(SubSys):$(Device):HWErrorCheck:Status.OUT",16777215,1,"$(SubSys):$(Device):HWErrorCheck:Status.OUT")
#! Field("$(SubSys):$(Device):HWErrorCheck:Status.INPB",16777215,0,"$(SubSys):$(Device):HWErrorCheck:Status.INPB")
#! Link("$(SubSys):$(Device):HWErrorCheck:Status.INPB","$(SubSys):$(Device):Freq:ParseRead.VAL")
#! Field("$(SubSys):$(Device):HWErrorCheck:Status.INPC",16777215,1,"$(SubSys):$(Device):HWErrorCheck:Status.INPC")
#! Link("$(SubSys):$(Device):HWErrorCheck:Status.INPC","$(SubSys):$(Device):HB:Error:ParseRead.VAL")
#! TextBox(TB0,840,200,140,240,0,"Dialog",24,1,13369395,"Send current set parameter to XG power supply",null)
#! TextBox(TB1,860,1000,160,1080,0,"Dialog",24,1,13369395,"Get voltage and current from XG power supply\nand check for window interlocks",null)
#! Record("$(SubSys):$(Device):FuncCheck:Write",2240,2352,0,0,"$(SubSys):$(Device):FuncCheck:Write")
#! Field("$(SubSys):$(Device):FuncCheck:Write.FLNK",16777215,1,"$(SubSys):$(Device):FuncCheck:Write.FLNK")
#! Link("$(SubSys):$(Device):FuncCheck:Write.FLNK","$(SubSys):$(Device):FuncCheck:Scalc")
#! Field("$(SubSys):$(Device):FuncCheck:Write.AINP",16777215,1,"$(SubSys):$(Device):FuncCheck:Write.AINP")
#! Record("$(SubSys):$(Device):FuncCheck:Scalc",2580,2448,0,0,"$(SubSys):$(Device):FuncCheck:Scalc")
#! Field("$(SubSys):$(Device):FuncCheck:Scalc.INAA",16777215,0,"$(SubSys):$(Device):FuncCheck:Scalc.INAA")
#! Link("$(SubSys):$(Device):FuncCheck:Scalc.INAA","$(SubSys):$(Device):FuncCheck:Write.AINP")
#! Field("$(SubSys):$(Device):FuncCheck:Scalc.FLNK",16777215,1,"$(SubSys):$(Device):FuncCheck:Scalc.FLNK")
#! Link("$(SubSys):$(Device):FuncCheck:Scalc.FLNK","$(SubSys):$(Device):FuncCheck:Status")
#! Field("$(SubSys):$(Device):FuncCheck:Scalc.VAL",16777215,1,"$(SubSys):$(Device):FuncCheck:Scalc.VAL")
#! Record("$(SubSys):$(Device):FuncCheck:Status",2960,2502,0,0,"$(SubSys):$(Device):FuncCheck:Status")
#! Field("$(SubSys):$(Device):FuncCheck:Status.INPA",16777215,0,"$(SubSys):$(Device):FuncCheck:Status.INPA")
#! Link("$(SubSys):$(Device):FuncCheck:Status.INPA","$(SubSys):$(Device):FuncCheck:Scalc.VAL")
#! Field("$(SubSys):$(Device):FuncCheck:Status.FLNK",16777215,1,"$(SubSys):$(Device):FuncCheck:Status.FLNK")
#! Link("$(SubSys):$(Device):FuncCheck:Status.FLNK","$(SubSys):$(Device):HWErrorCheck:Status")
#! Field("$(SubSys):$(Device):FuncCheck:Status.VAL",16777215,1,"$(SubSys):$(Device):FuncCheck:Status.VAL")
